ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"vdm_task_mngr.c"
  16              		.text
  17              	.Ltext0:
  18              		.section	.gnu.lto_.profile.b3699a43,"",%progbits
  19 0000 789C6361 		.ascii	"x\234ca`d`a`\000\222\\\034\000\000\206\000\035"
  19      60646061 
  19      6000925C 
  19      1C000086 
  19      001D
  20              		.text
  21              		.section	.gnu.lto_.icf.b3699a43,"",%progbits
  22 0000 789C6361 		.ascii	"x\234ca`d\000\001\035\006\004`g\330t\344\360J.F0\311"
  22      60640001 
  22      1D060460 
  22      67D874E4 
  22      F04A2E46 
  23 0016 3469FBE2 		.ascii	"4i\373\342\273\314\314`\222e\357\303w\355\254\254\255"
  23      BBCCCC60 
  23      9265EFC3 
  23      77EDACAC 
  23      AD
  24 0027 DDBF97F0 		.ascii	"\335\277\227\360\263mk:\371\204\211\001\000\322\307"
  24      B36D6B3A 
  24      F9848901 
  24      00D2C7
  25 0036 147B     		.ascii	"\024{"
  26              		.text
  27              		.section	.gnu.lto_.jmpfuncs.b3699a43,"",%progbits
  28 0000 789C6361 		.ascii	"x\234ca`d\000\001\001\006\004`b`bddb\250g\204P\014\000"
  28      60640001 
  28      01060460 
  28      62606264 
  28      6462A867 
  29 0018 089F0123 		.ascii	"\010\237\001#"
  30              		.text
  31              		.section	.gnu.lto_.inline.b3699a43,"",%progbits
  32 0000 789C6361 		.ascii	"x\234ca`d\000\201z\006\004`b``cedfT\310\372\313\304"
  32      60640081 
  32      7A060460 
  32      62606063 
  32      65646654 
  33 0018 38ADF5D0 		.ascii	"8\255\365\320y\366/L\255\314@\205\214\313\031e\030\030"
  33      79F62F4C 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 2


  33      ADCC4085 
  33      8CCB1965 
  33      1818
  34 002a 15B2A134 		.ascii	"\025\262\2414P'+P9\333\002y&\006\226\005\362\002\014"
  34      50272B50 
  34      39DB0279 
  34      26069605 
  34      F2020C
  35 003d 8C4DEC1C 		.ascii	"\214M\354\034L`\022d\014#\314\024\322\2641\000\000\032"
  35      4C601264 
  35      0C23CC14 
  35      D2B43100 
  35      001A
  36 004f 3E10E8   		.ascii	">\020\350"
  37              		.text
  38              		.section	.gnu.lto_.pureconst.b3699a43,"",%progbits
  39 0000 789C6361 		.ascii	"x\234ca`d`e```b\220b\224\002\000\000\355\000B"
  39      60646065 
  39      60606062 
  39      90629402 
  39      0000ED00 
  40              		.text
  41              		.section	.gnu.lto_vdm_get_disc_id_resp.b3699a43,"",%progbits
  42 0000 789C5551 		.ascii	"x\234UQ\317k\023Q\020\236\357\315\266I\323*\036z\314"
  42      CF6B1351 
  42      109EEFCD 
  42      B649D32A 
  42      1E7ACC
  43 0013 A18235E4 		.ascii	"\241\2025\344\"\202\212\377\202\347\236#Kh\203\007\233"
  43      22828AFF 
  43      82E79E23 
  43      4B688307 
  43      9B
  44 0024 76DD04AF 		.ascii	"v\335\004\257}\331$`{\220*\330C\252D\220Z\253\326&\255"
  44      7DD92460 
  44      7B902AD8 
  44      43AA4490 
  44      5AABD626 
  45 0039 88070F41 		.ascii	"\210\007\017AAEh\265\325\223(\324\210?\350\305F\252"
  45      414568B5 
  45      D59328D4 
  45      883FE8C5 
  45      46AA
  46 004b E241E3CC 		.ascii	"\342A\343\314\266\025\035x\314\233\331\357\233\357{"
  46      B6151D78 
  46      CC9BD9EF 
  46      9BEF7B
  47 005a B30E8134 		.ascii	"\263\016\20146$\035\227|L\016:\010fr\205\250\0205\306"
  47      36241D97 
  47      7C4C0E3A 
  47      08667285 
  47      A81035C6 
  48 006e F91E211B 		.ascii	"\371\036!\033\343\312c\"\333\303p\266\373\016\240\027"
  48      E3CA6322 
  48      DBC370B6 
  48      FB0EA017 
  49 007e 1B058D19 		.ascii	"\033\005\215\031v0\206o\346\227\301j\251v\231\267L\231"
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 3


  49      7630866F 
  49      E697C16A 
  49      A97699B7 
  49      4C99
  50 0090 098E94AD 		.ascii	"\011\216\224\255\345\312\373\275Z\002}RN\333\265\361"
  50      E5CAFBBD 
  50      5A027D52 
  50      4EDBB5F1 
  51 00a0 4872D6DA 		.ascii	"Hr\326\332\300\256\177\370\324[Y|a\273\312l\250m\010"
  51      C0AE7FF8 
  51      D45B597C 
  51      61BBCA6C 
  51      A86D08
  52 00b3 3710C72C 		.ascii	"7\020\307,\342\252>\207\244\200\037\255\264\357\307"
  52      E2AA3E87 
  52      A4801FAD 
  52      B4EFC7
  53 00c2 F80048EE 		.ascii	"\370\000H\356\343\017\276\374\354N\314(\321VOZ.3\343"
  53      E30FBEFC 
  53      EC4ECC28 
  53      D1564F5A 
  53      2E33E3
  54 00d5 26587947 		.ascii	"&XyG\3428\034'i\020n!!\330\265\371\302\011N\206\264"
  54      E2381C27 
  54      69106E21 
  54      21D8B5F9 
  54      C2094E86 
  55 00ea F5BB57EF 		.ascii	"\365\273W\357Ewho3\241\026no\323v\345T\036\363H(\374"
  55      4577686F 
  55      33A1166E 
  55      6FD376E5 
  55      541EF348 
  56 0100 FCAB8926 		.ascii	"\374\253\211&\363\321\220:ck\023]\375\327\224\332xy"
  56      F3D1903A 
  56      636B135D 
  56      FDD794DA 
  56      7879
  57 0112 FDCC85A2 		.ascii	"\375\314\205\242}j\035\345\337\371\237\257!\360f\375"
  57      7D6A1DE5 
  57      DFF99FAF 
  57      21F066FD 
  58 0122 F7A53D9D 		.ascii	"\367\245=\235%+\321\207\005\364\353\223\344%5t\352v"
  58      252BD187 
  58      05F4EB93 
  58      E4253574 
  58      EA76
  59 0134 17061AB6 		.ascii	"\027\006\032\266\335.\332\306\352\301\213\237\277\366"
  59      DD2EDAC6 
  59      EAC18B9F 
  59      BFF6
  60 0142 76188492 		.ascii	"v\030\204\222\264) \335b\313\030\315\334D b-\204<\231"
  60      B42920DD 
  60      62CB18CD 
  60      DC442062 
  60      2D843C99 
  61 0156 2283A7CA 		.ascii	"\"\203\247\312\017\237Gt\203\006\204\272\010\276C\351"
  61      0F9F4774 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 4


  61      830684BA 
  61      08BE43E9 
  62 0166 75716939 		.ascii	"uqi9`\005\025\245]\337q\3212L\362\223\370#\202\255\332"
  62      600515A5 
  62      5DDF71D1 
  62      324CF293 
  62      F82382AD 
  63 017b 9BB901FD 		.ascii	"\233\271\001\375.\003~<yv\256\247\212+\005\365\326-"
  63      2E037E3C 
  63      7976AEA7 
  63      8A2B05F5 
  63      D62D
  64 018d 7BFACBC1 		.ascii	"{\372\313\301\"\252\370W\202Eb)\234\3262Nhh\003\301"
  64      22AAF857 
  64      82456229 
  64      9CD6324E 
  64      686803C1 
  65 01a1 3EDA55D8 		.ascii	">\332U\330\024\013\322\024\317\373s\376`*\355y\251\364"
  65      140BD214 
  65      CFFB73FE 
  65      602AED79 
  65      A9F4
  66 01b3 70DECD8E 		.ascii	"p\336\315\216\016eRg\207\262n>\235;\355fGN\371\207\006"
  66      0E655267 
  66      87B26E3E 
  66      9D3BED66 
  66      474EF987 
  67 01c8 C9F146FD 		.ascii	"\311\361F\375|\314\317\344<w83\342z\354\345\375?\007"
  67      7CCCCFE4 
  67      3C773833 
  67      E27AECE5 
  67      FD3F07
  68 01db C3BE02   		.ascii	"\303\276\002"
  69              		.text
  70              		.section	.gnu.lto_vdm_get_disc_svid_resp.b3699a43,"",%progbits
  71 0000 789C5551 		.ascii	"x\234UQAk\023Q\020\236\357\315\266I\323*\036z\314\241"
  71      416B1351 
  71      109EEFCD 
  71      B649D32A 
  71      1E7ACCA1 
  72 0014 8225E422 		.ascii	"\202%\344\"\202\212\177\301s\317\221%\264\301\203M\273"
  72      828A7FC1 
  72      73CF9125 
  72      B4C1834D 
  72      BB
  73 0025 26C16B5F 		.ascii	"&\301k_6\011\330\036D\005=\244\226\010\022\322\252\265"
  73      3609D81E 
  73      44053DA4 
  73      960812D2 
  73      AAB5
  74 0037 492BE2C1 		.ascii	"I+\342\301CPP\021\214Z<y\252\021<\324C\273X\025\017"
  74      43505011 
  74      8C5A3C79 
  74      AA113CD4 
  74      43BB5815 
  75 004c 36CE6C5B 		.ascii	"6\316l[\261\003\217y3\373}\363}o\326!\220\306\246\244"
  75      B1038F79 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 5


  75      33FB7DF3 
  75      7D6FD621 
  75      90C6A6A4 
  76 0060 7392CFCA 		.ascii	"s\222\317\312A\037\301\\\357\020\025\243\3068?#dc\\"
  76      411FC15C 
  76      EF1015A3 
  76      C6383F23 
  76      64635C
  77 0073 7D496487 		.ascii	"}Id\207\030\316^\337\001\364b\243\240\031\303\016f\360"
  77      18CE5EDF 
  77      01F462A3 
  77      A019C30E 
  77      66F0
  78 0085 C3FC31F8 		.ascii	"\303\3741\370Pn\336\341\035Sa\202#e\360\266\372\345"
  78      506EDEE1 
  78      1D536182 
  78      2365F0B6 
  78      FAE5
  79 0097 A896C088 		.ascii	"\250\226\300\210\224\363v}6\222lX\353\333\215\372\367"
  79      94F3767D 
  79      36926C58 
  79      EBDB8DFA 
  79      F7
  80 00a8 E1EAEA7B 		.ascii	"\341\352\352{;PaC=CXD\034\015\304U}\011I\001\277\350"
  80      3B506143 
  80      3D435844 
  80      1C0DC455 
  80      7D094901 
  81 00be F49EC6F8 		.ascii	"\364\236\306\370\004H\356\263\317\266~\017&\352J\264"
  81      0448EEB3 
  81      CFB67E0F 
  81      26EA4AB4 
  82 00ce 6B172C57 		.ascii	"k\027,W\230q\037\254\274\323q\234\212\2234\010\017\220"
  82      98711FAC 
  82      BCD3719C 
  82      8A933408 
  82      0F90
  83 00e0 10ECFA72 		.ascii	"\020\354\372r\361<'C\332\306\343\273O\242\373\264 \023"
  83      F13C2743 
  83      DAC6E3BB 
  83      4FA2FBB4 
  83      2013
  84 00f2 6AE1E11E 		.ascii	"j\341\341\036\355@N\345\261\214\204\302\257}\234\353"
  84      ED404EE5 
  84      B18C84C2 
  84      AF7D9CEB 
  85 0102 329F09A9 		.ascii	"2\237\011\251u\333\234\033\030\275\247\324v\255q\371"
  85      75DB9C1B 
  85      18BDA7D4 
  85      76AD71F9 
  86 0112 46C9BEB6 		.ascii	"F\311\276\266\216\362\037\035\346k\010\274\333\332\275"
  86      8EF21F1D 
  86      E66B08BC 
  86      DBDABD
  87 0121 75A4BF6C 		.ascii	"u\244\277l%F\260\202Q}\222\274\244\211~\335\356\312"
  87      2546B082 
  87      517D92BC 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 6


  87      A4897EDD 
  87      EECA
  88 0133 58DBF67A 		.ascii	"X\333\366z%\333^H\334\\\334\035\3563\010%i[@\272\305"
  88      25DB5E48 
  88      DC5CDC1D 
  88      EE330825 
  88      695B40BA 
  89 0148 C018CDDC 		.ascii	"\300\030\315\334\205/b\001B\236L\221\301\267+\317\337"
  89      852F6201 
  89      429E4C91 
  89      C1B72BCF 
  89      DF
  90 0159 45748306 		.ascii	"Et\203\006\204\226\010~F\371S\351[\307g\005\225\244"
  90      8496087E 
  90      46F953E9 
  90      5BC76705 
  90      95A4
  91 016b DDDA7711 		.ascii	"\335\332w\021\030&\371I\374\025\376NskiL\277\313\200"
  91      1826F949 
  91      FC15FE4E 
  91      736B694C 
  91      BFCB80
  92 017e 5FAFDE5C 		.ascii	"_\257\336\\\035\252a\241\250\336\006eO\3778XE\015\377"
  92      1DAA61A1 
  92      A8DE0665 
  92      4FFF3858 
  92      450DFF
  93 0191 4BB048AC 		.ascii	"K\260H\254\205\323\002\343\204\2066\341\037\243\003"
  93      85D302E3 
  93      848636E1 
  93      1FA303
  94 01a0 856DB120 		.ascii	"\205m\261 M\361|<\237\033O\245=/\225\236,\270\331\351"
  94      4DF17C3C 
  94      9F1B4FA5 
  94      3D2F959E 
  94      2CB8D9E9 
  95 01b4 894CEACA 		.ascii	"\211L\352\312D\326-\244\363\227\334\354\324\305\334"
  95      44D62DA4 
  95      F397DCEC 
  95      D4C5DC
  96 01c3 C97172BC 		.ascii	"\311qr\274\351\\!\226\313\344=w23\345z\354\025r\177"
  96      E95C2196 
  96      CBE43D77 
  96      3233E57A 
  96      EC15727F 
  97 01d7 014493BD 		.ascii	"\001D\223\275u"
  97      75
  98              		.text
  99              		.section	.gnu.lto_.symbol_nodes.b3699a43,"",%progbits
 100 0000 789C6361 		.ascii	"x\234ca`d\360a\000\002&\265z\006\206\011\347\030\030"
 100      6064F061 
 100      000226B5 
 100      7A068609 
 100      E71818
 101 0013 80D4AE06 		.ascii	"\200\324\256\006E\240\200z=#\212\000\253*C\243\020P"
 101      45A0807A 
 101      3D238A00 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 7


 101      AB2A43A3 
 101      1050
 102 0025 25AB0A23 		.ascii	"%\253\012#\204Vf\202\320J\314\020Z\221\005L3\000\000"
 102      84566682 
 102      D04ACC10 
 102      5A91054C 
 102      330000
 103 0038 33240BC3 		.ascii	"3$\013\303"
 104              		.text
 105              		.section	.gnu.lto_.refs.b3699a43,"",%progbits
 106 0000 789C6361 		.ascii	"x\234ca`\004B \000\000\0009\000\007"
 106      60044220 
 106      00000039 
 106      0007
 107              		.text
 108              		.section	.gnu.lto_.decls.b3699a43,"",%progbits
 109 0000 789CBD39 		.ascii	"x\234\2759kPT\307\232\247O\0173\3140@\026q\257\265\305"
 109      6B5054C7 
 109      9AA74F0F 
 109      33CC3040 
 109      1671AFB5 
 110 0015 6E796F11 		.ascii	"nyo\021\303\376\270$\346q7\265\1776Q\257Y\267\366^\250"
 110      C3FEB824 
 110      E67137B5 
 110      7F3651AF 
 110      59B7F65E 
 111 002a 6852FB83 		.ascii	"hR\373\203\252\271\223a\034\247\302cv\346\340\306\177"
 111      AAB99361 
 111      1CA7C263 
 111      76E6E0C6 
 111      7F
 112 003b 474044F0 		.ascii	"G@D\360\001J\344\241DD\243\020\020\001\005\344%\343"
 112      014AE4A1 
 112      4444A310 
 112      100105E4 
 112      25E3
 113 004d 0BA32808 		.ascii	"\013\243(\010j\000\021\005\025\337\022^J\000\221\375"
 113      6A001105 
 113      15DF125E 
 113      4A0091FD 
 114 005d BAFBCC9C 		.ascii	"\272\373\314\2343\343`R\265U;E\317\234\257\373{\277"
 114      33E36052 
 114      B5553B45 
 114      CF9CAFFB 
 114      7BBF
 115 006f BAFBA0E2 		.ascii	"\272\373\240\342\020G>O\3028\356_T\034W\016\317s\360"
 115      10473E4F 
 115      C238EE5F 
 115      541C570E 
 115      CF73F0
 116 0082 C1F0FB25 		.ascii	"\301\360\373%\014\262Z\315\261\017\017\243\001F\023"
 116      0CB25ACD 
 116      B10F0FA3 
 116      014613
 117 0091 0C3F1827 		.ascii	"\014?\030'a\234\203\261\011\2206\303\330\2128\217\017"
 117      619C83B1 
 117      099036C3 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 8


 117      D88A388F 
 117      0F
 118 00a2 C105965C 		.ascii	"\301\005\226\\\010\214P\211O\225\264\206\244u\357O\323"
 118      088C5089 
 118      4F95B486 
 118      A475EF4F 
 118      D3
 119 00b3 AFD034F9 		.ascii	"\257\3204\371\240\231\345Qgj\345^<\301\243\020\035R"
 119      A099E551 
 119      676AE55E 
 119      3CC1A310 
 119      1D52
 120 00c5 01387AB9 		.ascii	"\0018z\271\340n\020\200\241:\264\030\300\243\233\356"
 120      E06E1080 
 120      A13AB418 
 120      C0A39BEE 
 121 00d5 95FA0318 		.ascii	"\225\372\003\030\246Cs\210\300O\353\247\002\031L\210"
 121      A6437388 
 121      C04FEBA7 
 121      02194C88 
 122 00e5 6F4F95AC 		.ascii	"oO\225\254\214,\027\341\223%\212</s=\356\034?\242\302"
 122      8C2C17E1 
 122      93258A3C 
 122      2F733DEE 
 122      1C3FA2C2 
 123 00f9 010489EF 		.ascii	"\001\004\211\357<\326{N\213\"t\207\010\336@\337\304"
 123      3CD67B4E 
 123      8B227487 
 123      08DE40DF 
 123      C4
 124 010a A729A288 		.ascii	"\247)\242\210P\005\322\241r\204Q\031\212$\012\206\351"
 124      5005D2A1 
 124      72845119 
 124      8A240A86 
 124      E9
 125 011b E03B5D14 		.ascii	"\340;]\024\223\305\221bQ\275\210C\037\204\241\367\302"
 125      93C59162 
 125      51BD8843 
 125      1F84A1F7 
 125      C2
 126 012c 38740445 		.ascii	"8t\004E\020a\004\013\375\200\302P)\012#\374K\367\225"
 126      1061040B 
 126      FD80C250 
 126      290A23FC 
 126      4BF795
 127 013f 9C0DC479 		.ascii	"\234\015\304y\210\012x\226\363$\035\273\005dg\206\225"
 127      880A7896 
 127      F3241DBB 
 127      05646786 
 127      95
 128 0150 89E25BA8 		.ascii	"\211\342[\250\012\004\034\225\005\200<\337\022*}K\230"
 128      0A041C95 
 128      05803CDF 
 128      122A7D4B 
 128      98
 129 0161 2B18CDD3 		.ascii	"+\030\315\323\3503\010~V\212\030\362\357\224_\011\254"
 129      E833087E 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 9


 129      568A18F2 
 129      EF945F09 
 129      AC
 130 0172 1F86750E 		.ascii	"\037\206u\016U#=u,\374\022\344\302\212\022m\037\352"
 130      55233D75 
 130      2CFC12E4 
 130      C28A126D 
 130      1FEA
 131 0184 453C92B2 		.ascii	"E<\222\262\202C\210}#:86(\010\017<\375\346\334S\356"
 131      8243887D 
 131      233A3836 
 131      28080F3C 
 131      FDE6DC53 
 132 0199 1F8E7C73 		.ascii	"\037\216|s\014\237\316\311\314\350\237\353w\316\365"
 132      0C9FCEC9 
 132      CCE89FEB 
 132      77CEF5
 133 01a8 A14C64EE 		.ascii	"\241Ld\356H\"Bn\015\030\025[\347%4\2161\347e\002\005"
 133      4822426E 
 133      0D18155B 
 133      E725348E 
 133      31E76502 
 134 01bd 3FA6AE42 		.ascii	"?\246\256B'\344i\023r\305\370\344\215m)*\234\313\323"
 134      27E46913 
 134      72C5F8E4 
 134      8D6D292A 
 134      9CCBD3
 135 01d0 4CB83753 		.ascii	"L\2707Sr6X\3053\217\240\257Td\356H\321\361\003At\216"
 135      723658C5 
 135      338FA0AF 
 135      5464EE48 
 135      D1F10341 
 136 01e6 F8AE06D1 		.ascii	"\370\256\006\321\311ss\223\316`\226o<\200]#\227\012"
 136      C9737393 
 136      CE60966F 
 136      3C805D23 
 136      970A
 137 01f8 0358BEBD 		.ascii	"\003X\276\275E\362f|\307+\274h7\011\244\230\".\346)"
 137      45F2667C 
 137      C72BBC68 
 137      3709A498 
 137      222EE629 
 138 020c B713E0F5 		.ascii	"\267\023\340\365:\352\365z\264\010\276k\221\212i\220"
 138      3AEAF57A 
 138      B408BE6B 
 138      918A6990 
 139 021c B7E3F29E 		.ascii	"\267\343\362\236\340?\024\211E\225\342@\375\325\250"
 139      E03F1489 
 139      4595E240 
 139      FDD5A8
 140 022b D2E3F744 		.ascii	"\322\343\367DQ\247\"X\350\270\034yx$?\307P\037\030\322"
 140      51A72258 
 140      E8B81C79 
 140      78243FC7 
 140      501F18D2 
 141 023f 80FE0084 		.ascii	"\200\376\000\204\223\265\227\333\202p;S}\266\350tu\000"
 141      93B597DB 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 10


 141      82703B53 
 141      7DB6E874 
 141      7500
 142 0251 E3E22C38 		.ascii	"\343\342,8\214\362Eg2H\347)\233F\231M\243\222M\023e"
 142      8CF24567 
 142      3248E729 
 142      9B46994D 
 142      A3924D13 
 143 0266 F3AAA0E8 		.ascii	"\363\252\240\350!\302C\214\315\231\271\373\267\003\337"
 143      21C2438C 
 143      CD99B9FB 
 143      B703DF
 144 0275 3E201615 		.ascii	"> \026\025\213\003-\271\302\336\352\233\242\230\306"
 144      8B032DB9 
 144      C2DEEA9B 
 144      A298C6
 145 0284 D2B09971 		.ascii	"\322\260\231q\2212\216#0|\237Do\003YQ\371p\206\026\213"
 145      91328E23 
 145      307C9F44 
 145      6F035951 
 145      F9708616 
 146 0299 98F2B87C 		.ascii	"\230\362\270|\356j\236\006\357\244\200\352\321\321\375"
 146      EE6A9E06 
 146      EFA480EA 
 146      D1D1FD
 147 02a8 BB75481B 		.ascii	"\273uH\033\206\300|\024\261\231fnr\321b\344\316\334"
 147      86C07C14 
 147      B199666E 
 147      72D162E4 
 147      CEDC
 148 02ba B390B9A7 		.ascii	"\263\220\271\247\220\026X\235\006\2243\340\241\002\321"
 148      9016589D 
 148      069433E0 
 148      A102D1
 149 02c9 9FCE1488 		.ascii	"\237\316\024\210\351\244\004\310\343!Wur\004DNj\205"
 149      E9A404C8 
 149      E3215775 
 149      7204444E 
 149      6A85
 150 02db 2B8485BB 		.ascii	"+\204\205\273g&1\323\331\331<\376^\256\350\334\250\242"
 150      672631D3 
 150      D9D93CFE 
 150      5EAEE8DC 
 150      A8A2
 151 02ed 682D5E1A 		.ascii	"h-^\032\267P\215\317Q\215_u^KU\343<\246q\335\340\267"
 151      B7508DCF 
 151      518D5F75 
 151      5E4B55E3 
 151      3CA671DD 
 152 0303 2D5A16CE 		.ascii	"-Z\026\316\036\002\317<\314\351E\014&\205\221\334\330"
 152      1E02CF3C 
 152      CCE9450C 
 152      268591DC 
 152      D8
 153 0314 9B1DCCC2 		.ascii	"\233\035\314\302;@\226\257\336\337\237\252g\313WX\332"
 153      3B4096AF 
 153      DEDF9FAA 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 11


 153      67CB5758 
 153      DA
 154 0325 1C690862 		.ascii	"\034i\010b\260\032\300\306\272\246V?\206\376\036\200"
 154      B01AC0C6 
 154      BAA6563F 
 154      86FE1E80 
 155 0335 DFF55D9D 		.ascii	"\337\365]\235\303\370{&i\317x\377#-[\213\000\260z\374"
 155      C3F87B26 
 155      69CF78FF 
 155      232D5B8B 
 155      00B07AFC 
 156 0349 A7231A5C 		.ascii	"\247#\032\\\301\326\206S\207\006\244,ZD\312q\246a\334"
 156      C1D68653 
 156      8706A42C 
 156      5A44CA71 
 156      A661DC
 157 035c 0F37B1B5 		.ascii	"\0177\261\265\236\227\303\023\020k\006l\033?\321\200"
 157      9E97C313 
 157      106B066C 
 157      1B3FD180 
 158 036c F03D067C 		.ascii	"\360=\006|?=3BZ\337\022hnsX\321\335\226\260\356\326"
 158      3F3D3342 
 158      5ADF1268 
 158      6E7358D1 
 158      DD96B0EE 
 159 0381 D276E190 		.ascii	"\322v\341\220\036\217Qd\276\353t\336l\000\322E\320\016"
 159      1E8F5164 
 159      BEEB74DE 
 159      6C00D245 
 159      D00E
 160 0393 02B9A98B 		.ascii	"\002\271\251\213\340\334\211\211z \022K\244\036r\035"
 160      E0DC8989 
 160      7A20124B 
 160      A41E721D 
 161 03a3 26AFC1A4 		.ascii	"&\257\301\244\324\356\236\376\007mw\335\220\006?\311"
 161      D4EE9EFE 
 161      076D77DD 
 161      90063FC9 
 162 03b3 C9B44427 		.ascii	"\311\264D'\325Pv\337}\035\236e\"\016\336\025\033U\363"
 162      D55076DF 
 162      7D1D9E65 
 162      220EDE15 
 162      1B55F3
 163 03c6 89E89B57 		.ascii	"\211\350\233WDv\346\222r\022\355\033 \242W\026\321\215"
 163      4476E692 
 163      7212ED1B 
 163      20A25716 
 163      D18D
 164 03d8 2419C3B5 		.ascii	"$\031\303\265\007\216\351q\232\212\310\320tl{\374\011"
 164      078EE971 
 164      9A8AC8D0 
 164      746C7BFC 
 164      09
 165 03e9 0A0F5F10 		.ascii	"\012\017_\020\036\036\021^L\344\014\364\336\371[C\323"
 165      1E1E115E 
 165      4CE40CF4 
 165      DEF95B43 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 12


 165      D3
 166 03fa 802866E8 		.ascii	"\200(f\350)\207\253\300\3416Z \013~\227\304\177)|q\024"
 166      2987ABC0 
 166      E1365A20 
 166      0B7E97C4 
 166      7F297C71 
 167 040f DFD9B73D 		.ascii	"\337\331\267=\220\344\011\246y\322%aK\031IqO\220R\345"
 167      90E409A6 
 167      79D22561 
 167      4B194971 
 167      4F9052E5 
 168 0423 B2A5BC13 		.ascii	"\262\245\274\023I\263\273\004\314\332h\005\023d\222"
 168      49B3BB04 
 168      CCDA6805 
 168      136492
 169 0432 5877C09C 		.ascii	"Xw\300\234~\024\216n\301\030\2041\000\343.\012\247\211"
 169      7E148E6E 
 169      C1188431 
 169      00E32E0A 
 169      A789
 170 0444 C9E4DC6E 		.ascii	"\311\344\334n\017brH\005u\370\220S\202d\245\372\225"
 170      0F627248 
 170      0575F890 
 170      538264A5 
 170      FA95
 171 0456 4A75FA40 		.ascii	"Ju\372@\276B\221\251\303\234\327\333\365\"\024\012\240"
 171      BE4291A9 
 171      C39CD7DB 
 171      F522140A 
 171      A0
 172 0467 7092B364 		.ascii	"p\222\263d\251\243JF7}0j\247\214\300\255\015\307K{4"
 172      A9A34A46 
 172      377D306A 
 172      A78CC0AD 
 172      0DC74B7B 
 173 047c F820752B 		.ascii	"\370 u+\277g4\2659\030-\210\360i5\272\017\306\376\026"
 173      BF6734B5 
 173      39182D88 
 173      F06935BA 
 173      0FC6FE16 
 174 0490 C3997AE3 		.ascii	"\303\231z\343\355\210\2507\004\004\367\344p\022m\251"
 174      ED88A837 
 174      0404F7E4 
 174      70126DA9 
 175 04a0 5C578D84 		.ascii	"\\W\215\204\260\032qm\330!l\303\256x\330\262W\307*A"
 175      B01A716D 
 175      D8216CC3 
 175      AE78D8B2 
 175      57C72A41 
 176 04b4 24FDB5FE 		.ascii	"$\375\265\376D;\306\265TIt\242\371\331\373\0143\214"
 176      443BC6B5 
 176      544974A2 
 176      F9D9FB0C 
 176      338C
 177 04c6 E8DF3FEA 		.ascii	"\350\337?\352\224jf\200l\355\251\265u[\364\370,C\355"
 177      946A6680 
 177      6CEDA9B5 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 13


 177      755BF4F8 
 177      2C43ED
 178 04d9 CC68ED0A 		.ascii	"\314h\355\012\306\355\014(\355\232*\326\350\322\251"
 178      C6ED0C28 
 178      ED9A2AD6 
 178      E8D2A9
 179 04e8 69742B0C 		.ascii	"it+\014Q\356\204?\223<\003\337PS\001{\372NU\212\036"
 179      51EE843F 
 179      933C03DF 
 179      5053017B 
 179      FA4E558A 
 180 04fd 7731D286 		.ascii	"w1\322\206\224\262\312@&\344\237\000\354\377\261\264"
 180      94B2CA40 
 180      26E49F00 
 180      ECFFB1B4 
 181 050d 8C54DC3B 		.ascii	"\214T\334;\244\342\346\346\202\0255\367\016\253\271"
 181      A4E2E6E6 
 181      821535F7 
 181      0EABB9
 182 051c AE1D6307 		.ascii	"\256\035c\0075\370\006\363jY\366\223.\305\311\341\240"
 182      35F806F3 
 182      6A59F693 
 182      2EC5C9E1 
 182      A0
 183 052d BE9EE4F9 		.ascii	"\276\236\344\371\013\310\207\011\3311\357\270\367u\252"
 183      0BC88709 
 183      D931EFB8 
 183      F775AA
 184 053c 1CE7560D 		.ascii	"\034\347V\015=\007W\277#\225\3148L\216Ig\207\203\331"
 184      3D0757BF 
 184      2395CC38 
 184      4C8E4967 
 184      8783D9
 185 054f C56A3CC4 		.ascii	"\305j<\304D\374P\321\321\252q\325\2347\203)\037\014"
 185      44FC50D1 
 185      D1AA71D5 
 185      9C378329 
 185      1F0C
 186 0561 5C35F721 		.ascii	"\\5\367!\255\271_@\227IY\227\027\256\232s\355r\241l"
 186      ADB95F40 
 186      97495997 
 186      17AE9A73 
 186      ED72A16C 
 187 0575 97CB7EBA 		.ascii	"\227\313~\272\355#<L%\342\224\351\356m~\210uu\035m\324"
 187      ED233C4C 
 187      25E294E9 
 187      EE6D7E88 
 187      75751D6D 
 188 058a EFA15740 		.ascii	"\357\241W@Gz7\371eG\224d\247\334\3509:\317\241Y y\311"
 188      477A37F9 
 188      65479464 
 188      A7DCE839 
 188      3ACFA159 
 189 05a1 6C187D59 		.ascii	"l\030}YX'5\303P\262\205\215\\\231\3253P\007`_\366\356"
 189      582735C3 
 189      50B2858D 
 189      5C99D533 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 14


 189      5007605F 
 190 05b7 07184F33 		.ascii	"\007\030O3y\316\314\227\247TT\030\014*odN\203RxI\222"
 190      79CECC97 
 190      A7545418 
 190      0C2A6F64 
 190      4E835278 
 191 05cd 98E2542B 		.ascii	"\230\342T+\372\014GW8\224\312\207\241d\236\355(d\006"
 191      FA0C4757 
 191      3894CA87 
 191      A1649EED 
 191      286406
 192 05e0 B8966C39 		.ascii	"\270\226l9\365\223\037N\363\243q\032\311-\275\244\306"
 192      F5931F4E 
 192      F3A3711A 
 192      C92DBDA4 
 192      C6
 193 05f1 3B1970B6 		.ascii	";\031p\266,\263S\207\367R@3\372t_\245\037\202\006\003"
 193      2CB35387 
 193      F7524033 
 193      FA745FA5 
 193      1F820603 
 194 0605 1FA91E48 		.ascii	"\037\251\036H\007T)\374\272\231\307(\235g\365\260\235"
 194      075429FC 
 194      BA99C728 
 194      9D67F5B0 
 194      9D
 195 0616 8F405BF8 		.ascii	"\217@[\370p\224\001c+\214L^\321\004\2409\255\253\270"
 195      70940163 
 195      2B8C4C5E 
 195      D104A039 
 195      ADABB8
 196 0629 362096AC 		.ascii	"6 \226\254#J\2404\211N\344\335\275\211F`\033\320):\324"
 196      234AA034 
 196      894EE4DD 
 196      BD894660 
 196      1BD0293A 
 197 063e CD4CBDF3 		.ascii	"\315L\275\363\264\232Rlz\003\005\314\271IF\332\002\010"
 197      B49A526C 
 197      7A0305CC 
 197      B94946DA 
 197      0208
 198 0650 09F819CD 		.ascii	"\011\370\031\315 F2\215\\U\357\246\030Ut\234[\262\220"
 198      2046328D 
 198      5C55EFA6 
 198      1855749C 
 198      5BB290
 199 0663 8D6F1032 		.ascii	"\215o\0202\347\"!\205\335\306\347\213\351\213P\224\216"
 199      E7222185 
 199      DDC6E78B 
 199      E98B5094 
 199      8E
 200 0674 A3F86E7F 		.ascii	"\243\370n\177\310-\226u\200\356\314 \322\001\000G\331"
 200      C82D9675 
 200      80EECC20 
 200      D2010047 
 200      D9
 201 0685 A0C0D1B7 		.ascii	"\240\300\321\267z2\227\340\003\314\351\367\353\232\273"
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 15


 201      7A3297E0 
 201      03CCE9F7 
 201      EB9ABB
 202 0694 35B88C01 		.ascii	"5\270\214\001\203\235g\356hp\035\213\300\356\224-\027"
 202      839D67EE 
 202      68701D8B 
 202      C0EE942D 
 202      17
 203 06a5 0359930F 		.ascii	"\003Y\223\017\217`\332\266d.\314\0233\376\301\355\223"
 203      8F60DAB6 
 203      642ECC13 
 203      33FEC1ED 
 203      93
 204 06b6 1C1FEAEE 		.ascii	"\034\037\352\356\366\362I\227\247Or^\367\311n\267O|"
 204      F6F24997 
 204      A74F725E 
 204      F7C96EB7 
 204      4F7C
 205 06c8 C7395B92 		.ascii	"\3079[\222D\342\234\007q\316\005\374\2350\276\205\261"
 205      44E29C07 
 205      71CE05FC 
 205      9D30BE85 
 205      B1
 206 06d9 4B1967E7 		.ascii	"K\031g\347\025Oo\316\247\236\322\233\327\025\336\314"
 206      154F6FCE 
 206      A79ED29B 
 206      D715DECC 
 207 06e9 F1ED4DC6 		.ascii	"\361\355M\306\273Ya{\326\033\230+\002P\317\002\220\363"
 207      BB59617B 
 207      D61B982B 
 207      0250CF02 
 207      90F3
 208 06fb 5A009ACB 		.ascii	"Z\000\232\313o\225\373\341\223\314\351\007Zo_T\343\037"
 208      6F95FBE1 
 208      93CCE907 
 208      5A6F5F54 
 208      E31F
 209 070d 19D077EA 		.ascii	"\031\320w\352\352\024\306W(\240\036Ji,\205\010(\002"
 209      EA14C657 
 209      28A01E4A 
 209      692C8508 
 209      2802
 210 071f 50A550A2 		.ascii	"P\245P\242\000\224(\364\241\304>w\000|\273s\217DG\334"
 210      009428F4 
 210      A1C43E77 
 210      007CBB73 
 210      8F4447DC 
 211 0733 B91FDC59 		.ascii	"\271\037\334Y\004\370{a|\347\341\312j\317\260\025\276"
 211      04F87B61 
 211      7CE7E1CA 
 211      6ACFB015 
 211      BE
 212 0744 1EB67D5E 		.ascii	"\036\266}^\236\254Qx\262\360M\236\334\347\345\311\371"
 212      9EAC5178 
 212      B2F04D9E 
 212      DCE7E5C9 
 212      F9
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 16


 213 0755 8C507872 		.ascii	"\214Pxr\017\363d\341k\236\334um[7\306\275\314yg\272"
 213      0FF364E1 
 213      6B9EDC75 
 213      6D5B37C6 
 213      BDCC7967 
 214 076a 2EA7F3B8 		.ascii	".\247\363\270\237\001\343\271\233\266\370\263f\366;"
 214      9F01E3B9 
 214      9BB6F8B3 
 214      66F63B
 215 0779 B2A38D4D 		.ascii	"\262\243\215MT\250\031H\366\213\023\337\035\374E\203"
 215      54A81948 
 215      F68B13DF 
 215      1DFC4583 
 216 0789 8718EA44 		.ascii	"\207\030\352D\306\246I\314\3264\000fN\267\215\251\360"
 216      C6A649CC 
 216      D6340066 
 216      4EB78DA9 
 216      F0
 217 079a 305B3BDC 		.ascii	"0[;\3344t7\010OR\000g\335\317)\320\323\016\010\177R"
 217      34743708 
 217      4F520067 
 217      DDCF29D0 
 217      D30E087F 
 218 07af 871DF8BD 		.ascii	"\207\035\370\275\242\303\376@\273^\031\030S.u=2\303"
 218      A2C3FE40 
 218      BB5E1918 
 218      532E753D 
 218      32C3
 219 07c1 DAE5BFD1 		.ascii	"\332\345\277\321g`\231?\366xR\205\347X\225"
 219      6760993F 
 219      F6785285 
 219      E75895
 220 07d0 A50D3933 		.ascii	"\245\01593\265o\356sG\300G\025R\300\216C\300\216\201"
 220      B56FEE73 
 220      47C04715 
 220      52C08E43 
 220      C08E81
 221 07e3 6FAA601C 		.ascii	"o\252`\034\205Q\351\021\264\331\314\205\271\304\263"
 221      8551E911 
 221      B4D9CC85 
 221      B9C4B3
 222 07f2 70113D24 		.ascii	"p\021=$\021}\340\021\263j \371^Q\234\257<\243\\\361"
 222      117DE011 
 222      B36A20F9 
 222      5E519CAF 
 222      3CA35CF1 
 223 0806 7A9409C5 		.ascii	"z\224\011\305A\005\3054\243\000\011%\363J8\314\313Y"
 223      4105C534 
 223      A3000925 
 223      F34A38CC 
 223      CB59
 224 0818 B1AB5DCE 		.ascii	"\261\253]\316\212\2127e\305\224\244;8\011\225J\254\201"
 224      8A8A3765 
 224      C594A43B 
 224      3809954A 
 224      AC81
 225 082a 91376F45 		.ascii	"\2217oER<gIQ\341\235\024\232'5%\317xD]\032*\025N~f0"
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 17


 225      523C6749 
 225      51E19D14 
 225      9A273525 
 225      CF78445D 
 226 0845 DCC85231 		.ascii	"\334\310R1\345S\014\354\033\370\320yt\241M\0013lR\344"
 226      E5530CEC 
 226      1BF8D079 
 226      74A14D01 
 226      336C52E4 
 227 0859 3B7E0D7B 		.ascii	";~\015{\327v\011\233\250|\340\327\260k\\\274I\332\347"
 227      D776099B 
 227      A87CE0D7 
 227      B06B5CBC 
 227      49DAE7
 228 086c FF1AF658 		.ascii	"\377\032\366X\233^\3142\322>?\202\346\305\335\351+o"
 228      9B5ECC32 
 228      D23E3F82 
 228      E6C5DDE9 
 228      2B6F
 229 087e 388A4D92 		.ascii	"8\212M\222\246\021\222\246\006|w\002F-\214z\030u\274"
 229      A61192A6 
 229      067C7702 
 229      462D8C7A 
 229      1875BC
 230 0891 F2B0F86D 		.ascii	"\362\260\370m\033=\313\002\201W}\015\2666,\304ijz\310"
 230      1B3DCB02 
 230      81577D0D 
 230      B6362CC4 
 230      696A7AC8 
 231 08a5 A9AC773E 		.ascii	"\251\254w>\010B\021\241\214$w;=_\236\004\031M\274\373"
 231      084211A1 
 231      8C24773B 
 231      3D5F9E04 
 231      194DBCFB 
 232 08b9 E84238CC 		.ascii	"\350B8\314\243\017j\0065~\213J\344\316_\235R\311\207"
 232      A30F6A06 
 232      357E8B4A 
 232      E4CE5F9D 
 232      52C987
 233 08cc 6449C7E0 		.ascii	"dI\307\340OTT\314S`\364\204\032\326\302\207\270\216"
 233      4F5454CC 
 233      5360F484 
 233      1AD6C287 
 233      B88E
 234 08de 8CE48ADB 		.ascii	"\214\344\212\333\327\3642\025\342\035\021\276@j0\312"
 234      D7F43215 
 234      E21D11BE 
 234      406A30CA 
 235 08ee 33FF3370 		.ascii	"3\3773p\333\031\336\363\364\255\354,\354\024\177\206"
 235      DB19DEF3 
 235      F4ADEC2C 
 235      EC147F86 
 236 08fe F73EC5C3 		.ascii	"\367>\305\303ZU{\350F\032*\220\207\206%>.-\224\267\007"
 236      5A557BE8 
 236      461A2A90 
 236      8786253E 
 236      2E2D94B7 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 18


 237 0913 F9BC0EF6 		.ascii	"\371\274\016\366>\002\204\207T\3153R\321\236\002c\235"
 237      3E028487 
 237      54CD3352 
 237      D19E0263 
 237      9D
 238 0924 60E069D9 		.ascii	"`\340i\331\300\235\031\307\267\303\301\20796\343F\306"
 238      C09D19C7 
 238      B7C3C187 
 238      3936E346 
 238      C6
 239 0935 B0BFC7B1 		.ascii	"\260\277\307\261_\301\006\265\002\365|\234\230\0155"
 239      5FC106B5 
 239      02F57C9C 
 239      980D35
 240 0944 2C14E700 		.ascii	",\024\347\000\351\254\034\012b\022\225\345z9\022\302"
 240      E9AC1C0A 
 240      621295E5 
 240      7A3912C2 
 241 0954 5E8E9CBA 		.ascii	"^\216\234\272\346\274\300\343\022*\332}\002\014\221"
 241      E6BCC0E3 
 241      122ADA7D 
 241      020C91
 242 0963 4E80B7B3 		.ascii	"N\200\267\263\2624\254\023\026\221\323\374\343\303\371"
 242      B234AC13 
 242      1691D3FC 
 242      E3C3F9
 243 0972 7075AE67 		.ascii	"pu\256g\270%\367\367n\227\216\207\037\003X\3208qQ\272"
 243      B825F7F7 
 243      6E978E87 
 243      1F0358D0 
 243      387151BA 
 244 0986 41F803F8 		.ascii	"A\370\003\370h\307\205\363\032|\231\241\212SY\223A\270"
 244      68C785F3 
 244      1A7C99A1 
 244      8A535993 
 244      41B8
 245 0998 8701FD35 		.ascii	"\207\001\3755?\037Q\341\007\014\350\030\256z\256\306"
 245      3F1F51E1 
 245      070CE818 
 245      AE7AAEC6 
 246 09a8 330C683D 		.ascii	"3\014h=\334\330\030\2007k(\260sW\361\003=.`\300\225"
 246      DCD81880 
 246      376B28B0 
 246      7357F103 
 246      3D2E60C0 
 247 09bd E28C1708 		.ascii	"\342\214\027\010\037d\300\313\266\301\206@|\224\001"
 247      1F64C0CB 
 247      B6C18640 
 247      7C9401
 248 09cc 13CD1DCD 		.ascii	"\023\315\035\315\032\\\317\200\372\236\255\251j\334"
 248      1A5CCF80 
 248      FA9EADA9 
 248      6ADC
 249 09da 4A81C0C9 		.ascii	"J\201\300\311\347\2035~\254\354\303\311\261%\"\234\335"
 249      E783357E 
 249      ACECC3C9 
 249      B125229C 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 19


 249      DD
 250 09eb 4D9D57CF 		.ascii	"M\235W\317{\335\001\007\344|\270Lz\025\272\244\350p"
 250      7BDD0107 
 250      E47CB84C 
 250      7A15BAA4 
 250      E870
 251 09fd CD9B1577 		.ascii	"\315\233\025w\267+\274\017l\345\225\261F\311\373\232"
 251      B72BBC0F 
 251      6CE595B1 
 251      46C9FB9A 
 252 0a0d 2F6C458F 		.ascii	"/lE\217kT\262\356\364\205|E\301\272j\263\242g\375$a"
 252      6B54B2EE 
 252      F4857C45 
 252      C1BA6AB3 
 252      A267FD24 
 253 0a22 CFDB3FEB 		.ascii	"\317\333?\353\224\212\\\365\305\373\003\031\371\230"
 253      948A5CF5 
 253      C5FB0319 
 253      F998
 254 0a30 92F5759F 		.ascii	"\222\365u\237\254\225F^W\362\356\366\344}^6\322#\177"
 254      AC95465E 
 254      57F2EEF6 
 254      E47D5E36 
 254      D2237F
 255 0a43 2F42EFBE 		.ascii	"/B\357\276@\327\006\244\344\275\003\311{\023\222\367"
 255      40D706A4 
 255      E4BD03C9 
 255      7B1392F7 
 256 0a53 168C1B30 		.ascii	"\026\214\0330\372a\334\205\321\007\243\027\306=\030"
 256      FA61DC85 
 256      D107A317 
 256      C63D18
 257 0a62 83307A60 		.ascii	"\2030z`\334\366<\327\235\017\020+\377F\245\267\373\262"
 257      DCF63CD7 
 257      9D0F102B 
 257      FF46A5B7 
 257      FBB2
 258 0a74 EC92E25A 		.ascii	"\354\222\342Z^x\236\026\364\300k\005\015|\352\225vt"
 258      5E789E16 
 258      F4C06B05 
 258      0D7CEA95 
 258      7674
 259 0a86 F9E27442 		.ascii	"\371\342tBau\2132Z\035\276\260\335\267\370\342\353\371"
 259      61758B32 
 259      5A1DBEB0 
 259      DDB7F8E2 
 259      EBF9
 260 0a98 837EB88B 		.ascii	"\203~\270\213\346!\277\275\352\2074\354]\316.w\240\007"
 260      E621BFBD 
 260      EA8734EC 
 260      5DCE2E77 
 260      A007
 261 0aaa E085FF8B 		.ascii	"\340\205\377\213G\244\263\375fZ\362\367\201\321\220"
 261      47A4B3FD 
 261      665AF2F7 
 261      81D190
 262 0ab9 5CF203AE 		.ascii	"\\\362\003\256\222\277Y\234\363\275\212\325\346Cz\030"
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 20


 262      92BF599C 
 262      F3BD8AD5 
 262      E6437A18 
 263 0ac9 9A7AB695 		.ascii	"\232z\266\225g\245\353$o\310\352\206\313\352\244\013"
 263      67A5EB24 
 263      6FC8EA86 
 263      CBEAA40B 
 264 0ad9 B593D651 		.ascii	"\265\223\326Q\315\265\247\010?dEuz\254\362\260\364v"
 264      CDB5A708 
 264      3F644575 
 264      7AACF2B0 
 264      F476
 265 0aeb 8DBCCECA 		.ascii	"\215\274\316\312\275U;\245\237\367\336\376\214\227\356"
 265      BD553BA5 
 265      9FF7DEFE 
 265      8C97EE
 266 0afa ED4F797A 		.ascii	"\355Oyz\245<\324\2235\355\352\334N\361\023\344\365\302"
 266      A53CD493 
 266      35EDEADC 
 266      4EF113E4 
 266      F5C2
 267 0b0c 7B98766E 		.ascii	"{\230vnJD\260_\354yt\217\307S\032\217cX\010;\206=\253"
 267      4A44B05F 
 267      EC79748F 
 267      C7531A8F 
 267      6358083B 
 268 0b23 7F551530 		.ascii	"\177U\0250\257\334Q\227\334\021&\267p\342PI\220\267"
 268      AFDC5197 
 268      DC1126B7 
 268      70E25049 
 268      90B7
 269 0b35 DCC7E074 		.ascii	"\334\307\340t\026\2511*wT\222\253\032\354\2710F^\264"
 269      16A9312A 
 269      775492AB 
 269      1AECB930 
 269      465EB4
 270 0b48 8487CB41 		.ascii	"\204\207\313A\202c\334\005`\377#e?.Eh\002\"\364\002"
 270      8263DC05 
 270      60FF2365 
 270      3F2E4568 
 270      0222F402 
 271 0b5c BCFFDCC3 		.ascii	"\274\377\334\303\373s\2554\307\306}m\032\337\236\017"
 271      FB73AD34 
 271      C7C67D6D 
 271      1ADF9E0F 
 272 0b6c DA48B306 		.ascii	"\332H\263\006D\242\237!6\204\225K\021\257\322\002\364"
 272      44A29F21 
 272      3684954B 
 272      11AFD202 
 272      F4
 273 0b7d 9D9F91CC 		.ascii	"\235\237\221\314\006\267\240'\022\256\217\012'\021\334"
 273      06B7A027 
 273      12AE8F0A 
 273      2711DC
 274 0b8c 56BB3318 		.ascii	"V\2733\030\247\371\323\014\253\355\334_\034\344\221"
 274      A7F9D30C 
 274      ABEDDC5F 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 21


 274      1CE491
 275 0b9b 610AE5D1 		.ascii	"a\012\345\321\024\350\374f\375\363Y\366\374\002H\223"
 275      14E8FC66 
 275      FDF359F6 
 275      FC024893 
 276 0bab 72F68C4B 		.ascii	"r\366\214K\331\243yzj\3521\271\371\321\036\312\324\234"
 276      D9A3797A 
 276      6AEA31B9 
 276      F9D11ECA 
 276      D49C
 277 0bbd 69FF47B6 		.ascii	"i\377G\266\025\222\214k\003\232Y\370u\347\264\367\251"
 277      15928C6B 
 277      039A59F8 
 277      75E7B4F7 
 277      A9
 278 0bce 25BFE377 		.ascii	"%\277\343w\200\235\214\351\333\247\313\210a\273\337"
 278      809D8CE9 
 278      DBA7CB88 
 278      61BBDF
 279 0bdd 635D44DE 		.ascii	"c]D\336N\310\355\220\270\223-\354\261\204\357\336\000"
 279      4EC8ED90 
 279      B8932DEC 
 279      B184EFDE 
 279      00
 280 0bee 1F28F03D 		.ascii	"\037(\360=\267H\220\377\220\206wV2w\016\314\235\006"
 280      B74890FF 
 280      90867756 
 280      32770ECC 
 280      9D06
 281 0c00 735FC178 		.ascii	"s_\301x\011c\206\334\205p\270\"<9Q\344<E\344\374\310"
 281      096386DC 
 281      8570B822 
 281      3C3951E4 
 281      3C45E4FC 
 282 0c15 7BC939AF 		.ascii	"{\3119\257h\356\314O\223\354p0\353+\316{:\302X\234\211"
 282      68EECC4F 
 282      93EC7030 
 282      EB2BCE7B 
 282      3AC2589C 
 283 0c2a 173B249D 		.ascii	"\027;$\235\33518\217\344nB^%o\032\315R\341\002\026\275"
 283      DD31388F 
 283      E46E425E 
 283      256F1ACD 
 283      52E10216 
 284 0c3f EA86BCFD 		.ascii	"\352\206\274\375A\257m\367\222-(\005G\374&s\230\206"
 284      41AF6DF7 
 284      922D2805 
 284      47FC2673 
 284      9886
 285 0c51 FB76D048 		.ascii	"\373v\320H&\343\005h#vGr\326\325\007\304\362\222\263"
 285      26E30568 
 285      23764772 
 285      D6D507C4 
 285      F292B3
 286 0c64 2AE5BF9F 		.ascii	"*\345\277\237\010\242\\D\251X/\235Gn=\317Hv\275\302"
 286      08A25C44 
 286      A9582F9D 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 22


 286      476E3DCF 
 286      4876BDC2 
 287 0c78 AFEFA09B 		.ascii	"\257\357\240\233\203\212,\243V\351\025\276L\324J_\342"
 287      838A2CA3 
 287      56E915BE 
 287      4CD44A5F 
 287      E2
 288 0c89 6FC2E425 		.ascii	"o\302\344%\376\231\224\332\233A\3700\265\013\235\033"
 288      FE9994DA 
 288      9B41F830 
 288      B50B9D1B 
 289 0c99 E87F4579 		.ascii	"\350\177Ey\024\301\006\263#x#\345A\004\2461\315\024"
 289      14C106B3 
 289      237823E5 
 289      4104A631 
 289      CD14
 290 0cab F18219F8 		.ascii	"\361\202\031\370\336Ly\024\367\245\302e\245\212\361"
 290      DE4C7914 
 290      F7A5C265 
 290      A58AF1
 291 0cba E8EE4DAD 		.ascii	"\350\356M\255\227^\374\007\220\177kLw\267h\347\355\001"
 291      975EFC07 
 291      907F6B4C 
 291      77B768E7 
 291      ED01
 292 0ccc 1958EA01 		.ascii	"\031X\352\001[0\355\001\316}9\031A\362\251\221\365\000"
 292      5B30ED01 
 292      CE7D3919 
 292      41F2A991 
 292      F500
 293 0cde B9A63371 		.ascii	"\271\2463q\210\213\210\276T<t:]\303\324\035h\311\375"
 293      888B88BE 
 293      543C743A 
 293      5DC3D41D 
 293      68C9FD
 294 0cf1 289FBCC4 		.ascii	"(\237\274\304\362'H(]\322W&M\247\372n\305os\376\237"
 294      F2274828 
 294      5DD25726 
 294      4DA7FA6E 
 294      C56F73FE 
 295 0d06 FDF58BC5 		.ascii	"\375\365\213\305\313\227.\345\264\006C\2225A\370\330"
 295      CB972EE5 
 295      B4064392 
 295      3541F8D8 
 296 0d16 206C44A6 		.ascii	" lD\246\177\215\261\331\023-vc\374\342\265\3268\263"
 296      7F8DB1D9 
 296      132D7663 
 296      FCE2B5D6 
 296      38B3
 297 0d28 6371C437 		.ascii	"cq\3047\037\377\351\237cL\033lv\263\303\021cs$\232\026"
 297      1FFFE99F 
 297      634C1B6C 
 297      76B3C311 
 297      6373249A 
 298 0d3d 9BEC66A3 		.ascii	"\233\354f\243\220h\217\3710\362C\317\011k\274-\321."
 298      90688FF9 
 298      30F243CF 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 23


 298      096BBC2D 
 298      D12E
 299 0d4f C4581292 		.ascii	"\304X\022\222b\214\366\370\230\217\"?\214\\J\236\376"
 299      628CF6F8 
 299      988F223F 
 299      8C5C4A9E 
 299      FE
 300 0d60 98909860 		.ascii	"\230\220\230`\376\243\331\370\2255\306\232`\212K\212"
 300      FEA3D9F8 
 300      9535C69A 
 300      608A4B8A 
 301 0d70 35C7C41B 		.ascii	"5\307\304\033M\353\254\011\346\030C\254y\2551)N0\010"
 301      4DEBAC09 
 301      E61843AC 
 301      79AD3129 
 301      4E3008
 302 0d83 1B6C6647 		.ascii	"\033lfG\344:N#\251\262\376\377K\023\307\006G\214\301"
 302      E43A4E23 
 302      A9B2FEFF 
 302      4B13C706 
 302      478CC1
 303 0d96 21C48258 		.ascii	"!\304\202X\020\037\272>6\336`1\013\206X\253\303d\260"
 303      101FBA3E 
 303      36DE6031 
 303      0B8658AB 
 303      C364B0
 304 0da9 C61A4098 		.ascii	"\306\032@\230\355\367\016\273)\306h\263\305\030A\321"
 304      EDF70EBB 
 304      29C668B3 
 304      C51841D1 
 305 0db9 F8442022 		.ascii	"\370D \"X\202\321\361\265!>\301b\2174q\177\357A\346"
 305      5882D1F1 
 305      B5213EC1 
 305      628F3471 
 305      7FEF41E6 
 306 0dcd 582F116A 		.ascii	"X/\021j-k\254\361f\373\227F\373[\2211\022\223wa\200"
 306      2D6BACF1 
 306      66FB9746 
 306      FB5B9131 
 306      12937761 
 307 0de2 A0BFB33A 		.ascii	"\240\277\263:>\025\004\360\302\252\004\301l\267'\331"
 307      3E1504F0 
 307      C2AA04C1 
 307      6CB727D9 
 308 0df2 043FC3B2 		.ascii	"\004?\303\262\304\3048\275\305\260Z\260'\231\004C\264"
 308      C4C438BD 
 308      C5B05AB0 
 308      27990443 
 308      B4
 309 0e03 60F7B7FC 		.ascii	"`\367\267\374g\242e\205Q0\006Z\226'9\204\304\370\345"
 309      67A26585 
 309      5130065A 
 309      96273984 
 309      C4F8E5
 310 0e16 89096BAD 		.ascii	"\211\011k\255\026\240\375\314,\254\026\214B\222cU\202"
 310      16A0FDCC 
 310      2CAC168C 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 24


 310      42926355 
 310      82
 311 0e27 5530C72E 		.ascii	"U0\307.\2443\313\214\202\307l\240e\245=1~Y\322\332U"
 311      A433CB8C 
 311      82C76CA0 
 311      65A53D31 
 311      7E59D2DA 
 312 0e3c 09B1E66F 		.ascii	"\011\261\346ot,\314K\377d\020\374]\017\201VG\324\362"
 312      742CCC4B 
 312      FF6410FC 
 312      5D0F8156 
 312      47D4F2
 313 0e4f E8289329 		.ascii	"\350(\223)\311n7\307\006G\276k\261\307\2013\210|\242"
 313      C96E37C7 
 313      0647BE6B 
 313      B1C78133 
 313      887CA2
 314 0e62 2340A000 		.ascii	"#@\240\000\323\007\214\000|K\264\335\274\336\260\372"
 314      D3078C00 
 314      7C4BB4DD 
 314      BCDEB0FA 
 315 0e72 F3E5CB8D 		.ascii	"\363\345\313\2156\207\326\362\327\304\250\265\321+\242"
 315      3687D6F2 
 315      D7C4A8B5 
 315      D12BA2
 316 0e81 1C18BE34 		.ascii	"\034\030\2764_\031\005\003\030)\311\371\340}I\016y\010"
 316      5F190503 
 316      1829C9F9 
 316      E07D490E 
 316      7908
 317 0e93 7024D96C 		.ascii	"p$\331lq\033h\224\003\342\215\337\030\326'\306\011F"
 317      711B6894 
 317      03E28DDF 
 317      18D627C6 
 317      0946
 318 0ea5 0B3C5B13 		.ascii	"\013<[\023\\\317Z2oK\374\037\263]\275\354\3235 B\263"
 318      5CCF5A32 
 318      6F4BFC1F 
 318      B35DBDEC 
 318      D3352042 
 319 0eba 1E440243 		.ascii	"\036D\002CJ@5L\020\324_~\3729,i\327Z\2771\307\222E\215"
 319      4A40354C 
 319      10D45F7E 
 319      FA392C69 
 319      D75ABF31 
 320 0ed2 44EDBF72 		.ascii	"D\355\277r\325\177\375y\005,\341\365\3068\215\315\346"
 320      D57FFD79 
 320      052CE1F5 
 320      C6388DCD 
 320      E6
 321 0ee3 208BFE2E 		.ascii	" \213\376.Q\376.9\032\211\227::z5 \007\200\205\253\355"
 321      51FE2E39 
 321      1A89973A 
 321      3A7A3520 
 321      078085AB 
 322 0ef8 A6E815D1 		.ascii	"\246\350\025\321_\013\013\33131La\361[\304b\007Hv\031"
 322      5F0B0BD9 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 25


 322      33314C61 
 322      F15BC462 
 322      07487619 
 323 0f0c BDE073F3 		.ascii	"\275\340s\363\177'\231\035B\264\321\364\265Y`\001\321"
 323      7F27991D 
 323      42B4D1F4 
 323      B5596001 
 323      D1
 324 0f1d 59881396 		.ascii	"Y\210\023\226'&%\010AV\307\212/\326\030V\032\343\342"
 324      27262508 
 324      4156C78A 
 324      2FD61856 
 324      1AE3E2
 325 0f30 9601C602 		.ascii	"\226\001\306\002 \201l\213\263\012\033\014\177\261:"
 325      20816C8B 
 325      B30A1B0C 
 325      7FB13A
 326 0f3f E28D8269 		.ascii	"\342\215\202i]\200e\205\231D~e\234\321\022b\221\330"
 326      5D806585 
 326      99447E65 
 326      9CD11262 
 326      91D8
 327 0f51 FD39C1F8 		.ascii	"\3759\301\370U\234\231Li\0113\303\032\360\024ek\240"
 327      559C994C 
 327      690933C3 
 327      1AF01465 
 327      6BA0
 328 0f63 C1D35AFE 		.ascii	"\301\323Z\376\002\212G\331\014\253\364\226(\233\331"
 328      028A47D9 
 328      0CABF496 
 328      289BD9
 329 0f72 6E14AC09 		.ascii	"n\024\254\011\026\303*`\365\305\232\3256\263\351s\363"
 329      16C32A60 
 329      F5C59AD5 
 329      36B3E973 
 329      F3
 330 0f83 7AA2BF87 		.ascii	"z\242\277\207nL\177\217\274\200\\\320\273S\007\200\005"
 330      6E4C7F8F 
 330      BC805CD0 
 330      BB530780 
 330      05
 331 0f94 16034B2C 		.ascii	"\026\003K,\203\211\032b \010$\007"
 331      83891A62 
 331      20082407 
 332 0fa0 A41C14B4 		.ascii	"\244\034\024\264\026\327\223\332\372\276\011V\377\027"
 332      16D793DA 
 332      FABE0956 
 332      FF17
 333 0fae C5C8B619 		.ascii	"\305\310\266\031"
 334              		.text
 335              		.section	.gnu.lto_.symtab.b3699a43,"",%progbits
 336 0000 76646D5F 		.ascii	"vdm_get_disc_id_resp\000"
 336      6765745F 
 336      64697363 
 336      5F69645F 
 336      72657370 
 337 0015 00       		.ascii	"\000"
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 26


 338 0016 00       		.ascii	"\000"
 339 0017 00       		.ascii	"\000"
 340 0018 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 340      00000000 
 341 0020 BA000000 		.ascii	"\272\000\000\000"
 342 0024 76646D5F 		.ascii	"vdm_get_disc_svid_resp\000"
 342      6765745F 
 342      64697363 
 342      5F737669 
 342      645F7265 
 343 003b 00       		.ascii	"\000"
 344 003c 00       		.ascii	"\000"
 345 003d 00       		.ascii	"\000"
 346 003e 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 346      00000000 
 347 0046 BC000000 		.ascii	"\274\000\000\000"
 348 004a 6754696D 		.ascii	"gTimerVar\000"
 348      65725661 
 348      7200
 349 0054 00       		.ascii	"\000"
 350 0055 04       		.ascii	"\004"
 351 0056 00       		.ascii	"\000"
 352 0057 01000000 		.ascii	"\001\000\000\000\000\000\000\000"
 352      00000000 
 353 005f BE000000 		.ascii	"\276\000\000\000"
 354 0063 69734174 		.ascii	"isAttachInterrupt\000"
 354      74616368 
 354      496E7465 
 354      72727570 
 354      7400
 355 0075 00       		.ascii	"\000"
 356 0076 04       		.ascii	"\004"
 357 0077 00       		.ascii	"\000"
 358 0078 01000000 		.ascii	"\001\000\000\000\000\000\000\000"
 358      00000000 
 359 0080 C5000000 		.ascii	"\305\000\000\000"
 360 0084 675F5374 		.ascii	"g_Struct_Ptr\000"
 360      72756374 
 360      5F507472 
 360      00
 361 0091 00       		.ascii	"\000"
 362 0092 04       		.ascii	"\004"
 363 0093 00       		.ascii	"\000"
 364 0094 04000000 		.ascii	"\004\000\000\000\000\000\000\000"
 364      00000000 
 365 009c 85010000 		.ascii	"\205\001\000\000"
 366 00a0 67537472 		.ascii	"gStruct_t\000"
 366      7563745F 
 366      7400
 367 00aa 00       		.ascii	"\000"
 368 00ab 04       		.ascii	"\004"
 369 00ac 00       		.ascii	"\000"
 370 00ad 68000000 		.ascii	"h\000\000\000\000\000\000\000"
 370      00000000 
 371 00b5 87010000 		.ascii	"\207\001\000\000"
 372 00b9 69326342 		.ascii	"i2cBuf\000"
 372      756600
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 27


 373 00c0 00       		.ascii	"\000"
 374 00c1 04       		.ascii	"\004"
 375 00c2 00       		.ascii	"\000"
 376 00c3 0C000000 		.ascii	"\014\000\000\000\000\000\000\000"
 376      00000000 
 377 00cb 8C010000 		.ascii	"\214\001\000\000"
 378              		.text
 379              		.section	.gnu.lto_.opts,"",%progbits
 380 0000 272D666D 		.ascii	"'-fmath-errno' '-fsigned-zeros' '-ftrapping-math' '"
 380      6174682D 
 380      6572726E 
 380      6F272027 
 380      2D667369 
 381 0033 2D666E6F 		.ascii	"-fno-trapv' '-fno-openmp' '-fno-openacc' '-mcpu=cor"
 381      2D747261 
 381      70762720 
 381      272D666E 
 381      6F2D6F70 
 382 0066 7465782D 		.ascii	"tex-m0' '-mthumb' '-g' '-Os' '-Werror' '-ffunction-"
 382      6D302720 
 382      272D6D74 
 382      68756D62 
 382      2720272D 
 383 0099 73656374 		.ascii	"sections' '-ffat-lto-objects' '-finline-functions' "
 383      696F6E73 
 383      2720272D 
 383      66666174 
 383      2D6C746F 
 384 00cc 272D666C 		.ascii	"'-flto' '-fno-strict-aliasing'\000"
 384      746F2720 
 384      272D666E 
 384      6F2D7374 
 384      72696374 
 385              		.text
 386              		.cfi_sections	.debug_frame
 387              		.section	.text.vdm_get_disc_id_resp,"ax",%progbits
 388              		.align	1
 389              		.global	vdm_get_disc_id_resp
 390              		.code	16
 391              		.thumb_func
 392              		.type	vdm_get_disc_id_resp, %function
 393              	vdm_get_disc_id_resp:
 394              	.LFB35:
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399 0000 0029     		cmp	r1, #0
 400 0002 01D0     		beq	.L2
 401 0004 0023     		movs	r3, #0
 402 0006 0B70     		strb	r3, [r1]
 403              	.L2:
 404 0008 0020     		movs	r0, #0
 405              		@ sp needed
 406 000a 7047     		bx	lr
 407              		.cfi_endproc
 408              	.LFE35:
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 28


 409              		.size	vdm_get_disc_id_resp, .-vdm_get_disc_id_resp
 410              		.section	.text.vdm_get_disc_svid_resp,"ax",%progbits
 411              		.align	1
 412              		.global	vdm_get_disc_svid_resp
 413              		.code	16
 414              		.thumb_func
 415              		.type	vdm_get_disc_svid_resp, %function
 416              	vdm_get_disc_svid_resp:
 417              	.LFB33:
 418              		.file 1 "src\\app\\alt_mode\\vdm_task_mngr.c"
   1:src\app\alt_mode/vdm_task_mngr.c **** /**
   2:src\app\alt_mode/vdm_task_mngr.c ****  * @file vdm_task_mngr.c
   3:src\app\alt_mode/vdm_task_mngr.c ****  *
   4:src\app\alt_mode/vdm_task_mngr.c ****  * @brief @{VDM task manager source file.@}
   5:src\app\alt_mode/vdm_task_mngr.c ****  *
   6:src\app\alt_mode/vdm_task_mngr.c ****  *******************************************************************************
   7:src\app\alt_mode/vdm_task_mngr.c ****  *
   8:src\app\alt_mode/vdm_task_mngr.c ****  * Copyright (2014-2018), Cypress Semiconductor Corporation or a subsidiary of
   9:src\app\alt_mode/vdm_task_mngr.c ****  * Cypress Semiconductor Corporation. All rights reserved.
  10:src\app\alt_mode/vdm_task_mngr.c ****  *
  11:src\app\alt_mode/vdm_task_mngr.c ****  * This software, including source code, documentation and related materials
  12:src\app\alt_mode/vdm_task_mngr.c ****  * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  13:src\app\alt_mode/vdm_task_mngr.c ****  * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  14:src\app\alt_mode/vdm_task_mngr.c ****  * protection (United States and foreign), United States copyright laws and
  15:src\app\alt_mode/vdm_task_mngr.c ****  * international treaty provisions. Therefore, you may use this Software only
  16:src\app\alt_mode/vdm_task_mngr.c ****  * as provided in the license agreement accompanying the software package from
  17:src\app\alt_mode/vdm_task_mngr.c ****  * which you obtained this Software (“EULA”).
  18:src\app\alt_mode/vdm_task_mngr.c ****  *
  19:src\app\alt_mode/vdm_task_mngr.c ****  * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  20:src\app\alt_mode/vdm_task_mngr.c ****  * non-transferable license to copy, modify, and compile the Software source
  21:src\app\alt_mode/vdm_task_mngr.c ****  * code solely for use in connection with Cypress’s integrated circuit
  22:src\app\alt_mode/vdm_task_mngr.c ****  * products. Any reproduction, modification, translation, compilation, or
  23:src\app\alt_mode/vdm_task_mngr.c ****  * representation of this Software except as specified above is prohibited
  24:src\app\alt_mode/vdm_task_mngr.c ****  * without the express written permission of Cypress. Disclaimer: THIS SOFTWARE
  25:src\app\alt_mode/vdm_task_mngr.c ****  * IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  26:src\app\alt_mode/vdm_task_mngr.c ****  * INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED WARRANTIES OF
  27:src\app\alt_mode/vdm_task_mngr.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress reserves the
  28:src\app\alt_mode/vdm_task_mngr.c ****  * right to make changes to the Software without notice. Cypress does not
  29:src\app\alt_mode/vdm_task_mngr.c ****  * assume any liability arising out of the application or use of the Software
  30:src\app\alt_mode/vdm_task_mngr.c ****  * or any product or circuit described in the Software. Cypress does not
  31:src\app\alt_mode/vdm_task_mngr.c ****  * authorize its products for use in any products where a malfunction or
  32:src\app\alt_mode/vdm_task_mngr.c ****  * failure of the Cypress product may reasonably be expected to result in
  33:src\app\alt_mode/vdm_task_mngr.c ****  * significant property damage, injury or death (“High Risk Product”). By
  34:src\app\alt_mode/vdm_task_mngr.c ****  * including Cypress’s product in a High Risk Product, the manufacturer of such
  35:src\app\alt_mode/vdm_task_mngr.c ****  * system or application assumes all risk of such use and in doing so agrees to
  36:src\app\alt_mode/vdm_task_mngr.c ****  * indemnify Cypress against all liability.
  37:src\app\alt_mode/vdm_task_mngr.c ****  */
  38:src\app\alt_mode/vdm_task_mngr.c **** 
  39:src\app\alt_mode/vdm_task_mngr.c **** #include <vdm.h>
  40:src\app\alt_mode/vdm_task_mngr.c **** #include <pd.h>
  41:src\app\alt_mode/vdm_task_mngr.c **** #include <dpm.h>
  42:src\app\alt_mode/vdm_task_mngr.c **** #include <timer.h>
  43:src\app\alt_mode/vdm_task_mngr.c **** #include <app.h>
  44:src\app\alt_mode/vdm_task_mngr.c **** #include <alt_mode_hw.h>
  45:src\app\alt_mode/vdm_task_mngr.c **** #include <hpi.h>
  46:src\app\alt_mode/vdm_task_mngr.c **** #if ((DFP_ALT_MODE_SUPP) || (UFP_ALT_MODE_SUPP))
  47:src\app\alt_mode/vdm_task_mngr.c **** #include <vdm_task_mngr.h>
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 29


  48:src\app\alt_mode/vdm_task_mngr.c **** #include <alt_modes_mngr.h>
  49:src\app\alt_mode/vdm_task_mngr.c **** 
  50:src\app\alt_mode/vdm_task_mngr.c **** /**
  51:src\app\alt_mode/vdm_task_mngr.c ****  * @typedef vdm_task_status_t
  52:src\app\alt_mode/vdm_task_mngr.c ****  * @brief struct to hold vdm manager status
  53:src\app\alt_mode/vdm_task_mngr.c ****  */
  54:src\app\alt_mode/vdm_task_mngr.c **** typedef struct
  55:src\app\alt_mode/vdm_task_mngr.c **** {
  56:src\app\alt_mode/vdm_task_mngr.c ****     /* Current VDM manager state */
  57:src\app\alt_mode/vdm_task_mngr.c ****     vdm_task_t      vdm_task;
  58:src\app\alt_mode/vdm_task_mngr.c ****     /* Current VDM manager event */
  59:src\app\alt_mode/vdm_task_mngr.c ****     vdm_evt_t       vdm_evt;
  60:src\app\alt_mode/vdm_task_mngr.c ****     /* Info about cable, device/AMA */
  61:src\app\alt_mode/vdm_task_mngr.c ****     atch_tgt_info_t atch_tgt;
  62:src\app\alt_mode/vdm_task_mngr.c ****     /* Struct with received/sent VDM info */
  63:src\app\alt_mode/vdm_task_mngr.c ****     vdm_msg_info_t  vdm_msg;
  64:src\app\alt_mode/vdm_task_mngr.c ****     /* Sent/received VDM retry counters */
  65:src\app\alt_mode/vdm_task_mngr.c ****     uint8_t         rec_retry_cnt;
  66:src\app\alt_mode/vdm_task_mngr.c ****     /* Holds svid index if we have more than one Disc SVID response */
  67:src\app\alt_mode/vdm_task_mngr.c ****     uint8_t         svid_idx;
  68:src\app\alt_mode/vdm_task_mngr.c ****     /* Holds count of D_SVID requests sent. */
  69:src\app\alt_mode/vdm_task_mngr.c ****     uint8_t         dsvid_cnt;
  70:src\app\alt_mode/vdm_task_mngr.c **** }vdm_task_status_t;
  71:src\app\alt_mode/vdm_task_mngr.c **** 
  72:src\app\alt_mode/vdm_task_mngr.c **** #if VDM_RESP_QUERY_SUPPORTED
  73:src\app\alt_mode/vdm_task_mngr.c **** 
  74:src\app\alt_mode/vdm_task_mngr.c **** #define MAX_DISC_ID_RESP_LEN    (MAX_NO_OF_DO)
  75:src\app\alt_mode/vdm_task_mngr.c **** #define MAX_DISC_SVID_RESP_LEN  (18u)
  76:src\app\alt_mode/vdm_task_mngr.c **** 
  77:src\app\alt_mode/vdm_task_mngr.c **** /* Array to store the D_ID response received from the port partner. */
  78:src\app\alt_mode/vdm_task_mngr.c **** static uint32_t vdm_disc_id_resp[NO_OF_TYPEC_PORTS][MAX_DISC_ID_RESP_LEN];
  79:src\app\alt_mode/vdm_task_mngr.c **** static uint8_t  vdm_disc_id_resp_len[NO_OF_TYPEC_PORTS];
  80:src\app\alt_mode/vdm_task_mngr.c **** 
  81:src\app\alt_mode/vdm_task_mngr.c **** /* Array to store the D_SVID response received from the port partner. */
  82:src\app\alt_mode/vdm_task_mngr.c **** static uint32_t vdm_disc_svid_resp[NO_OF_TYPEC_PORTS][MAX_DISC_SVID_RESP_LEN];
  83:src\app\alt_mode/vdm_task_mngr.c **** static uint8_t  vdm_disc_svid_resp_len[NO_OF_TYPEC_PORTS];
  84:src\app\alt_mode/vdm_task_mngr.c **** 
  85:src\app\alt_mode/vdm_task_mngr.c **** #endif /* VDM_RESP_QUERY_SUPPORTED */
  86:src\app\alt_mode/vdm_task_mngr.c **** 
  87:src\app\alt_mode/vdm_task_mngr.c **** /* Main structure to hold variables for VDM task manager */
  88:src\app\alt_mode/vdm_task_mngr.c **** vdm_task_status_t vdm_stat[NO_OF_TYPEC_PORTS];
  89:src\app\alt_mode/vdm_task_mngr.c **** 
  90:src\app\alt_mode/vdm_task_mngr.c **** /* Init VDM task mngr */
  91:src\app\alt_mode/vdm_task_mngr.c **** static vdm_task_t vdm_task_mngr_init(uint8_t port);
  92:src\app\alt_mode/vdm_task_mngr.c **** 
  93:src\app\alt_mode/vdm_task_mngr.c **** #if ((DFP_ALT_MODE_SUPP) || (UFP_MODE_DISC_ENABLE))
  94:src\app\alt_mode/vdm_task_mngr.c **** /* Discover ID cmd handler */
  95:src\app\alt_mode/vdm_task_mngr.c **** static vdm_task_t vdm_task_mng_disc_id(uint8_t port, vdm_evt_t vdm_evt);
  96:src\app\alt_mode/vdm_task_mngr.c **** /* Discovery SVID cmd handler */
  97:src\app\alt_mode/vdm_task_mngr.c **** static vdm_task_t vdm_task_mng_disc_svid(uint8_t port, vdm_evt_t vdm_evt);
  98:src\app\alt_mode/vdm_task_mngr.c **** #endif /* ((DFP_ALT_MODE_SUPP) || (UFP_MODE_DISC_ENABLE)) */
  99:src\app\alt_mode/vdm_task_mngr.c **** 
 100:src\app\alt_mode/vdm_task_mngr.c **** /* Sets recevied VDM response command as failed */
 101:src\app\alt_mode/vdm_task_mngr.c **** static void set_vdm_failed(uint8_t port, fail_status_t fail_stat);
 102:src\app\alt_mode/vdm_task_mngr.c **** /* Check VDM retries */
 103:src\app\alt_mode/vdm_task_mngr.c **** static bool vdm_retry_check(uint8_t port, fail_status_t fail_stat);
 104:src\app\alt_mode/vdm_task_mngr.c **** /* Parses received VDM resp to vdm_msg_info_t struct */
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 30


 105:src\app\alt_mode/vdm_task_mngr.c **** static uint8_t parse_vdm(uint8_t port, const pd_packet_t* rec_vdm);
 106:src\app\alt_mode/vdm_task_mngr.c **** /* Callback function for sent VDM */
 107:src\app\alt_mode/vdm_task_mngr.c **** static void vdm_rec_cbk(uint8_t port, resp_status_t status, const pd_packet_t *rec_vdm);
 108:src\app\alt_mode/vdm_task_mngr.c **** /* Function to send VDM */
 109:src\app\alt_mode/vdm_task_mngr.c **** static vdm_task_t send_vdm(uint8_t port);
 110:src\app\alt_mode/vdm_task_mngr.c **** /* Checks if VDM mngr is enabled */
 111:src\app\alt_mode/vdm_task_mngr.c **** static bool is_vdm_mngr_enabled(uint8_t port);
 112:src\app\alt_mode/vdm_task_mngr.c **** /* Returns pointer to vdm_msg_info_t struct */
 113:src\app\alt_mode/vdm_task_mngr.c **** static vdm_msg_info_t* get_msg(uint8_t port);
 114:src\app\alt_mode/vdm_task_mngr.c **** /* Composes vdm_msg_info_t data to dpm_pd_cmd_buf_t struct */
 115:src\app\alt_mode/vdm_task_mngr.c **** static uint8_t compose_vdm(uint8_t port);
 116:src\app\alt_mode/vdm_task_mngr.c **** /* Reset vdm mngr info */
 117:src\app\alt_mode/vdm_task_mngr.c **** static void reset_vdm_mngr(uint8_t port);
 118:src\app\alt_mode/vdm_task_mngr.c **** 
 119:src\app\alt_mode/vdm_task_mngr.c **** /* VDM field set/get functions. */
 120:src\app\alt_mode/vdm_task_mngr.c **** vdm_evt_t get_evt(uint8_t port);
 121:src\app\alt_mode/vdm_task_mngr.c **** vdm_task_t get_task(uint8_t port);
 122:src\app\alt_mode/vdm_task_mngr.c **** void set_task(uint8_t port, vdm_task_t task);
 123:src\app\alt_mode/vdm_task_mngr.c **** void set_evt(uint8_t port, vdm_evt_t evt);
 124:src\app\alt_mode/vdm_task_mngr.c **** 
 125:src\app\alt_mode/vdm_task_mngr.c **** /**
 126:src\app\alt_mode/vdm_task_mngr.c ****    @typedef cable_dp_reset_state_t
 127:src\app\alt_mode/vdm_task_mngr.c ****    @brief Enumeration tracking current cable (SOP'') soft reset state.
 128:src\app\alt_mode/vdm_task_mngr.c ****  */
 129:src\app\alt_mode/vdm_task_mngr.c **** typedef enum {
 130:src\app\alt_mode/vdm_task_mngr.c ****     CABLE_DP_RESET_IDLE = 0,    /**< No Cable (SOP'') reset state. */
 131:src\app\alt_mode/vdm_task_mngr.c ****     CABLE_DP_RESET_WAIT,        /**< Waiting for response from cable (SOP'') soft reset. */
 132:src\app\alt_mode/vdm_task_mngr.c ****     CABLE_DP_RESET_RETRY,       /**< Cable soft reset (SOP'') to be attempted. */
 133:src\app\alt_mode/vdm_task_mngr.c ****     CABLE_DP_RESET_DONE         /**< Cable soft reset (SOP'') has been completed. */
 134:src\app\alt_mode/vdm_task_mngr.c **** } cable_dp_reset_state_t;
 135:src\app\alt_mode/vdm_task_mngr.c **** 
 136:src\app\alt_mode/vdm_task_mngr.c **** /* Maximum number of EMCA SOFT_RESET attempts to be made. */
 137:src\app\alt_mode/vdm_task_mngr.c **** #define MAX_EMCA_DP_RESET_COUNT         (3u)
 138:src\app\alt_mode/vdm_task_mngr.c **** 
 139:src\app\alt_mode/vdm_task_mngr.c **** static cable_dp_reset_state_t vdm_emca_rst_state[NO_OF_TYPEC_PORTS] = {
 140:src\app\alt_mode/vdm_task_mngr.c ****     CABLE_DP_RESET_IDLE
 141:src\app\alt_mode/vdm_task_mngr.c **** #if (NO_OF_TYPEC_PORTS > 1)
 142:src\app\alt_mode/vdm_task_mngr.c ****     ,
 143:src\app\alt_mode/vdm_task_mngr.c ****     CABLE_DP_RESET_IDLE
 144:src\app\alt_mode/vdm_task_mngr.c **** #endif /* (NO_OF_TYPEC_PORTS > 1) */
 145:src\app\alt_mode/vdm_task_mngr.c **** };
 146:src\app\alt_mode/vdm_task_mngr.c **** 
 147:src\app\alt_mode/vdm_task_mngr.c **** static uint8_t vdm_emca_rst_count[NO_OF_TYPEC_PORTS] = {
 148:src\app\alt_mode/vdm_task_mngr.c ****     0
 149:src\app\alt_mode/vdm_task_mngr.c **** #if (NO_OF_TYPEC_PORTS > 1)
 150:src\app\alt_mode/vdm_task_mngr.c ****     ,
 151:src\app\alt_mode/vdm_task_mngr.c ****     0
 152:src\app\alt_mode/vdm_task_mngr.c **** #endif /* (NO_OF_TYPEC_PORTS > 1) */
 153:src\app\alt_mode/vdm_task_mngr.c **** };
 154:src\app\alt_mode/vdm_task_mngr.c **** 
 155:src\app\alt_mode/vdm_task_mngr.c **** void enable_vdm_task_mngr(uint8_t port)
 156:src\app\alt_mode/vdm_task_mngr.c **** {
 157:src\app\alt_mode/vdm_task_mngr.c ****     /* If the VDM Task is already running, do nothing. */
 158:src\app\alt_mode/vdm_task_mngr.c ****     if (app_get_status(port)->vdm_task_en == false)
 159:src\app\alt_mode/vdm_task_mngr.c ****     {
 160:src\app\alt_mode/vdm_task_mngr.c ****         set_task(port, VDM_TASK_INIT);
 161:src\app\alt_mode/vdm_task_mngr.c ****         app_get_status(port)->vdm_task_en = true;
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 31


 162:src\app\alt_mode/vdm_task_mngr.c ****         app_get_status(port)->vdm_prcs_failed = false;
 163:src\app\alt_mode/vdm_task_mngr.c ****     }
 164:src\app\alt_mode/vdm_task_mngr.c **** }
 165:src\app\alt_mode/vdm_task_mngr.c **** 
 166:src\app\alt_mode/vdm_task_mngr.c **** static vdm_task_t vdm_task_mngr_init(uint8_t port)
 167:src\app\alt_mode/vdm_task_mngr.c **** {
 168:src\app\alt_mode/vdm_task_mngr.c ****     vdm_task_t ret = VDM_TASK_EXIT;
 169:src\app\alt_mode/vdm_task_mngr.c **** 
 170:src\app\alt_mode/vdm_task_mngr.c ****     /* Reset vdm mngr info */
 171:src\app\alt_mode/vdm_task_mngr.c ****     reset_vdm_mngr(port);
 172:src\app\alt_mode/vdm_task_mngr.c ****     set_evt(port, VDM_EVT_RUN);
 173:src\app\alt_mode/vdm_task_mngr.c **** 
 174:src\app\alt_mode/vdm_task_mngr.c **** #if CCG4_DOCK
 175:src\app\alt_mode/vdm_task_mngr.c ****     if (gl_dpm_port_type[port] != PRT_TYPE_UFP)
 176:src\app\alt_mode/vdm_task_mngr.c ****     {
 177:src\app\alt_mode/vdm_task_mngr.c ****         /* in CCG4 Dock US is UFP only, so it should not init D_ID */
 178:src\app\alt_mode/vdm_task_mngr.c ****         if(port == 0u) return VDM_TASK_EXIT;
 179:src\app\alt_mode/vdm_task_mngr.c ****     }
 180:src\app\alt_mode/vdm_task_mngr.c **** #endif /* CCG4_DOCK */
 181:src\app\alt_mode/vdm_task_mngr.c **** 
 182:src\app\alt_mode/vdm_task_mngr.c ****     if (get_alt_mode_numb(port) != false)
 183:src\app\alt_mode/vdm_task_mngr.c ****     {
 184:src\app\alt_mode/vdm_task_mngr.c ****         /* Check if current data role is DFP */
 185:src\app\alt_mode/vdm_task_mngr.c ****         if (gl_dpm_port_type[port] != PRT_TYPE_UFP)
 186:src\app\alt_mode/vdm_task_mngr.c ****         {
 187:src\app\alt_mode/vdm_task_mngr.c ****             ret = VDM_TASK_DISC_ID;
 188:src\app\alt_mode/vdm_task_mngr.c ****     }
 189:src\app\alt_mode/vdm_task_mngr.c ****         else
 190:src\app\alt_mode/vdm_task_mngr.c ****         {
 191:src\app\alt_mode/vdm_task_mngr.c ****             ret = VDM_TASK_REG_ATCH_TGT_INFO;
 192:src\app\alt_mode/vdm_task_mngr.c ****         }
 193:src\app\alt_mode/vdm_task_mngr.c ****     }
 194:src\app\alt_mode/vdm_task_mngr.c **** 
 195:src\app\alt_mode/vdm_task_mngr.c ****     return ret;
 196:src\app\alt_mode/vdm_task_mngr.c **** 
 197:src\app\alt_mode/vdm_task_mngr.c **** }
 198:src\app\alt_mode/vdm_task_mngr.c **** 
 199:src\app\alt_mode/vdm_task_mngr.c **** bool is_vdm_task_idle(uint8_t port)
 200:src\app\alt_mode/vdm_task_mngr.c **** {
 201:src\app\alt_mode/vdm_task_mngr.c ****     /*
 202:src\app\alt_mode/vdm_task_mngr.c ****        If VDM manager is enabled, check
 203:src\app\alt_mode/vdm_task_mngr.c ****        1. Whether BUSY timer is running.
 204:src\app\alt_mode/vdm_task_mngr.c ****        2. Whether the ALT mode tasks are idle.
 205:src\app\alt_mode/vdm_task_mngr.c ****      */
 206:src\app\alt_mode/vdm_task_mngr.c ****     return !(is_vdm_mngr_enabled (port) &&
 207:src\app\alt_mode/vdm_task_mngr.c ****             ((timer_is_running (port, APP_VDM_BUSY_TIMER)) ||
 208:src\app\alt_mode/vdm_task_mngr.c ****              (get_task(port) != VDM_TASK_ALT_MODE) ||
 209:src\app\alt_mode/vdm_task_mngr.c ****              (is_alt_mode_mngr_idle(port) == false))
 210:src\app\alt_mode/vdm_task_mngr.c ****             );
 211:src\app\alt_mode/vdm_task_mngr.c **** }
 212:src\app\alt_mode/vdm_task_mngr.c **** 
 213:src\app\alt_mode/vdm_task_mngr.c **** void vdm_task_mngr(uint8_t port)
 214:src\app\alt_mode/vdm_task_mngr.c **** {
 215:src\app\alt_mode/vdm_task_mngr.c ****     /* The VDM task enabled check is performed by the caller. */
 216:src\app\alt_mode/vdm_task_mngr.c ****     if (
 217:src\app\alt_mode/vdm_task_mngr.c ****             (timer_is_running(port, APP_VDM_BUSY_TIMER) == true)
 218:src\app\alt_mode/vdm_task_mngr.c **** #if MUX_DELAY_EN			
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 32


 219:src\app\alt_mode/vdm_task_mngr.c **** 			|| (app_get_status(port)->is_mux_busy != false)
 220:src\app\alt_mode/vdm_task_mngr.c **** #endif /* MUX_DELAY_EN */			
 221:src\app\alt_mode/vdm_task_mngr.c ****        )
 222:src\app\alt_mode/vdm_task_mngr.c ****     {
 223:src\app\alt_mode/vdm_task_mngr.c ****         return;
 224:src\app\alt_mode/vdm_task_mngr.c ****     }
 225:src\app\alt_mode/vdm_task_mngr.c **** 
 226:src\app\alt_mode/vdm_task_mngr.c ****     /* Get current vdm task */
 227:src\app\alt_mode/vdm_task_mngr.c ****     switch (get_task(port))
 228:src\app\alt_mode/vdm_task_mngr.c ****     {
 229:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_TASK_WAIT:
 230:src\app\alt_mode/vdm_task_mngr.c ****             break;
 231:src\app\alt_mode/vdm_task_mngr.c **** 
 232:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_TASK_INIT:
 233:src\app\alt_mode/vdm_task_mngr.c ****             set_task(port, vdm_task_mngr_init(port));
 234:src\app\alt_mode/vdm_task_mngr.c ****             break;
 235:src\app\alt_mode/vdm_task_mngr.c **** 
 236:src\app\alt_mode/vdm_task_mngr.c **** #if ((DFP_ALT_MODE_SUPP) || (UFP_MODE_DISC_ENABLE))
 237:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_TASK_DISC_ID:
 238:src\app\alt_mode/vdm_task_mngr.c ****             set_task(port, vdm_task_mng_disc_id(port, get_evt(port)));
 239:src\app\alt_mode/vdm_task_mngr.c ****             break;
 240:src\app\alt_mode/vdm_task_mngr.c **** 
 241:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_TASK_DISC_SVID:
 242:src\app\alt_mode/vdm_task_mngr.c ****             set_task(port, vdm_task_mng_disc_svid(port, get_evt(port)));
 243:src\app\alt_mode/vdm_task_mngr.c ****             break;
 244:src\app\alt_mode/vdm_task_mngr.c **** #endif /* ((DFP_ALT_MODE_SUPP) || (UFP_MODE_DISC_ENABLE)) */
 245:src\app\alt_mode/vdm_task_mngr.c **** 
 246:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_TASK_SEND_MSG:
 247:src\app\alt_mode/vdm_task_mngr.c ****             compose_vdm(port);
 248:src\app\alt_mode/vdm_task_mngr.c ****             set_task(port, send_vdm(port));
 249:src\app\alt_mode/vdm_task_mngr.c ****             break;
 250:src\app\alt_mode/vdm_task_mngr.c **** 
 251:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_TASK_REG_ATCH_TGT_INFO:
 252:src\app\alt_mode/vdm_task_mngr.c ****             set_task(port, reg_alt_mode_mngr(port, &vdm_stat[port].atch_tgt, get_msg(port)));
 253:src\app\alt_mode/vdm_task_mngr.c ****             set_evt(port, VDM_EVT_RUN);
 254:src\app\alt_mode/vdm_task_mngr.c ****             break;
 255:src\app\alt_mode/vdm_task_mngr.c **** 
 256:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_TASK_ALT_MODE:
 257:src\app\alt_mode/vdm_task_mngr.c ****             set_task(port, vdm_task_mngr_alt_mode_process(port, get_evt(port)));
 258:src\app\alt_mode/vdm_task_mngr.c ****             if ((get_task(port) == VDM_TASK_SEND_MSG) || (get_task(port) == VDM_TASK_ALT_MODE))
 259:src\app\alt_mode/vdm_task_mngr.c ****             {
 260:src\app\alt_mode/vdm_task_mngr.c ****                 set_evt(port, VDM_EVT_RUN);
 261:src\app\alt_mode/vdm_task_mngr.c ****             }
 262:src\app\alt_mode/vdm_task_mngr.c ****             break;
 263:src\app\alt_mode/vdm_task_mngr.c **** 
 264:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_TASK_EXIT:
 265:src\app\alt_mode/vdm_task_mngr.c ****             vdm_task_mngr_deinit(port);
 266:src\app\alt_mode/vdm_task_mngr.c ****             app_get_status(port)->vdm_prcs_failed = true;
 267:src\app\alt_mode/vdm_task_mngr.c ****             break;
 268:src\app\alt_mode/vdm_task_mngr.c **** 
 269:src\app\alt_mode/vdm_task_mngr.c ****         default:
 270:src\app\alt_mode/vdm_task_mngr.c ****             return;
 271:src\app\alt_mode/vdm_task_mngr.c **** 
 272:src\app\alt_mode/vdm_task_mngr.c ****     }
 273:src\app\alt_mode/vdm_task_mngr.c **** }
 274:src\app\alt_mode/vdm_task_mngr.c **** 
 275:src\app\alt_mode/vdm_task_mngr.c **** static bool vdm_retry_check(uint8_t port, fail_status_t fail_stat)
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 33


 276:src\app\alt_mode/vdm_task_mngr.c **** {
 277:src\app\alt_mode/vdm_task_mngr.c ****     (vdm_stat[port].rec_retry_cnt)++;
 278:src\app\alt_mode/vdm_task_mngr.c **** 
 279:src\app\alt_mode/vdm_task_mngr.c ****     /* If we don't receive response more than rec_retry_cnt notify that fail */
 280:src\app\alt_mode/vdm_task_mngr.c ****     if (vdm_stat[port].rec_retry_cnt > MAX_RETRY_CNT)
 281:src\app\alt_mode/vdm_task_mngr.c ****     {
 282:src\app\alt_mode/vdm_task_mngr.c ****         set_vdm_failed(port, fail_stat);
 283:src\app\alt_mode/vdm_task_mngr.c ****         return false;
 284:src\app\alt_mode/vdm_task_mngr.c ****     }
 285:src\app\alt_mode/vdm_task_mngr.c **** 
 286:src\app\alt_mode/vdm_task_mngr.c ****     /* Try to send msg again */
 287:src\app\alt_mode/vdm_task_mngr.c ****     set_task(port, VDM_TASK_SEND_MSG);
 288:src\app\alt_mode/vdm_task_mngr.c **** 
 289:src\app\alt_mode/vdm_task_mngr.c ****     if (fail_stat == BUSY)
 290:src\app\alt_mode/vdm_task_mngr.c ****     {
 291:src\app\alt_mode/vdm_task_mngr.c ****         /* Start a BUSY timer to delay the retry attempt if port partner is busy. */
 292:src\app\alt_mode/vdm_task_mngr.c ****         timer_start(port, APP_VDM_BUSY_TIMER, APP_VDM_FAIL_RETRY_PERIOD, NULL);
 293:src\app\alt_mode/vdm_task_mngr.c ****     }
 294:src\app\alt_mode/vdm_task_mngr.c ****     else
 295:src\app\alt_mode/vdm_task_mngr.c ****     {
 296:src\app\alt_mode/vdm_task_mngr.c ****         /* Fix for Ellisys VDMD tests: Delay the retry by 10 ms. */
 297:src\app\alt_mode/vdm_task_mngr.c ****         timer_start(port, APP_VDM_BUSY_TIMER, 10u, NULL);
 298:src\app\alt_mode/vdm_task_mngr.c ****     }
 299:src\app\alt_mode/vdm_task_mngr.c **** 
 300:src\app\alt_mode/vdm_task_mngr.c ****     return true;
 301:src\app\alt_mode/vdm_task_mngr.c **** }
 302:src\app\alt_mode/vdm_task_mngr.c **** 
 303:src\app\alt_mode/vdm_task_mngr.c **** static void set_vdm_failed(uint8_t port, fail_status_t fail_stat)
 304:src\app\alt_mode/vdm_task_mngr.c **** {
 305:src\app\alt_mode/vdm_task_mngr.c ****     /* Reset retry counters */
 306:src\app\alt_mode/vdm_task_mngr.c ****     vdm_stat[port].rec_retry_cnt = 0;
 307:src\app\alt_mode/vdm_task_mngr.c ****     set_evt(port, VDM_EVT_FAIL);
 308:src\app\alt_mode/vdm_task_mngr.c ****     /* Set failed and save failed command */
 309:src\app\alt_mode/vdm_task_mngr.c ****     get_msg(port)->VDM_HDR.cmd = get_vdm_buff(port)->cmd_do->std_vdm_hdr.cmd;
 310:src\app\alt_mode/vdm_task_mngr.c ****     /* Save Failure code in the object position field */
 311:src\app\alt_mode/vdm_task_mngr.c ****     get_msg(port)->VDM_HDR.obj_pos = (uint32_t)fail_stat;
 312:src\app\alt_mode/vdm_task_mngr.c **** }
 313:src\app\alt_mode/vdm_task_mngr.c **** 
 314:src\app\alt_mode/vdm_task_mngr.c **** /* Received VDM callback */
 315:src\app\alt_mode/vdm_task_mngr.c **** static void vdm_rec_cbk(uint8_t port, resp_status_t status, const pd_packet_t* rec_vdm)
 316:src\app\alt_mode/vdm_task_mngr.c **** {
 317:src\app\alt_mode/vdm_task_mngr.c ****     uint32_t response;
 318:src\app\alt_mode/vdm_task_mngr.c ****     bool     run_task_flag = false;
 319:src\app\alt_mode/vdm_task_mngr.c **** 
 320:src\app\alt_mode/vdm_task_mngr.c ****     /* If response ACK */
 321:src\app\alt_mode/vdm_task_mngr.c ****     if (status == RES_RCVD)
 322:src\app\alt_mode/vdm_task_mngr.c ****     {
 323:src\app\alt_mode/vdm_task_mngr.c ****         /* Handle Standard VDM */
 324:src\app\alt_mode/vdm_task_mngr.c ****         if (rec_vdm->dat[VDM_HEADER_IDX].std_vdm_hdr.vdm_type == VDM_TYPE_STRUCTURED)
 325:src\app\alt_mode/vdm_task_mngr.c ****         {
 326:src\app\alt_mode/vdm_task_mngr.c ****             response = rec_vdm->dat[VDM_HEADER_IDX].std_vdm_hdr.cmd_type;
 327:src\app\alt_mode/vdm_task_mngr.c **** 
 328:src\app\alt_mode/vdm_task_mngr.c **** #if CCG_PD_REV3_ENABLE
 329:src\app\alt_mode/vdm_task_mngr.c ****             if (rec_vdm->sop == SOP)
 330:src\app\alt_mode/vdm_task_mngr.c ****             {
 331:src\app\alt_mode/vdm_task_mngr.c ****                 app_get_status(port)->vdm_version =
 332:src\app\alt_mode/vdm_task_mngr.c ****                     GET_MIN (app_get_status(port)->vdm_version, rec_vdm->dat[VDM_HEADER_IDX].std_vd
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 34


 333:src\app\alt_mode/vdm_task_mngr.c ****             }
 334:src\app\alt_mode/vdm_task_mngr.c **** #endif /* CCG_PD_REV3_ENABLE */
 335:src\app\alt_mode/vdm_task_mngr.c **** 
 336:src\app\alt_mode/vdm_task_mngr.c ****             /* Actual response received. */
 337:src\app\alt_mode/vdm_task_mngr.c ****             switch (response)
 338:src\app\alt_mode/vdm_task_mngr.c ****             {
 339:src\app\alt_mode/vdm_task_mngr.c ****                 case CMD_TYPE_RESP_ACK:
 340:src\app\alt_mode/vdm_task_mngr.c ****                     {
 341:src\app\alt_mode/vdm_task_mngr.c ****                         /* Check if received response is expected. */
 342:src\app\alt_mode/vdm_task_mngr.c ****                         if ((rec_vdm->dat[VDM_HEADER_IDX].std_vdm_hdr.cmd) ==
 343:src\app\alt_mode/vdm_task_mngr.c ****                                 (get_vdm_buff(port)->cmd_do[VDM_HEADER_IDX].std_vdm_hdr.cmd))
 344:src\app\alt_mode/vdm_task_mngr.c ****                         {
 345:src\app\alt_mode/vdm_task_mngr.c ****                             parse_vdm(port, rec_vdm);
 346:src\app\alt_mode/vdm_task_mngr.c ****                             set_evt(port, VDM_EVT_EVAL);
 347:src\app\alt_mode/vdm_task_mngr.c **** 
 348:src\app\alt_mode/vdm_task_mngr.c ****                             /* Reset timer counter when ACK. */
 349:src\app\alt_mode/vdm_task_mngr.c ****                             vdm_stat[port].rec_retry_cnt = 0;
 350:src\app\alt_mode/vdm_task_mngr.c ****                             /* Continue the state machine operation. */
 351:src\app\alt_mode/vdm_task_mngr.c ****                             run_task_flag = true;
 352:src\app\alt_mode/vdm_task_mngr.c ****                         }
 353:src\app\alt_mode/vdm_task_mngr.c ****                         else if (vdm_retry_check (port, BUSY) == false)
 354:src\app\alt_mode/vdm_task_mngr.c ****                         /* Check for retries. If failure persists after all retries, go to exit. */
 355:src\app\alt_mode/vdm_task_mngr.c ****                         {
 356:src\app\alt_mode/vdm_task_mngr.c ****                             run_task_flag = true;
 357:src\app\alt_mode/vdm_task_mngr.c ****                         }
 358:src\app\alt_mode/vdm_task_mngr.c ****                     }
 359:src\app\alt_mode/vdm_task_mngr.c ****                     break;
 360:src\app\alt_mode/vdm_task_mngr.c **** 
 361:src\app\alt_mode/vdm_task_mngr.c ****                 case CMD_TYPE_INITIATOR:
 362:src\app\alt_mode/vdm_task_mngr.c ****                 case CMD_TYPE_RESP_BUSY:
 363:src\app\alt_mode/vdm_task_mngr.c ****                     /* Target is BUSY. */
 364:src\app\alt_mode/vdm_task_mngr.c ****                     {
 365:src\app\alt_mode/vdm_task_mngr.c ****                         /* Check for retries. If failure persists after all retries, go to exit. */
 366:src\app\alt_mode/vdm_task_mngr.c ****                         if (vdm_retry_check (port, BUSY) == false)
 367:src\app\alt_mode/vdm_task_mngr.c ****                         {
 368:src\app\alt_mode/vdm_task_mngr.c ****                             run_task_flag = true;
 369:src\app\alt_mode/vdm_task_mngr.c ****                         }
 370:src\app\alt_mode/vdm_task_mngr.c ****                     }
 371:src\app\alt_mode/vdm_task_mngr.c ****                     break;
 372:src\app\alt_mode/vdm_task_mngr.c **** 
 373:src\app\alt_mode/vdm_task_mngr.c ****                 default:
 374:src\app\alt_mode/vdm_task_mngr.c ****                     /* Target NAK-ed the message. */
 375:src\app\alt_mode/vdm_task_mngr.c ****                     {
 376:src\app\alt_mode/vdm_task_mngr.c ****                         /* Notify manager with failed event */
 377:src\app\alt_mode/vdm_task_mngr.c ****                         set_vdm_failed(port, NACK);
 378:src\app\alt_mode/vdm_task_mngr.c ****                         run_task_flag = true;
 379:src\app\alt_mode/vdm_task_mngr.c ****                     }
 380:src\app\alt_mode/vdm_task_mngr.c ****                     break;
 381:src\app\alt_mode/vdm_task_mngr.c ****             }
 382:src\app\alt_mode/vdm_task_mngr.c ****         }
 383:src\app\alt_mode/vdm_task_mngr.c ****         /* Handle UVDM */
 384:src\app\alt_mode/vdm_task_mngr.c ****         else
 385:src\app\alt_mode/vdm_task_mngr.c ****         {
 386:src\app\alt_mode/vdm_task_mngr.c ****             parse_vdm(port, rec_vdm);
 387:src\app\alt_mode/vdm_task_mngr.c ****             set_evt(port, VDM_EVT_EVAL);
 388:src\app\alt_mode/vdm_task_mngr.c ****             /* Reset timer counter when ACK */
 389:src\app\alt_mode/vdm_task_mngr.c ****             vdm_stat[port].rec_retry_cnt = 0;
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 35


 390:src\app\alt_mode/vdm_task_mngr.c ****             run_task_flag = true;
 391:src\app\alt_mode/vdm_task_mngr.c ****         }
 392:src\app\alt_mode/vdm_task_mngr.c ****     }
 393:src\app\alt_mode/vdm_task_mngr.c ****     /* Attention related handler */
 394:src\app\alt_mode/vdm_task_mngr.c ****     else if (get_msg(port)->VDM_HDR.cmd == VDM_CMD_ATTENTION)
 395:src\app\alt_mode/vdm_task_mngr.c ****     {
 396:src\app\alt_mode/vdm_task_mngr.c ****         /* This statement need to notify alt mode that Attention VDM was successfuly sent */
 397:src\app\alt_mode/vdm_task_mngr.c ****         if ((status == CMD_SENT) && (get_task(port) == VDM_TASK_WAIT))
 398:src\app\alt_mode/vdm_task_mngr.c ****         {
 399:src\app\alt_mode/vdm_task_mngr.c ****             /* Start a timer. Command will be retried when timer expires. */
 400:src\app\alt_mode/vdm_task_mngr.c ****             timer_stop(port, APP_VDM_BUSY_TIMER);
 401:src\app\alt_mode/vdm_task_mngr.c ****             set_evt(port, VDM_EVT_EVAL);
 402:src\app\alt_mode/vdm_task_mngr.c ****             /* Reset retry counter */
 403:src\app\alt_mode/vdm_task_mngr.c ****             vdm_stat[port].rec_retry_cnt = 0;
 404:src\app\alt_mode/vdm_task_mngr.c ****             /* Continue the state machine operation. */
 405:src\app\alt_mode/vdm_task_mngr.c ****             run_task_flag = true;
 406:src\app\alt_mode/vdm_task_mngr.c ****         }
 407:src\app\alt_mode/vdm_task_mngr.c ****         else if (status == SEQ_ABORTED)
 408:src\app\alt_mode/vdm_task_mngr.c ****         {
 409:src\app\alt_mode/vdm_task_mngr.c ****             /* Try to send msg again */
 410:src\app\alt_mode/vdm_task_mngr.c ****             run_task_flag = true;
 411:src\app\alt_mode/vdm_task_mngr.c ****         }
 412:src\app\alt_mode/vdm_task_mngr.c ****     }
 413:src\app\alt_mode/vdm_task_mngr.c ****     else
 414:src\app\alt_mode/vdm_task_mngr.c ****     {
 415:src\app\alt_mode/vdm_task_mngr.c ****         /* Good CRC not received or no response (maybe corrupted packet). */
 416:src\app\alt_mode/vdm_task_mngr.c ****         if ((status == CMD_FAILED) || (status == RES_TIMEOUT))
 417:src\app\alt_mode/vdm_task_mngr.c ****         {
 418:src\app\alt_mode/vdm_task_mngr.c ****             /* Check for retries. If failure persists after all retries, go to exit. */
 419:src\app\alt_mode/vdm_task_mngr.c ****             if (vdm_retry_check (port, (fail_status_t)status) == false)
 420:src\app\alt_mode/vdm_task_mngr.c ****             {
 421:src\app\alt_mode/vdm_task_mngr.c ****                 run_task_flag = true;
 422:src\app\alt_mode/vdm_task_mngr.c ****             }
 423:src\app\alt_mode/vdm_task_mngr.c ****         }
 424:src\app\alt_mode/vdm_task_mngr.c ****         else
 425:src\app\alt_mode/vdm_task_mngr.c ****         {
 426:src\app\alt_mode/vdm_task_mngr.c ****             if (status == SEQ_ABORTED)
 427:src\app\alt_mode/vdm_task_mngr.c ****             {
 428:src\app\alt_mode/vdm_task_mngr.c ****                 /* Try to send msg again */
 429:src\app\alt_mode/vdm_task_mngr.c ****                 set_task(port, VDM_TASK_SEND_MSG);
 430:src\app\alt_mode/vdm_task_mngr.c ****             }
 431:src\app\alt_mode/vdm_task_mngr.c ****         }
 432:src\app\alt_mode/vdm_task_mngr.c ****     }
 433:src\app\alt_mode/vdm_task_mngr.c **** 
 434:src\app\alt_mode/vdm_task_mngr.c ****     /* Check if we need run any task */
 435:src\app\alt_mode/vdm_task_mngr.c ****     if (run_task_flag == true)
 436:src\app\alt_mode/vdm_task_mngr.c ****     {
 437:src\app\alt_mode/vdm_task_mngr.c **** #if ((DFP_ALT_MODE_SUPP) || (UFP_MODE_DISC_ENABLE))
 438:src\app\alt_mode/vdm_task_mngr.c ****         switch (vdm_stat[port].vdm_msg.VDM_HDR.cmd)
 439:src\app\alt_mode/vdm_task_mngr.c ****         {
 440:src\app\alt_mode/vdm_task_mngr.c ****             case VDM_CMD_DSC_IDENTITY:
 441:src\app\alt_mode/vdm_task_mngr.c ****                 set_task(port, VDM_TASK_DISC_ID);
 442:src\app\alt_mode/vdm_task_mngr.c ****                 break;
 443:src\app\alt_mode/vdm_task_mngr.c ****             case VDM_CMD_DSC_SVIDS:
 444:src\app\alt_mode/vdm_task_mngr.c ****                 set_task(port, VDM_TASK_DISC_SVID);
 445:src\app\alt_mode/vdm_task_mngr.c ****                 break;
 446:src\app\alt_mode/vdm_task_mngr.c ****             default:
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 36


 447:src\app\alt_mode/vdm_task_mngr.c ****                 set_task(port, VDM_TASK_ALT_MODE);
 448:src\app\alt_mode/vdm_task_mngr.c ****                 break;
 449:src\app\alt_mode/vdm_task_mngr.c ****         }
 450:src\app\alt_mode/vdm_task_mngr.c **** #else /* ((DFP_ALT_MODE_SUPP) || (UFP_MODE_DISC_ENABLE)) */
 451:src\app\alt_mode/vdm_task_mngr.c ****         set_task(port, VDM_TASK_ALT_MODE);
 452:src\app\alt_mode/vdm_task_mngr.c **** #endif /* ((DFP_ALT_MODE_SUPP) || (UFP_MODE_DISC_ENABLE)) */
 453:src\app\alt_mode/vdm_task_mngr.c ****     }
 454:src\app\alt_mode/vdm_task_mngr.c **** }
 455:src\app\alt_mode/vdm_task_mngr.c **** 
 456:src\app\alt_mode/vdm_task_mngr.c **** #if ((DFP_ALT_MODE_SUPP) || (UFP_MODE_DISC_ENABLE))
 457:src\app\alt_mode/vdm_task_mngr.c **** 
 458:src\app\alt_mode/vdm_task_mngr.c **** void set_disc_param(uint8_t port, uint8_t sop, std_vdm_cmd_t cmd)
 459:src\app\alt_mode/vdm_task_mngr.c **** {
 460:src\app\alt_mode/vdm_task_mngr.c ****     vdm_msg_info_t *msg_p = get_msg (port);
 461:src\app\alt_mode/vdm_task_mngr.c ****     
 462:src\app\alt_mode/vdm_task_mngr.c ****     /* Form Discover ID VDM packet. */
 463:src\app\alt_mode/vdm_task_mngr.c ****     msg_p->vdm_header.val   = NO_DATA;
 464:src\app\alt_mode/vdm_task_mngr.c ****     msg_p->VDM_HDR.svid     = STD_SVID;
 465:src\app\alt_mode/vdm_task_mngr.c ****     msg_p->VDM_HDR.cmd      = cmd;
 466:src\app\alt_mode/vdm_task_mngr.c ****     msg_p->vdo_numb         = NO_DATA;
 467:src\app\alt_mode/vdm_task_mngr.c ****     msg_p->sop_type         = sop;
 468:src\app\alt_mode/vdm_task_mngr.c ****     msg_p->VDM_HDR.vdm_type = VDM_TYPE_STRUCTURED;
 469:src\app\alt_mode/vdm_task_mngr.c ****             
 470:src\app\alt_mode/vdm_task_mngr.c **** }
 471:src\app\alt_mode/vdm_task_mngr.c ****     
 472:src\app\alt_mode/vdm_task_mngr.c **** static vdm_task_t vdm_task_mng_disc_id(uint8_t port, vdm_evt_t vdm_evt)
 473:src\app\alt_mode/vdm_task_mngr.c **** {
 474:src\app\alt_mode/vdm_task_mngr.c ****     vdm_msg_info_t *msg_p  = get_msg (port);
 475:src\app\alt_mode/vdm_task_mngr.c ****     vdm_task_t ret         = VDM_TASK_EXIT;
 476:src\app\alt_mode/vdm_task_mngr.c ****     const dpm_status_t *dpm_stat = dpm_get_info(port);
 477:src\app\alt_mode/vdm_task_mngr.c **** 
 478:src\app\alt_mode/vdm_task_mngr.c **** #if ((CCG_PD_REV3_ENABLE) && (UFP_ALT_MODE_SUPP) && (UFP_MODE_DISC_ENABLE))
 479:src\app\alt_mode/vdm_task_mngr.c ****     bool pd3_ufp = ((bool)(dpm_get_info(port)->spec_rev_sop_live >= PD_REV3) &&
 480:src\app\alt_mode/vdm_task_mngr.c ****             (gl_dpm_port_type[port] == PRT_TYPE_UFP));
 481:src\app\alt_mode/vdm_task_mngr.c **** #endif
 482:src\app\alt_mode/vdm_task_mngr.c **** 
 483:src\app\alt_mode/vdm_task_mngr.c ****     switch (vdm_evt)
 484:src\app\alt_mode/vdm_task_mngr.c ****     {
 485:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_EVT_RUN:
 486:src\app\alt_mode/vdm_task_mngr.c ****             /* Form Discover ID VDM packet */
 487:src\app\alt_mode/vdm_task_mngr.c ****             set_disc_param(port, SOP, VDM_CMD_DSC_IDENTITY);
 488:src\app\alt_mode/vdm_task_mngr.c ****             ret  = VDM_TASK_SEND_MSG;
 489:src\app\alt_mode/vdm_task_mngr.c ****             break;
 490:src\app\alt_mode/vdm_task_mngr.c **** 
 491:src\app\alt_mode/vdm_task_mngr.c ****             /* Evaluate received response */
 492:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_EVT_EVAL:
 493:src\app\alt_mode/vdm_task_mngr.c ****             /* Check is current port date role DFP */
 494:src\app\alt_mode/vdm_task_mngr.c ****             if (gl_dpm_port_type[port] != PRT_TYPE_UFP)
 495:src\app\alt_mode/vdm_task_mngr.c ****             {
 496:src\app\alt_mode/vdm_task_mngr.c **** #if VDM_RESP_QUERY_SUPPORTED
 497:src\app\alt_mode/vdm_task_mngr.c ****                 /* Store the D_ID response received. */
 498:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_disc_id_resp[port][0] = msg_p->vdm_header.val;
 499:src\app\alt_mode/vdm_task_mngr.c ****                 memcpy ((uint8_t *)&vdm_disc_id_resp[port][1], (uint8_t *)msg_p->vdo, msg_p->vdo_nu
 500:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_disc_id_resp_len[port] = msg_p->vdo_numb + 1;
 501:src\app\alt_mode/vdm_task_mngr.c **** #endif /* VDM_RESP_QUERY_SUPPORTED */
 502:src\app\alt_mode/vdm_task_mngr.c **** 
 503:src\app\alt_mode/vdm_task_mngr.c ****                 /* Set svid idx to zero before start DISC SVID */
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 37


 504:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_stat[port].svid_idx  = NO_DATA;
 505:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_stat[port].dsvid_cnt = 0;
 506:src\app\alt_mode/vdm_task_mngr.c **** 
 507:src\app\alt_mode/vdm_task_mngr.c ****                 /* Copy ID header to info struct */
 508:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_stat[port].atch_tgt.ama_vdo.val = msg_p->vdo[PD_DISC_ID_AMA_VDO_IDX].val;
 509:src\app\alt_mode/vdm_task_mngr.c ****                 /* Copy AMA VDO to info struct */
 510:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_stat[port].atch_tgt.tgt_id_header.val = msg_p->vdo[VDO_START_IDX - 1].val;
 511:src\app\alt_mode/vdm_task_mngr.c **** 
 512:src\app\alt_mode/vdm_task_mngr.c ****                 /* If AMA and cable (if present) do not need Vconn, disable VConn. */
 513:src\app\alt_mode/vdm_task_mngr.c ****                 if (
 514:src\app\alt_mode/vdm_task_mngr.c ****                         (dpm_stat->vconn_retain == 0) &&
 515:src\app\alt_mode/vdm_task_mngr.c ****                         ((msg_p->vdo[VDO_START_IDX - 1].std_id_hdr.prod_type != PROD_TYPE_AMA) ||
 516:src\app\alt_mode/vdm_task_mngr.c ****                             (msg_p->vdo[PD_DISC_ID_AMA_VDO_IDX].std_ama_vdo.vcon_req == 0)) &&
 517:src\app\alt_mode/vdm_task_mngr.c ****                         ((dpm_stat->emca_present == false) ||
 518:src\app\alt_mode/vdm_task_mngr.c ****                          (dpm_stat->cbl_vdo.std_cbl_vdo.cbl_term == CBL_TERM_BOTH_PAS_VCONN_NOT_REQ
 519:src\app\alt_mode/vdm_task_mngr.c ****                    )
 520:src\app\alt_mode/vdm_task_mngr.c ****                 {
 521:src\app\alt_mode/vdm_task_mngr.c ****                     vconn_disable(port, dpm_stat->rev_pol);
 522:src\app\alt_mode/vdm_task_mngr.c ****                 }
 523:src\app\alt_mode/vdm_task_mngr.c **** 
 524:src\app\alt_mode/vdm_task_mngr.c ****                 /* If alt modes not supported. */
 525:src\app\alt_mode/vdm_task_mngr.c ****                 if (msg_p->vdo[VDO_START_IDX - 1].std_id_hdr.mod_support == false)
 526:src\app\alt_mode/vdm_task_mngr.c ****                 {
 527:src\app\alt_mode/vdm_task_mngr.c **** #if CCG_UCSI_ENABLE                    
 528:src\app\alt_mode/vdm_task_mngr.c ****                     modal_op_support = false;
 529:src\app\alt_mode/vdm_task_mngr.c **** #endif /*CCG_UCSI_ENABLE*/    
 530:src\app\alt_mode/vdm_task_mngr.c ****                     break;
 531:src\app\alt_mode/vdm_task_mngr.c ****                 }
 532:src\app\alt_mode/vdm_task_mngr.c **** #if CCG_UCSI_ENABLE                 
 533:src\app\alt_mode/vdm_task_mngr.c ****                 modal_op_support = true;
 534:src\app\alt_mode/vdm_task_mngr.c **** #endif /*CCG_UCSI_ENABLE*/    
 535:src\app\alt_mode/vdm_task_mngr.c ****                 
 536:src\app\alt_mode/vdm_task_mngr.c ****                 /* Send Disc SVID cmd */
 537:src\app\alt_mode/vdm_task_mngr.c ****                 set_evt(port, VDM_EVT_RUN);
 538:src\app\alt_mode/vdm_task_mngr.c ****                 ret = VDM_TASK_DISC_SVID;
 539:src\app\alt_mode/vdm_task_mngr.c ****             }
 540:src\app\alt_mode/vdm_task_mngr.c **** 
 541:src\app\alt_mode/vdm_task_mngr.c **** #if ((CCG_PD_REV3_ENABLE) && (UFP_ALT_MODE_SUPP) && (UFP_MODE_DISC_ENABLE))
 542:src\app\alt_mode/vdm_task_mngr.c ****             /* Check is current port date role UFP */
 543:src\app\alt_mode/vdm_task_mngr.c ****             if (pd3_ufp)
 544:src\app\alt_mode/vdm_task_mngr.c ****             {
 545:src\app\alt_mode/vdm_task_mngr.c ****                 /* Send Disc SVID cmd */
 546:src\app\alt_mode/vdm_task_mngr.c ****                 set_evt(port, VDM_EVT_RUN);
 547:src\app\alt_mode/vdm_task_mngr.c ****                 ret = VDM_TASK_DISC_SVID;
 548:src\app\alt_mode/vdm_task_mngr.c ****             }
 549:src\app\alt_mode/vdm_task_mngr.c **** #endif /* (CCG_PD_REV3_ENABLE) && (UFP_ALT_MODE_SUPP) && (UFP_MODE_DISC_ENABLE) */
 550:src\app\alt_mode/vdm_task_mngr.c ****             break;
 551:src\app\alt_mode/vdm_task_mngr.c **** 
 552:src\app\alt_mode/vdm_task_mngr.c **** #if ((CCG_PD_REV3_ENABLE) && (UFP_ALT_MODE_SUPP) && (UFP_MODE_DISC_ENABLE))
 553:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_EVT_FAIL:
 554:src\app\alt_mode/vdm_task_mngr.c ****             /* Check is current port date role UFP */
 555:src\app\alt_mode/vdm_task_mngr.c ****             if (pd3_ufp)
 556:src\app\alt_mode/vdm_task_mngr.c ****             {
 557:src\app\alt_mode/vdm_task_mngr.c ****                 /* Send Disc SVID cmd */
 558:src\app\alt_mode/vdm_task_mngr.c ****                 set_evt(port, VDM_EVT_RUN);
 559:src\app\alt_mode/vdm_task_mngr.c ****                 ret = VDM_TASK_DISC_SVID;
 560:src\app\alt_mode/vdm_task_mngr.c ****             }
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 38


 561:src\app\alt_mode/vdm_task_mngr.c **** #endif /* (CCG_PD_REV3_ENABLE) && (UFP_ALT_MODE_SUPP) && (UFP_MODE_DISC_ENABLE) */
 562:src\app\alt_mode/vdm_task_mngr.c **** 
 563:src\app\alt_mode/vdm_task_mngr.c ****         default:
 564:src\app\alt_mode/vdm_task_mngr.c ****             break;
 565:src\app\alt_mode/vdm_task_mngr.c ****     }
 566:src\app\alt_mode/vdm_task_mngr.c **** 
 567:src\app\alt_mode/vdm_task_mngr.c ****     return ret;
 568:src\app\alt_mode/vdm_task_mngr.c **** }
 569:src\app\alt_mode/vdm_task_mngr.c **** 
 570:src\app\alt_mode/vdm_task_mngr.c **** /* Checks if input SVID already saved. */
 571:src\app\alt_mode/vdm_task_mngr.c **** static bool is_svid_stored(uint16_t *svid_arr, uint16_t svid)
 572:src\app\alt_mode/vdm_task_mngr.c **** {
 573:src\app\alt_mode/vdm_task_mngr.c ****     uint8_t  idx;
 574:src\app\alt_mode/vdm_task_mngr.c **** 
 575:src\app\alt_mode/vdm_task_mngr.c ****     /* Go through all SVIDs and compare with input SVID */
 576:src\app\alt_mode/vdm_task_mngr.c ****     for (idx = 0; idx < MAX_SVID_VDO_SUPP; idx++)
 577:src\app\alt_mode/vdm_task_mngr.c ****     {
 578:src\app\alt_mode/vdm_task_mngr.c ****         /* If input SVID already saved */
 579:src\app\alt_mode/vdm_task_mngr.c ****         if (svid_arr[idx] == svid)
 580:src\app\alt_mode/vdm_task_mngr.c ****         {
 581:src\app\alt_mode/vdm_task_mngr.c ****             return true;
 582:src\app\alt_mode/vdm_task_mngr.c ****         }
 583:src\app\alt_mode/vdm_task_mngr.c ****     }
 584:src\app\alt_mode/vdm_task_mngr.c **** 
 585:src\app\alt_mode/vdm_task_mngr.c ****     return false;
 586:src\app\alt_mode/vdm_task_mngr.c **** }
 587:src\app\alt_mode/vdm_task_mngr.c **** 
 588:src\app\alt_mode/vdm_task_mngr.c **** /*
 589:src\app\alt_mode/vdm_task_mngr.c ****    This function saves received Discover SVID resp,
 590:src\app\alt_mode/vdm_task_mngr.c ****    returns true if a NULL SVID was received.
 591:src\app\alt_mode/vdm_task_mngr.c ****  */
 592:src\app\alt_mode/vdm_task_mngr.c **** static bool save_svids(uint8_t port, uint16_t *svid_arr, uint8_t max_svid)
 593:src\app\alt_mode/vdm_task_mngr.c **** {
 594:src\app\alt_mode/vdm_task_mngr.c ****     uint8_t         idx, vdo_count;
 595:src\app\alt_mode/vdm_task_mngr.c ****     uint16_t        svid;
 596:src\app\alt_mode/vdm_task_mngr.c ****     uint8_t         svid_idx = vdm_stat[port].svid_idx;
 597:src\app\alt_mode/vdm_task_mngr.c ****     bool            retval   = false;
 598:src\app\alt_mode/vdm_task_mngr.c ****     vdm_msg_info_t  *msg_p   = get_msg (port);
 599:src\app\alt_mode/vdm_task_mngr.c **** 
 600:src\app\alt_mode/vdm_task_mngr.c ****     /* Compare received SVIDs with supported SVIDs */
 601:src\app\alt_mode/vdm_task_mngr.c ****     vdo_count = msg_p->vdo_numb;
 602:src\app\alt_mode/vdm_task_mngr.c **** 
 603:src\app\alt_mode/vdm_task_mngr.c ****     /* Stop further discovery if this response does not have the maximum no. of DOs. */
 604:src\app\alt_mode/vdm_task_mngr.c ****     if (vdo_count < (MAX_NO_OF_DO - 1))
 605:src\app\alt_mode/vdm_task_mngr.c ****     {
 606:src\app\alt_mode/vdm_task_mngr.c ****         retval = true;
 607:src\app\alt_mode/vdm_task_mngr.c ****     }
 608:src\app\alt_mode/vdm_task_mngr.c **** 
 609:src\app\alt_mode/vdm_task_mngr.c ****     for (idx = 0; idx < (vdo_count * 2); idx++)
 610:src\app\alt_mode/vdm_task_mngr.c ****     {
 611:src\app\alt_mode/vdm_task_mngr.c ****         if ((idx & 1) == 0)
 612:src\app\alt_mode/vdm_task_mngr.c ****         {
 613:src\app\alt_mode/vdm_task_mngr.c ****             /* Upper half of the DO. */
 614:src\app\alt_mode/vdm_task_mngr.c ****             svid = msg_p->vdo[idx >> 1].val >> 16u;
 615:src\app\alt_mode/vdm_task_mngr.c ****         }
 616:src\app\alt_mode/vdm_task_mngr.c ****         else
 617:src\app\alt_mode/vdm_task_mngr.c ****         {
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 39


 618:src\app\alt_mode/vdm_task_mngr.c ****             /* Lower half of the DO. */
 619:src\app\alt_mode/vdm_task_mngr.c ****             svid = msg_p->vdo[idx >> 1].val & 0xFFFFu;
 620:src\app\alt_mode/vdm_task_mngr.c ****         }
 621:src\app\alt_mode/vdm_task_mngr.c **** 
 622:src\app\alt_mode/vdm_task_mngr.c ****         if (svid_idx < (max_svid - 1))
 623:src\app\alt_mode/vdm_task_mngr.c ****         {
 624:src\app\alt_mode/vdm_task_mngr.c ****             /* Stop on NULL SVID. */
 625:src\app\alt_mode/vdm_task_mngr.c ****             if (svid == NO_DATA)
 626:src\app\alt_mode/vdm_task_mngr.c ****             {
 627:src\app\alt_mode/vdm_task_mngr.c ****                 retval = true;
 628:src\app\alt_mode/vdm_task_mngr.c ****             }
 629:src\app\alt_mode/vdm_task_mngr.c ****             else
 630:src\app\alt_mode/vdm_task_mngr.c ****             {
 631:src\app\alt_mode/vdm_task_mngr.c ****                 /* If SVID not saved previously then save */
 632:src\app\alt_mode/vdm_task_mngr.c ****                 if (is_svid_stored(svid_arr, svid) == false)
 633:src\app\alt_mode/vdm_task_mngr.c ****                 {
 634:src\app\alt_mode/vdm_task_mngr.c **** #if SAVE_SUPP_SVID_ONLY
 635:src\app\alt_mode/vdm_task_mngr.c ****                     if (is_svid_supported(svid, port) != false)
 636:src\app\alt_mode/vdm_task_mngr.c **** #endif /* SAVE_SUPP_SVID_ONLY */
 637:src\app\alt_mode/vdm_task_mngr.c ****                     {
 638:src\app\alt_mode/vdm_task_mngr.c ****                         svid_arr[svid_idx] = svid;
 639:src\app\alt_mode/vdm_task_mngr.c ****                         svid_idx++;
 640:src\app\alt_mode/vdm_task_mngr.c ****                     }
 641:src\app\alt_mode/vdm_task_mngr.c ****                 }
 642:src\app\alt_mode/vdm_task_mngr.c ****             }
 643:src\app\alt_mode/vdm_task_mngr.c ****         }
 644:src\app\alt_mode/vdm_task_mngr.c ****         else
 645:src\app\alt_mode/vdm_task_mngr.c ****         {
 646:src\app\alt_mode/vdm_task_mngr.c ****             /* Cannot continue as we have no more space. */
 647:src\app\alt_mode/vdm_task_mngr.c ****             retval = true;
 648:src\app\alt_mode/vdm_task_mngr.c ****             break;
 649:src\app\alt_mode/vdm_task_mngr.c ****         }
 650:src\app\alt_mode/vdm_task_mngr.c ****     }
 651:src\app\alt_mode/vdm_task_mngr.c **** 
 652:src\app\alt_mode/vdm_task_mngr.c ****     /* Set zero after last SVID in info */
 653:src\app\alt_mode/vdm_task_mngr.c ****     svid_arr[svid_idx] = NO_DATA;
 654:src\app\alt_mode/vdm_task_mngr.c ****     vdm_stat[port].svid_idx = svid_idx;
 655:src\app\alt_mode/vdm_task_mngr.c **** 
 656:src\app\alt_mode/vdm_task_mngr.c ****     /* Terminate discovery after MAX_DISC_SVID_COUNT attempts. */
 657:src\app\alt_mode/vdm_task_mngr.c ****     vdm_stat[port].dsvid_cnt++;
 658:src\app\alt_mode/vdm_task_mngr.c ****     if (vdm_stat[port].dsvid_cnt >= MAX_DISC_SVID_COUNT)
 659:src\app\alt_mode/vdm_task_mngr.c ****         retval = true;
 660:src\app\alt_mode/vdm_task_mngr.c **** 
 661:src\app\alt_mode/vdm_task_mngr.c ****     return retval;
 662:src\app\alt_mode/vdm_task_mngr.c **** }
 663:src\app\alt_mode/vdm_task_mngr.c **** 
 664:src\app\alt_mode/vdm_task_mngr.c **** static vdm_task_t vdm_task_mng_disc_svid(uint8_t port, vdm_evt_t vdm_evt)
 665:src\app\alt_mode/vdm_task_mngr.c **** {
 666:src\app\alt_mode/vdm_task_mngr.c ****     vdm_task_t          ret        = VDM_TASK_EXIT;
 667:src\app\alt_mode/vdm_task_mngr.c ****     const dpm_status_t *dpm_stat   = dpm_get_info(port);
 668:src\app\alt_mode/vdm_task_mngr.c ****     vdm_msg_info_t     *msg_p      = get_msg (port);
 669:src\app\alt_mode/vdm_task_mngr.c ****     bool                do_cbl_chk = false;
 670:src\app\alt_mode/vdm_task_mngr.c **** 
 671:src\app\alt_mode/vdm_task_mngr.c **** #if VDM_RESP_QUERY_SUPPORTED
 672:src\app\alt_mode/vdm_task_mngr.c ****     uint32_t tmp;
 673:src\app\alt_mode/vdm_task_mngr.c **** #endif /* VDM_RESP_QUERY_SUPPORTED */
 674:src\app\alt_mode/vdm_task_mngr.c **** 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 40


 675:src\app\alt_mode/vdm_task_mngr.c **** #if ((CCG_PD_REV3_ENABLE) && (UFP_ALT_MODE_SUPP) && (UFP_MODE_DISC_ENABLE))
 676:src\app\alt_mode/vdm_task_mngr.c ****     bool pd3_ufp = ((bool)(dpm_stat->spec_rev_sop_live >= PD_REV3) &&
 677:src\app\alt_mode/vdm_task_mngr.c ****             (gl_dpm_port_type[port] == PRT_TYPE_UFP));
 678:src\app\alt_mode/vdm_task_mngr.c **** #endif
 679:src\app\alt_mode/vdm_task_mngr.c **** 
 680:src\app\alt_mode/vdm_task_mngr.c ****     switch (vdm_evt)
 681:src\app\alt_mode/vdm_task_mngr.c ****     {
 682:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_EVT_RUN:
 683:src\app\alt_mode/vdm_task_mngr.c ****             /* Form Discover SVID VDM packet */
 684:src\app\alt_mode/vdm_task_mngr.c ****             set_disc_param(port, SOP, VDM_CMD_DSC_SVIDS);
 685:src\app\alt_mode/vdm_task_mngr.c ****             ret  = VDM_TASK_SEND_MSG;
 686:src\app\alt_mode/vdm_task_mngr.c ****             break;
 687:src\app\alt_mode/vdm_task_mngr.c **** 
 688:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_EVT_EVAL:
 689:src\app\alt_mode/vdm_task_mngr.c ****             /* Check is current port date role DFP */
 690:src\app\alt_mode/vdm_task_mngr.c ****             if (gl_dpm_port_type[port] != PRT_TYPE_UFP)
 691:src\app\alt_mode/vdm_task_mngr.c ****             {
 692:src\app\alt_mode/vdm_task_mngr.c ****                 /* For attached target response */
 693:src\app\alt_mode/vdm_task_mngr.c ****                 if (msg_p->sop_type == (uint8_t)SOP)
 694:src\app\alt_mode/vdm_task_mngr.c ****                 {
 695:src\app\alt_mode/vdm_task_mngr.c **** #if VDM_RESP_QUERY_SUPPORTED
 696:src\app\alt_mode/vdm_task_mngr.c ****                     if (vdm_stat[port].svid_idx == 0)
 697:src\app\alt_mode/vdm_task_mngr.c ****                     {
 698:src\app\alt_mode/vdm_task_mngr.c ****                         /* Save the DISC_SVID response. */
 699:src\app\alt_mode/vdm_task_mngr.c ****                         vdm_disc_svid_resp[port][0] = msg_p->vdm_header.val;
 700:src\app\alt_mode/vdm_task_mngr.c ****                         memcpy ((uint8_t *)&vdm_disc_svid_resp[port][1], (uint8_t *)msg_p->vdo, msg
 701:src\app\alt_mode/vdm_task_mngr.c ****                         vdm_disc_svid_resp_len[port] = msg_p->vdo_numb + 1;
 702:src\app\alt_mode/vdm_task_mngr.c ****                     }
 703:src\app\alt_mode/vdm_task_mngr.c ****                     else
 704:src\app\alt_mode/vdm_task_mngr.c ****                     {
 705:src\app\alt_mode/vdm_task_mngr.c ****                         /* Save the incremental DISC_SVID response. */
 706:src\app\alt_mode/vdm_task_mngr.c ****                         tmp = GET_MIN (msg_p->vdo_numb, MAX_DISC_SVID_RESP_LEN - vdm_disc_svid_resp
 707:src\app\alt_mode/vdm_task_mngr.c ****                         memcpy ((uint8_t *)&vdm_disc_svid_resp[port][vdm_disc_svid_resp_len[port]],
 708:src\app\alt_mode/vdm_task_mngr.c ****                                 tmp * sizeof (uint32_t));
 709:src\app\alt_mode/vdm_task_mngr.c ****                         vdm_disc_svid_resp_len[port] += tmp;
 710:src\app\alt_mode/vdm_task_mngr.c ****                     }
 711:src\app\alt_mode/vdm_task_mngr.c **** #endif /* VDM_RESP_QUERY_SUPPORTED */
 712:src\app\alt_mode/vdm_task_mngr.c **** 
 713:src\app\alt_mode/vdm_task_mngr.c ****                     if (msg_p->vdo[0].val == NONE_VDO)
 714:src\app\alt_mode/vdm_task_mngr.c ****                     {
 715:src\app\alt_mode/vdm_task_mngr.c ****                         /* No SVID supported */
 716:src\app\alt_mode/vdm_task_mngr.c ****                         break;
 717:src\app\alt_mode/vdm_task_mngr.c ****                     }
 718:src\app\alt_mode/vdm_task_mngr.c **** 
 719:src\app\alt_mode/vdm_task_mngr.c ****                     /* Save received SVIDs and check if a NULL SVID was received. */
 720:src\app\alt_mode/vdm_task_mngr.c ****                     if (save_svids (port, vdm_stat[port].atch_tgt.tgt_svid, MAX_SVID_VDO_SUPP) != f
 721:src\app\alt_mode/vdm_task_mngr.c ****                     {
 722:src\app\alt_mode/vdm_task_mngr.c ****                         /* If cable was detected and supports alternate modes, send SOP' disc svid 
 723:src\app\alt_mode/vdm_task_mngr.c ****                         if ((dpm_stat->emca_present != false) &&
 724:src\app\alt_mode/vdm_task_mngr.c ****                                 (dpm_stat->cbl_mode_en != false))
 725:src\app\alt_mode/vdm_task_mngr.c ****                         {
 726:src\app\alt_mode/vdm_task_mngr.c ****                             if (
 727:src\app\alt_mode/vdm_task_mngr.c ****                                     (dpm_stat->vconn_logical)
 728:src\app\alt_mode/vdm_task_mngr.c ****                             #if VCONN_OCP_ENABLE
 729:src\app\alt_mode/vdm_task_mngr.c ****                                     && ((app_get_status(port)->fault_status & APP_PORT_VCONN_FAULT_
 730:src\app\alt_mode/vdm_task_mngr.c ****                             #endif /* VCONN_OCP_ENABLE */
 731:src\app\alt_mode/vdm_task_mngr.c ****                                )
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 41


 732:src\app\alt_mode/vdm_task_mngr.c ****                             {
 733:src\app\alt_mode/vdm_task_mngr.c ****                                 if (!vconn_is_present (port))
 734:src\app\alt_mode/vdm_task_mngr.c ****                                 {
 735:src\app\alt_mode/vdm_task_mngr.c ****                                     /*
 736:src\app\alt_mode/vdm_task_mngr.c ****                                      * We are VConn source and VConn is off. Enable and apply a del
 737:src\app\alt_mode/vdm_task_mngr.c ****                                      * the EMCA power up.
 738:src\app\alt_mode/vdm_task_mngr.c ****                                      */
 739:src\app\alt_mode/vdm_task_mngr.c ****                                     if (vconn_enable (port, dpm_stat->rev_pol))
 740:src\app\alt_mode/vdm_task_mngr.c ****                                     {
 741:src\app\alt_mode/vdm_task_mngr.c ****                                         /* Set a flag to indicate that we need to do Cable SVID che
 742:src\app\alt_mode/vdm_task_mngr.c ****                                         do_cbl_chk = true;
 743:src\app\alt_mode/vdm_task_mngr.c **** 
 744:src\app\alt_mode/vdm_task_mngr.c ****                                         /* Start a timer to delay the retry attempt. */
 745:src\app\alt_mode/vdm_task_mngr.c ****                                         timer_start(port, APP_VDM_BUSY_TIMER, APP_CABLE_POWER_UP_DE
 746:src\app\alt_mode/vdm_task_mngr.c ****                                     }
 747:src\app\alt_mode/vdm_task_mngr.c ****                                 }
 748:src\app\alt_mode/vdm_task_mngr.c ****                                 else
 749:src\app\alt_mode/vdm_task_mngr.c ****                                 {
 750:src\app\alt_mode/vdm_task_mngr.c ****                                     /* Set a flag to indicate that we need to do Cable SVID checks.
 751:src\app\alt_mode/vdm_task_mngr.c ****                                     do_cbl_chk = true;
 752:src\app\alt_mode/vdm_task_mngr.c ****                                 }
 753:src\app\alt_mode/vdm_task_mngr.c ****                             }
 754:src\app\alt_mode/vdm_task_mngr.c ****                         }
 755:src\app\alt_mode/vdm_task_mngr.c **** 
 756:src\app\alt_mode/vdm_task_mngr.c ****                         if (do_cbl_chk)
 757:src\app\alt_mode/vdm_task_mngr.c ****                         {
 758:src\app\alt_mode/vdm_task_mngr.c ****                             vdm_stat[port].svid_idx  = 0;
 759:src\app\alt_mode/vdm_task_mngr.c ****                             vdm_stat[port].dsvid_cnt = 0;
 760:src\app\alt_mode/vdm_task_mngr.c ****                             set_disc_param(port, SOP_PRIME, VDM_CMD_DSC_SVIDS);
 761:src\app\alt_mode/vdm_task_mngr.c ****                             ret = VDM_TASK_SEND_MSG;
 762:src\app\alt_mode/vdm_task_mngr.c ****                         }
 763:src\app\alt_mode/vdm_task_mngr.c ****                         else
 764:src\app\alt_mode/vdm_task_mngr.c ****                         {
 765:src\app\alt_mode/vdm_task_mngr.c ****                             /*
 766:src\app\alt_mode/vdm_task_mngr.c ****                              * We are either not VConn source or failed to turn VConn ON.
 767:src\app\alt_mode/vdm_task_mngr.c ****                              * Skip SOP' checks in the unlikely case where this happens.
 768:src\app\alt_mode/vdm_task_mngr.c ****                              */
 769:src\app\alt_mode/vdm_task_mngr.c ****                             set_evt(port, VDM_EVT_RUN);
 770:src\app\alt_mode/vdm_task_mngr.c ****                             ret = VDM_TASK_REG_ATCH_TGT_INFO;
 771:src\app\alt_mode/vdm_task_mngr.c ****                         }
 772:src\app\alt_mode/vdm_task_mngr.c ****                     }
 773:src\app\alt_mode/vdm_task_mngr.c ****                     else
 774:src\app\alt_mode/vdm_task_mngr.c ****                     {
 775:src\app\alt_mode/vdm_task_mngr.c ****                         /* If not all SVID received, ask for the next set of SVIDs. */
 776:src\app\alt_mode/vdm_task_mngr.c ****                         set_disc_param(port, SOP, VDM_CMD_DSC_SVIDS);
 777:src\app\alt_mode/vdm_task_mngr.c ****                         ret = VDM_TASK_SEND_MSG;
 778:src\app\alt_mode/vdm_task_mngr.c ****                     }
 779:src\app\alt_mode/vdm_task_mngr.c ****                 }
 780:src\app\alt_mode/vdm_task_mngr.c ****                 /* For cable response */
 781:src\app\alt_mode/vdm_task_mngr.c ****                 else
 782:src\app\alt_mode/vdm_task_mngr.c ****                 {
 783:src\app\alt_mode/vdm_task_mngr.c ****                     /* If the EMCA returned any DOs, save the content. */
 784:src\app\alt_mode/vdm_task_mngr.c ****                     if ((msg_p->vdo[VDO_START_IDX - 1].val != NONE_VDO) &&
 785:src\app\alt_mode/vdm_task_mngr.c ****                             (save_svids(port, vdm_stat[port].atch_tgt.cbl_svid, MAX_CABLE_SVID_SUPP
 786:src\app\alt_mode/vdm_task_mngr.c ****                     {
 787:src\app\alt_mode/vdm_task_mngr.c ****                         /* If not all SVID received, ask for the next set of SVIDs. */
 788:src\app\alt_mode/vdm_task_mngr.c ****                         set_disc_param(port, SOP_PRIME, VDM_CMD_DSC_SVIDS);
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 42


 789:src\app\alt_mode/vdm_task_mngr.c ****                         ret = VDM_TASK_SEND_MSG;
 790:src\app\alt_mode/vdm_task_mngr.c ****                     }
 791:src\app\alt_mode/vdm_task_mngr.c ****                     else
 792:src\app\alt_mode/vdm_task_mngr.c ****                     {
 793:src\app\alt_mode/vdm_task_mngr.c ****                         /*
 794:src\app\alt_mode/vdm_task_mngr.c ****                            If EMCA did not support any SVIDs of interest and does not require VConn
 795:src\app\alt_mode/vdm_task_mngr.c ****                            we can disable VConn.
 796:src\app\alt_mode/vdm_task_mngr.c ****                          */
 797:src\app\alt_mode/vdm_task_mngr.c ****                         if (vdm_stat[port].atch_tgt.cbl_svid[0] == NO_DATA)
 798:src\app\alt_mode/vdm_task_mngr.c ****                         {
 799:src\app\alt_mode/vdm_task_mngr.c ****                             if (
 800:src\app\alt_mode/vdm_task_mngr.c ****                                     (dpm_stat->vconn_retain == 0) &&
 801:src\app\alt_mode/vdm_task_mngr.c ****                                     (dpm_stat->cbl_vdo.std_cbl_vdo.cbl_term == CBL_TERM_BOTH_PAS_VC
 802:src\app\alt_mode/vdm_task_mngr.c ****                                )
 803:src\app\alt_mode/vdm_task_mngr.c ****                             {
 804:src\app\alt_mode/vdm_task_mngr.c ****                                 vconn_disable(port, dpm_stat->rev_pol);
 805:src\app\alt_mode/vdm_task_mngr.c ****                             }
 806:src\app\alt_mode/vdm_task_mngr.c ****                         }
 807:src\app\alt_mode/vdm_task_mngr.c **** 
 808:src\app\alt_mode/vdm_task_mngr.c ****                         /* Move to the next step. */
 809:src\app\alt_mode/vdm_task_mngr.c ****                         set_evt(port, VDM_EVT_RUN);
 810:src\app\alt_mode/vdm_task_mngr.c ****                         ret = VDM_TASK_REG_ATCH_TGT_INFO;
 811:src\app\alt_mode/vdm_task_mngr.c ****                     }
 812:src\app\alt_mode/vdm_task_mngr.c ****                 }
 813:src\app\alt_mode/vdm_task_mngr.c ****             }
 814:src\app\alt_mode/vdm_task_mngr.c **** 
 815:src\app\alt_mode/vdm_task_mngr.c **** #if ((CCG_PD_REV3_ENABLE) && (UFP_ALT_MODE_SUPP) && (UFP_MODE_DISC_ENABLE))
 816:src\app\alt_mode/vdm_task_mngr.c ****             /* Check is current port date role UFP */
 817:src\app\alt_mode/vdm_task_mngr.c ****             if (pd3_ufp)
 818:src\app\alt_mode/vdm_task_mngr.c ****             {
 819:src\app\alt_mode/vdm_task_mngr.c ****                 /* Send Disc SVID cmd */
 820:src\app\alt_mode/vdm_task_mngr.c ****                 set_evt(port, VDM_EVT_RUN);
 821:src\app\alt_mode/vdm_task_mngr.c ****                 ret = VDM_TASK_REG_ATCH_TGT_INFO;
 822:src\app\alt_mode/vdm_task_mngr.c ****             }
 823:src\app\alt_mode/vdm_task_mngr.c **** #endif /* (CCG_PD_REV3_ENABLE) && (UFP_ALT_MODE_SUPP) && (UFP_MODE_DISC_ENABLE) */
 824:src\app\alt_mode/vdm_task_mngr.c ****             break;
 825:src\app\alt_mode/vdm_task_mngr.c **** 
 826:src\app\alt_mode/vdm_task_mngr.c ****         case VDM_EVT_FAIL:
 827:src\app\alt_mode/vdm_task_mngr.c ****             /* If cable SVID fails */
 828:src\app\alt_mode/vdm_task_mngr.c ****             if (msg_p->sop_type == (uint8_t)SOP_PRIME)
 829:src\app\alt_mode/vdm_task_mngr.c ****             {
 830:src\app\alt_mode/vdm_task_mngr.c ****                 set_evt(port, VDM_EVT_RUN);
 831:src\app\alt_mode/vdm_task_mngr.c ****                 ret = VDM_TASK_REG_ATCH_TGT_INFO;
 832:src\app\alt_mode/vdm_task_mngr.c ****             }
 833:src\app\alt_mode/vdm_task_mngr.c ****             break;
 834:src\app\alt_mode/vdm_task_mngr.c **** 
 835:src\app\alt_mode/vdm_task_mngr.c ****         default:
 836:src\app\alt_mode/vdm_task_mngr.c ****             break;
 837:src\app\alt_mode/vdm_task_mngr.c ****     }
 838:src\app\alt_mode/vdm_task_mngr.c **** 
 839:src\app\alt_mode/vdm_task_mngr.c ****     return ret;
 840:src\app\alt_mode/vdm_task_mngr.c **** }
 841:src\app\alt_mode/vdm_task_mngr.c **** 
 842:src\app\alt_mode/vdm_task_mngr.c **** #endif /* ((DFP_ALT_MODE_SUPP) || (UFP_MODE_DISC_ENABLE)) */
 843:src\app\alt_mode/vdm_task_mngr.c **** 
 844:src\app\alt_mode/vdm_task_mngr.c **** static void reset_vdm_mngr(uint8_t port)
 845:src\app\alt_mode/vdm_task_mngr.c **** {
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 43


 846:src\app\alt_mode/vdm_task_mngr.c ****     vdm_stat[port].rec_retry_cnt = NO_DATA;
 847:src\app\alt_mode/vdm_task_mngr.c ****     vdm_stat[port].svid_idx      = NO_DATA;
 848:src\app\alt_mode/vdm_task_mngr.c ****     vdm_stat[port].dsvid_cnt     = NO_DATA;
 849:src\app\alt_mode/vdm_task_mngr.c ****     /* Clear arrays which hold SVIDs */
 850:src\app\alt_mode/vdm_task_mngr.c ****     memset(&vdm_stat[port].atch_tgt, NO_DATA, sizeof(atch_tgt_info_t));
 851:src\app\alt_mode/vdm_task_mngr.c ****     /* Store the pointer to the cable VDO discovered by PD stack. */
 852:src\app\alt_mode/vdm_task_mngr.c ****     vdm_stat[port].atch_tgt.cbl_vdo = &(dpm_get_info(port)->cbl_vdo);
 853:src\app\alt_mode/vdm_task_mngr.c ****     /* Clear the SOP'' reset state. */
 854:src\app\alt_mode/vdm_task_mngr.c ****     vdm_emca_rst_state[port] = CABLE_DP_RESET_IDLE;
 855:src\app\alt_mode/vdm_task_mngr.c ****     vdm_emca_rst_count[port] = 0;
 856:src\app\alt_mode/vdm_task_mngr.c **** 
 857:src\app\alt_mode/vdm_task_mngr.c ****     /* Stop the VDM task delay timer. */
 858:src\app\alt_mode/vdm_task_mngr.c ****     timer_stop(port, APP_VDM_BUSY_TIMER);
 859:src\app\alt_mode/vdm_task_mngr.c **** 
 860:src\app\alt_mode/vdm_task_mngr.c **** #if VDM_RESP_QUERY_SUPPORTED
 861:src\app\alt_mode/vdm_task_mngr.c ****     vdm_disc_id_resp_len[port] = 0;
 862:src\app\alt_mode/vdm_task_mngr.c ****     memset ((uint8_t *)&vdm_disc_id_resp[port], 0, MAX_NO_OF_DO * sizeof (uint32_t));
 863:src\app\alt_mode/vdm_task_mngr.c ****     vdm_disc_svid_resp_len[port] = 0;
 864:src\app\alt_mode/vdm_task_mngr.c ****     memset ((uint8_t *)&vdm_disc_svid_resp[port], 0, MAX_DISC_SVID_RESP_LEN * sizeof (uint32_t));
 865:src\app\alt_mode/vdm_task_mngr.c **** #endif /* VDM_RESP_QUERY_SUPPORTED */
 866:src\app\alt_mode/vdm_task_mngr.c **** }
 867:src\app\alt_mode/vdm_task_mngr.c **** 
 868:src\app\alt_mode/vdm_task_mngr.c **** void vdm_task_mngr_deinit(uint8_t port)
 869:src\app\alt_mode/vdm_task_mngr.c **** {
 870:src\app\alt_mode/vdm_task_mngr.c ****     /* CDT 247011 re-fix */
 871:src\app\alt_mode/vdm_task_mngr.c ****     app_get_status(port)->vdm_prcs_failed = false;
 872:src\app\alt_mode/vdm_task_mngr.c ****     /* If VDM task is not active, no need to go through the rest of the steps. */
 873:src\app\alt_mode/vdm_task_mngr.c ****     if (app_get_status(port)->vdm_task_en != false)
 874:src\app\alt_mode/vdm_task_mngr.c ****     {
 875:src\app\alt_mode/vdm_task_mngr.c ****         reset_vdm_mngr(port);
 876:src\app\alt_mode/vdm_task_mngr.c ****         app_get_status(port)->vdm_task_en = false;
 877:src\app\alt_mode/vdm_task_mngr.c ****         app_get_status(port)->alt_mode_entered = false;
 878:src\app\alt_mode/vdm_task_mngr.c ****         /* Exit from alt mode manager */
 879:src\app\alt_mode/vdm_task_mngr.c ****         vdm_task_mngr_alt_mode_process(port, VDM_EVT_EXIT);
 880:src\app\alt_mode/vdm_task_mngr.c ****         /* Deinit App HW */
 881:src\app\alt_mode/vdm_task_mngr.c ****         alt_mode_hw_deinit(port);
 882:src\app\alt_mode/vdm_task_mngr.c ****     }
 883:src\app\alt_mode/vdm_task_mngr.c **** }
 884:src\app\alt_mode/vdm_task_mngr.c **** 
 885:src\app\alt_mode/vdm_task_mngr.c **** static void sop_dp_soft_reset_cb(uint8_t port, resp_status_t resp, const pd_packet_t *pkt_ptr)
 886:src\app\alt_mode/vdm_task_mngr.c **** {
 887:src\app\alt_mode/vdm_task_mngr.c ****     switch (resp)
 888:src\app\alt_mode/vdm_task_mngr.c ****     {
 889:src\app\alt_mode/vdm_task_mngr.c ****         case CMD_SENT:
 890:src\app\alt_mode/vdm_task_mngr.c ****             /* Do nothing. */
 891:src\app\alt_mode/vdm_task_mngr.c ****             break;
 892:src\app\alt_mode/vdm_task_mngr.c **** 
 893:src\app\alt_mode/vdm_task_mngr.c ****         case RES_RCVD:
 894:src\app\alt_mode/vdm_task_mngr.c ****             /* Proceed with rest of alternate mode state machine. */
 895:src\app\alt_mode/vdm_task_mngr.c ****             vdm_emca_rst_state[port] = CABLE_DP_RESET_DONE;
 896:src\app\alt_mode/vdm_task_mngr.c ****             break;
 897:src\app\alt_mode/vdm_task_mngr.c **** 
 898:src\app\alt_mode/vdm_task_mngr.c ****         default:
 899:src\app\alt_mode/vdm_task_mngr.c ****             /* Retry the cable SOFT_RESET. */
 900:src\app\alt_mode/vdm_task_mngr.c ****             vdm_emca_rst_count[port]++;
 901:src\app\alt_mode/vdm_task_mngr.c ****             if (vdm_emca_rst_count[port] >= MAX_EMCA_DP_RESET_COUNT)
 902:src\app\alt_mode/vdm_task_mngr.c ****             {
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 44


 903:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_emca_rst_state[port] = CABLE_DP_RESET_DONE;
 904:src\app\alt_mode/vdm_task_mngr.c ****             }
 905:src\app\alt_mode/vdm_task_mngr.c ****             else
 906:src\app\alt_mode/vdm_task_mngr.c ****             {
 907:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_emca_rst_state[port] = CABLE_DP_RESET_RETRY;
 908:src\app\alt_mode/vdm_task_mngr.c ****             }
 909:src\app\alt_mode/vdm_task_mngr.c ****             break;
 910:src\app\alt_mode/vdm_task_mngr.c ****     }
 911:src\app\alt_mode/vdm_task_mngr.c **** }
 912:src\app\alt_mode/vdm_task_mngr.c **** 
 913:src\app\alt_mode/vdm_task_mngr.c **** static void send_sop_dp_soft_reset(uint8_t port)
 914:src\app\alt_mode/vdm_task_mngr.c **** {
 915:src\app\alt_mode/vdm_task_mngr.c ****     dpm_pd_cmd_buf_t dpm_cmd_param;
 916:src\app\alt_mode/vdm_task_mngr.c ****     ccg_status_t     api_stat;
 917:src\app\alt_mode/vdm_task_mngr.c **** 
 918:src\app\alt_mode/vdm_task_mngr.c ****     dpm_cmd_param.cmd_sop      = SOP_DPRIME;
 919:src\app\alt_mode/vdm_task_mngr.c ****     dpm_cmd_param.no_of_cmd_do = 0;
 920:src\app\alt_mode/vdm_task_mngr.c ****     dpm_cmd_param.dat_ptr      = 0;
 921:src\app\alt_mode/vdm_task_mngr.c ****     dpm_cmd_param.timeout      = 15;
 922:src\app\alt_mode/vdm_task_mngr.c **** 
 923:src\app\alt_mode/vdm_task_mngr.c ****     api_stat = dpm_pd_command (port, DPM_CMD_SEND_SOFT_RESET_EMCA, &dpm_cmd_param, sop_dp_soft_rese
 924:src\app\alt_mode/vdm_task_mngr.c ****     switch (api_stat)
 925:src\app\alt_mode/vdm_task_mngr.c ****     {
 926:src\app\alt_mode/vdm_task_mngr.c ****         case CCG_STAT_SUCCESS:
 927:src\app\alt_mode/vdm_task_mngr.c ****             /* Wait for the cable SOFT_RESET response. */
 928:src\app\alt_mode/vdm_task_mngr.c ****             vdm_emca_rst_state[port] = CABLE_DP_RESET_WAIT;
 929:src\app\alt_mode/vdm_task_mngr.c ****             break;
 930:src\app\alt_mode/vdm_task_mngr.c **** 
 931:src\app\alt_mode/vdm_task_mngr.c ****         case CCG_STAT_BUSY:
 932:src\app\alt_mode/vdm_task_mngr.c ****         case CCG_STAT_NOT_READY:
 933:src\app\alt_mode/vdm_task_mngr.c ****             /* Need to retry the command. */
 934:src\app\alt_mode/vdm_task_mngr.c ****             vdm_emca_rst_state[port] = CABLE_DP_RESET_RETRY;
 935:src\app\alt_mode/vdm_task_mngr.c ****             break;
 936:src\app\alt_mode/vdm_task_mngr.c **** 
 937:src\app\alt_mode/vdm_task_mngr.c ****         default:
 938:src\app\alt_mode/vdm_task_mngr.c ****             /* Connection state changed. Abort the Cable SOFT_RESET process. */
 939:src\app\alt_mode/vdm_task_mngr.c ****             vdm_emca_rst_state[port] = CABLE_DP_RESET_DONE;
 940:src\app\alt_mode/vdm_task_mngr.c ****             break;
 941:src\app\alt_mode/vdm_task_mngr.c ****     }
 942:src\app\alt_mode/vdm_task_mngr.c **** }
 943:src\app\alt_mode/vdm_task_mngr.c **** 
 944:src\app\alt_mode/vdm_task_mngr.c **** /* Fill DPM cmd buffer with properly VDM info */
 945:src\app\alt_mode/vdm_task_mngr.c **** static uint8_t compose_vdm(uint8_t port)
 946:src\app\alt_mode/vdm_task_mngr.c **** {
 947:src\app\alt_mode/vdm_task_mngr.c ****     uint8_t           idx;
 948:src\app\alt_mode/vdm_task_mngr.c ****     dpm_pd_cmd_buf_t  *vdm_buf = get_vdm_buff(port);
 949:src\app\alt_mode/vdm_task_mngr.c ****     vdm_msg_info_t    *msg_p   = get_msg(port);
 950:src\app\alt_mode/vdm_task_mngr.c **** 
 951:src\app\alt_mode/vdm_task_mngr.c ****     vdm_buf->cmd_sop                = msg_p->sop_type;
 952:src\app\alt_mode/vdm_task_mngr.c ****     vdm_buf->no_of_cmd_do           = msg_p->vdo_numb + VDO_START_IDX;
 953:src\app\alt_mode/vdm_task_mngr.c ****     vdm_buf->cmd_do[VDM_HEADER_IDX] = msg_p->vdm_header;
 954:src\app\alt_mode/vdm_task_mngr.c **** 
 955:src\app\alt_mode/vdm_task_mngr.c ****     if (msg_p->VDM_HDR.vdm_type == VDM_TYPE_STRUCTURED)
 956:src\app\alt_mode/vdm_task_mngr.c ****     {
 957:src\app\alt_mode/vdm_task_mngr.c ****         msg_p->VDM_HDR.cmd_type    = CMD_TYPE_INITIATOR;
 958:src\app\alt_mode/vdm_task_mngr.c **** 
 959:src\app\alt_mode/vdm_task_mngr.c ****         if (vdm_buf->cmd_sop == SOP)
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 45


 960:src\app\alt_mode/vdm_task_mngr.c ****         {
 961:src\app\alt_mode/vdm_task_mngr.c ****             vdm_buf->cmd_do[VDM_HEADER_IDX].std_vdm_hdr.st_ver = app_get_status(port)->vdm_version;
 962:src\app\alt_mode/vdm_task_mngr.c ****         }
 963:src\app\alt_mode/vdm_task_mngr.c ****         else
 964:src\app\alt_mode/vdm_task_mngr.c ****         {
 965:src\app\alt_mode/vdm_task_mngr.c ****             vdm_buf->cmd_do[VDM_HEADER_IDX].std_vdm_hdr.st_ver = dpm_get_info(port)->cbl_vdm_versio
 966:src\app\alt_mode/vdm_task_mngr.c ****         }
 967:src\app\alt_mode/vdm_task_mngr.c **** 
 968:src\app\alt_mode/vdm_task_mngr.c ****         /* Set exceptions for Enter/Exit mode cmd period */
 969:src\app\alt_mode/vdm_task_mngr.c ****         switch (msg_p->VDM_HDR.cmd)
 970:src\app\alt_mode/vdm_task_mngr.c ****         {
 971:src\app\alt_mode/vdm_task_mngr.c ****             case VDM_CMD_ENTER_MODE:
 972:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_buf->timeout = PD_VDM_ENTER_MODE_RESPONSE_TIMER_PERIOD;
 973:src\app\alt_mode/vdm_task_mngr.c ****                 break;
 974:src\app\alt_mode/vdm_task_mngr.c ****             case VDM_CMD_EXIT_MODE:
 975:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_buf->timeout = PD_VDM_EXIT_MODE_RESPONSE_TIMER_PERIOD;
 976:src\app\alt_mode/vdm_task_mngr.c ****                 break;
 977:src\app\alt_mode/vdm_task_mngr.c ****             case VDM_CMD_ATTENTION:
 978:src\app\alt_mode/vdm_task_mngr.c ****                 /* No timeout required for attention messages. */
 979:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_buf->timeout = NO_DATA;
 980:src\app\alt_mode/vdm_task_mngr.c ****                 break;
 981:src\app\alt_mode/vdm_task_mngr.c ****             default:
 982:src\app\alt_mode/vdm_task_mngr.c ****                 vdm_buf->timeout = PD_VDM_RESPONSE_TIMER_PERIOD;
 983:src\app\alt_mode/vdm_task_mngr.c ****                 break;
 984:src\app\alt_mode/vdm_task_mngr.c ****         }
 985:src\app\alt_mode/vdm_task_mngr.c ****     }
 986:src\app\alt_mode/vdm_task_mngr.c ****     /* Handle UVDM */
 987:src\app\alt_mode/vdm_task_mngr.c ****     else
 988:src\app\alt_mode/vdm_task_mngr.c ****     {
 989:src\app\alt_mode/vdm_task_mngr.c ****         vdm_buf->timeout = PD_VDM_RESPONSE_TIMER_PERIOD;
 990:src\app\alt_mode/vdm_task_mngr.c ****     }
 991:src\app\alt_mode/vdm_task_mngr.c **** 
 992:src\app\alt_mode/vdm_task_mngr.c ****     /* Copy VDOs to send buffer */
 993:src\app\alt_mode/vdm_task_mngr.c ****     if (msg_p->vdo_numb > NO_DATA)
 994:src\app\alt_mode/vdm_task_mngr.c ****     {
 995:src\app\alt_mode/vdm_task_mngr.c ****         for (idx = 0; idx < msg_p->vdo_numb; idx++)
 996:src\app\alt_mode/vdm_task_mngr.c ****         {
 997:src\app\alt_mode/vdm_task_mngr.c ****             vdm_buf->cmd_do[idx + VDO_START_IDX].val = msg_p->vdo[idx].val;
 998:src\app\alt_mode/vdm_task_mngr.c ****         }
 999:src\app\alt_mode/vdm_task_mngr.c ****     }
1000:src\app\alt_mode/vdm_task_mngr.c **** 
1001:src\app\alt_mode/vdm_task_mngr.c ****     return true;
1002:src\app\alt_mode/vdm_task_mngr.c **** }
1003:src\app\alt_mode/vdm_task_mngr.c **** 
1004:src\app\alt_mode/vdm_task_mngr.c **** /* Parse received VDM and save info in  */
1005:src\app\alt_mode/vdm_task_mngr.c **** static uint8_t parse_vdm(uint8_t port, const pd_packet_t* rec_vdm)
1006:src\app\alt_mode/vdm_task_mngr.c **** {
1007:src\app\alt_mode/vdm_task_mngr.c ****     uint8_t vdo_idx;
1008:src\app\alt_mode/vdm_task_mngr.c ****     vdm_msg_info_t *msg_p  = get_msg (port);
1009:src\app\alt_mode/vdm_task_mngr.c **** 
1010:src\app\alt_mode/vdm_task_mngr.c ****     msg_p->vdm_header = rec_vdm->dat[VDM_HEADER_IDX];
1011:src\app\alt_mode/vdm_task_mngr.c ****     msg_p->vdo_numb   = (rec_vdm->len - VDO_START_IDX);
1012:src\app\alt_mode/vdm_task_mngr.c ****     msg_p->sop_type   = rec_vdm->sop;
1013:src\app\alt_mode/vdm_task_mngr.c **** 
1014:src\app\alt_mode/vdm_task_mngr.c ****     /* If VDO is present in received VDM */
1015:src\app\alt_mode/vdm_task_mngr.c ****     if (rec_vdm->len > VDO_START_IDX)
1016:src\app\alt_mode/vdm_task_mngr.c ****     {
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 46


1017:src\app\alt_mode/vdm_task_mngr.c ****         for (vdo_idx = 0; vdo_idx < rec_vdm->len; vdo_idx++)
1018:src\app\alt_mode/vdm_task_mngr.c ****         {
1019:src\app\alt_mode/vdm_task_mngr.c ****             msg_p->vdo[vdo_idx].val = rec_vdm->dat[vdo_idx + VDO_START_IDX].val;
1020:src\app\alt_mode/vdm_task_mngr.c ****         }
1021:src\app\alt_mode/vdm_task_mngr.c ****     }
1022:src\app\alt_mode/vdm_task_mngr.c **** 
1023:src\app\alt_mode/vdm_task_mngr.c ****     return true;
1024:src\app\alt_mode/vdm_task_mngr.c **** }
1025:src\app\alt_mode/vdm_task_mngr.c **** 
1026:src\app\alt_mode/vdm_task_mngr.c **** static vdm_task_t send_vdm(uint8_t port)
1027:src\app\alt_mode/vdm_task_mngr.c **** {
1028:src\app\alt_mode/vdm_task_mngr.c ****     if ((gl_dpm_port_type[port] == PRT_TYPE_DFP) && (get_vdm_buff(port)->cmd_sop == SOP_DPRIME))
1029:src\app\alt_mode/vdm_task_mngr.c ****     {
1030:src\app\alt_mode/vdm_task_mngr.c ****         switch (vdm_emca_rst_state[port])
1031:src\app\alt_mode/vdm_task_mngr.c ****         {
1032:src\app\alt_mode/vdm_task_mngr.c ****             /* If SOP'' SOFT RESET has not been done or a retry is pending, try to send it. */
1033:src\app\alt_mode/vdm_task_mngr.c ****             case CABLE_DP_RESET_IDLE:
1034:src\app\alt_mode/vdm_task_mngr.c ****             case CABLE_DP_RESET_RETRY:
1035:src\app\alt_mode/vdm_task_mngr.c ****                 send_sop_dp_soft_reset(port);
1036:src\app\alt_mode/vdm_task_mngr.c ****                 /* Intentional fall-through. */
1037:src\app\alt_mode/vdm_task_mngr.c **** 
1038:src\app\alt_mode/vdm_task_mngr.c ****             case CABLE_DP_RESET_WAIT:
1039:src\app\alt_mode/vdm_task_mngr.c ****                 return VDM_TASK_SEND_MSG;
1040:src\app\alt_mode/vdm_task_mngr.c **** 
1041:src\app\alt_mode/vdm_task_mngr.c ****             default:
1042:src\app\alt_mode/vdm_task_mngr.c ****                 /* EMCA SOFT_RESET done. We can proceed. */
1043:src\app\alt_mode/vdm_task_mngr.c ****                 break;
1044:src\app\alt_mode/vdm_task_mngr.c ****         }
1045:src\app\alt_mode/vdm_task_mngr.c ****     }
1046:src\app\alt_mode/vdm_task_mngr.c **** 
1047:src\app\alt_mode/vdm_task_mngr.c ****     app_get_status(port)->vdm_retry_pending = (vdm_stat[port].rec_retry_cnt != MAX_RETRY_CNT);
1048:src\app\alt_mode/vdm_task_mngr.c ****     if (dpm_pd_command (port, DPM_CMD_SEND_VDM, get_vdm_buff(port), vdm_rec_cbk) == CCG_STAT_SUCCES
1049:src\app\alt_mode/vdm_task_mngr.c ****     {
1050:src\app\alt_mode/vdm_task_mngr.c ****         return VDM_TASK_WAIT;
1051:src\app\alt_mode/vdm_task_mngr.c ****     }
1052:src\app\alt_mode/vdm_task_mngr.c **** 
1053:src\app\alt_mode/vdm_task_mngr.c ****     /* If fails - try to send VDM again */
1054:src\app\alt_mode/vdm_task_mngr.c ****     return VDM_TASK_SEND_MSG;
1055:src\app\alt_mode/vdm_task_mngr.c **** }
1056:src\app\alt_mode/vdm_task_mngr.c **** 
1057:src\app\alt_mode/vdm_task_mngr.c **** #if ((CCG_PD_REV3_ENABLE) && (UFP_ALT_MODE_SUPP) && (UFP_MODE_DISC_ENABLE))
1058:src\app\alt_mode/vdm_task_mngr.c **** bool is_ufp_disc_started(uint8_t port)
1059:src\app\alt_mode/vdm_task_mngr.c **** {
1060:src\app\alt_mode/vdm_task_mngr.c ****     if (is_vdm_task_idle(port) == true)
1061:src\app\alt_mode/vdm_task_mngr.c ****     {
1062:src\app\alt_mode/vdm_task_mngr.c ****         /* Set VDM Task to send DISC ID VDM */
1063:src\app\alt_mode/vdm_task_mngr.c ****         set_task(port, VDM_TASK_DISC_ID);
1064:src\app\alt_mode/vdm_task_mngr.c ****         set_evt(port, VDM_EVT_RUN);
1065:src\app\alt_mode/vdm_task_mngr.c ****         return true;
1066:src\app\alt_mode/vdm_task_mngr.c ****     }
1067:src\app\alt_mode/vdm_task_mngr.c **** 
1068:src\app\alt_mode/vdm_task_mngr.c ****     return false;
1069:src\app\alt_mode/vdm_task_mngr.c **** }
1070:src\app\alt_mode/vdm_task_mngr.c **** #endif /* (CCG_PD_REV3_ENABLE) && (UFP_ALT_MODE_SUPP) && (UFP_MODE_DISC_ENABLE) */
1071:src\app\alt_mode/vdm_task_mngr.c **** 
1072:src\app\alt_mode/vdm_task_mngr.c **** bool is_vdm_mngr_enabled(uint8_t port)
1073:src\app\alt_mode/vdm_task_mngr.c **** {
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 47


1074:src\app\alt_mode/vdm_task_mngr.c ****     return (bool)app_get_status(port)->vdm_task_en;
1075:src\app\alt_mode/vdm_task_mngr.c **** }
1076:src\app\alt_mode/vdm_task_mngr.c **** 
1077:src\app\alt_mode/vdm_task_mngr.c **** vdm_evt_t get_evt(uint8_t port)
1078:src\app\alt_mode/vdm_task_mngr.c **** {
1079:src\app\alt_mode/vdm_task_mngr.c ****     return vdm_stat[port].vdm_evt;
1080:src\app\alt_mode/vdm_task_mngr.c **** }
1081:src\app\alt_mode/vdm_task_mngr.c **** 
1082:src\app\alt_mode/vdm_task_mngr.c **** vdm_task_t get_task(uint8_t port)
1083:src\app\alt_mode/vdm_task_mngr.c **** {
1084:src\app\alt_mode/vdm_task_mngr.c ****     return vdm_stat[port].vdm_task;
1085:src\app\alt_mode/vdm_task_mngr.c **** }
1086:src\app\alt_mode/vdm_task_mngr.c **** 
1087:src\app\alt_mode/vdm_task_mngr.c **** void set_task(uint8_t port, vdm_task_t task)
1088:src\app\alt_mode/vdm_task_mngr.c **** {
1089:src\app\alt_mode/vdm_task_mngr.c ****     vdm_stat[port].vdm_task = task;
1090:src\app\alt_mode/vdm_task_mngr.c **** }
1091:src\app\alt_mode/vdm_task_mngr.c **** 
1092:src\app\alt_mode/vdm_task_mngr.c **** void set_evt(uint8_t port, vdm_evt_t evt)
1093:src\app\alt_mode/vdm_task_mngr.c **** {
1094:src\app\alt_mode/vdm_task_mngr.c ****     vdm_stat[port].vdm_evt = evt;
1095:src\app\alt_mode/vdm_task_mngr.c **** }
1096:src\app\alt_mode/vdm_task_mngr.c **** 
1097:src\app\alt_mode/vdm_task_mngr.c **** static vdm_msg_info_t* get_msg(uint8_t port)
1098:src\app\alt_mode/vdm_task_mngr.c **** {
1099:src\app\alt_mode/vdm_task_mngr.c ****     return &vdm_stat[port].vdm_msg;
1100:src\app\alt_mode/vdm_task_mngr.c **** }
1101:src\app\alt_mode/vdm_task_mngr.c **** #endif /* (DFP_ALT_MODE_SUPP) || (UFP_ALT_MODE_SUPP) */
1102:src\app\alt_mode/vdm_task_mngr.c **** 
1103:src\app\alt_mode/vdm_task_mngr.c **** uint8_t *vdm_get_disc_id_resp(uint8_t port, uint8_t *resp_len_p)
1104:src\app\alt_mode/vdm_task_mngr.c **** {
1105:src\app\alt_mode/vdm_task_mngr.c ****     uint8_t *ptr = NULL;
1106:src\app\alt_mode/vdm_task_mngr.c **** 
1107:src\app\alt_mode/vdm_task_mngr.c ****     /* Check for bad pointer argument. */
1108:src\app\alt_mode/vdm_task_mngr.c ****     if (resp_len_p == NULL)
1109:src\app\alt_mode/vdm_task_mngr.c ****         return NULL;
1110:src\app\alt_mode/vdm_task_mngr.c **** 
1111:src\app\alt_mode/vdm_task_mngr.c ****     /* Set response length to zero by default. */
1112:src\app\alt_mode/vdm_task_mngr.c ****     *resp_len_p = 0;
1113:src\app\alt_mode/vdm_task_mngr.c **** 
1114:src\app\alt_mode/vdm_task_mngr.c **** #if ((DFP_ALT_MODE_SUPP) && (VDM_RESP_QUERY_SUPPORTED))
1115:src\app\alt_mode/vdm_task_mngr.c ****     if ((port < NO_OF_TYPEC_PORTS) && (gl_dpm_port_type[port] == PRT_TYPE_DFP))
1116:src\app\alt_mode/vdm_task_mngr.c ****     {
1117:src\app\alt_mode/vdm_task_mngr.c ****         *resp_len_p = vdm_disc_id_resp_len[port];
1118:src\app\alt_mode/vdm_task_mngr.c ****         ptr         = (uint8_t *)vdm_disc_id_resp[port];
1119:src\app\alt_mode/vdm_task_mngr.c ****     }
1120:src\app\alt_mode/vdm_task_mngr.c **** #endif /* ((DFP_ALT_MODE_SUPP) && (VDM_RESP_QUERY_SUPPORTED)) */
1121:src\app\alt_mode/vdm_task_mngr.c **** 
1122:src\app\alt_mode/vdm_task_mngr.c ****     return (ptr);
1123:src\app\alt_mode/vdm_task_mngr.c **** }
1124:src\app\alt_mode/vdm_task_mngr.c **** 
1125:src\app\alt_mode/vdm_task_mngr.c **** uint8_t *vdm_get_disc_svid_resp(uint8_t port, uint8_t *resp_len_p)
1126:src\app\alt_mode/vdm_task_mngr.c **** {
 419              		.loc 1 1126 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 48


 423              		@ link register save eliminated.
 424              	.LVL0:
1127:src\app\alt_mode/vdm_task_mngr.c ****     uint8_t *ptr = NULL;
1128:src\app\alt_mode/vdm_task_mngr.c **** 
1129:src\app\alt_mode/vdm_task_mngr.c ****     /* Check for bad pointer argument. */
1130:src\app\alt_mode/vdm_task_mngr.c ****     if (resp_len_p == NULL)
 425              		.loc 1 1130 0
 426 0000 0029     		cmp	r1, #0
 427 0002 01D0     		beq	.L8
1131:src\app\alt_mode/vdm_task_mngr.c ****         return NULL;
1132:src\app\alt_mode/vdm_task_mngr.c **** 
1133:src\app\alt_mode/vdm_task_mngr.c ****     /* Set response length to zero by default. */
1134:src\app\alt_mode/vdm_task_mngr.c ****     *resp_len_p = 0;
 428              		.loc 1 1134 0
 429 0004 0023     		movs	r3, #0
 430 0006 0B70     		strb	r3, [r1]
 431              	.L8:
1135:src\app\alt_mode/vdm_task_mngr.c **** 
1136:src\app\alt_mode/vdm_task_mngr.c **** #if ((DFP_ALT_MODE_SUPP) && (VDM_RESP_QUERY_SUPPORTED))
1137:src\app\alt_mode/vdm_task_mngr.c ****     if ((port < NO_OF_TYPEC_PORTS) && (gl_dpm_port_type[port] == PRT_TYPE_DFP))
1138:src\app\alt_mode/vdm_task_mngr.c ****     {
1139:src\app\alt_mode/vdm_task_mngr.c ****         *resp_len_p = vdm_disc_svid_resp_len[port];
1140:src\app\alt_mode/vdm_task_mngr.c ****         ptr         = (uint8_t *)vdm_disc_svid_resp[port];
1141:src\app\alt_mode/vdm_task_mngr.c ****     }
1142:src\app\alt_mode/vdm_task_mngr.c **** #endif /* ((DFP_ALT_MODE_SUPP) && (VDM_RESP_QUERY_SUPPORTED)) */
1143:src\app\alt_mode/vdm_task_mngr.c **** 
1144:src\app\alt_mode/vdm_task_mngr.c ****     return (ptr);
1145:src\app\alt_mode/vdm_task_mngr.c **** }
 432              		.loc 1 1145 0
 433 0008 0020     		movs	r0, #0
 434              	.LVL1:
 435              		@ sp needed
 436 000a 7047     		bx	lr
 437              		.cfi_endproc
 438              	.LFE33:
 439              		.size	vdm_get_disc_svid_resp, .-vdm_get_disc_svid_resp
 440              		.comm	gTimerVar,1,1
 441              		.comm	isAttachInterrupt,1,1
 442              		.comm	g_Struct_Ptr,4,4
 443              		.comm	gStruct_t,104,4
 444              		.comm	i2cBuf,12,1
 445              		.text
 446              	.Letext0:
 447              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 448              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 449              		.file 4 "./grl_struct.h"
 450              		.file 5 ".\\src\\app/app.h"
 451              		.section	.debug_info,"",%progbits
 452              	.Ldebug_info0:
 453 0000 C7040000 		.4byte	0x4c7
 454 0004 0400     		.2byte	0x4
 455 0006 00000000 		.4byte	.Ldebug_abbrev0
 456 000a 04       		.byte	0x4
 457 000b 01       		.uleb128 0x1
 458 000c 81020000 		.4byte	.LASF73
 459 0010 0C       		.byte	0xc
 460 0011 7B040000 		.4byte	.LASF74
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 49


 461 0015 97030000 		.4byte	.LASF75
 462 0019 00000000 		.4byte	.Ldebug_ranges0+0
 463 001d 00000000 		.4byte	0
 464 0021 00000000 		.4byte	.Ldebug_line0
 465 0025 02       		.uleb128 0x2
 466 0026 01       		.byte	0x1
 467 0027 06       		.byte	0x6
 468 0028 BA010000 		.4byte	.LASF0
 469 002c 03       		.uleb128 0x3
 470 002d 51010000 		.4byte	.LASF3
 471 0031 02       		.byte	0x2
 472 0032 1D       		.byte	0x1d
 473 0033 37000000 		.4byte	0x37
 474 0037 02       		.uleb128 0x2
 475 0038 01       		.byte	0x1
 476 0039 08       		.byte	0x8
 477 003a 89010000 		.4byte	.LASF1
 478 003e 02       		.uleb128 0x2
 479 003f 02       		.byte	0x2
 480 0040 05       		.byte	0x5
 481 0041 48000000 		.4byte	.LASF2
 482 0045 03       		.uleb128 0x3
 483 0046 77000000 		.4byte	.LASF4
 484 004a 02       		.byte	0x2
 485 004b 2B       		.byte	0x2b
 486 004c 50000000 		.4byte	0x50
 487 0050 02       		.uleb128 0x2
 488 0051 02       		.byte	0x2
 489 0052 07       		.byte	0x7
 490 0053 2D020000 		.4byte	.LASF5
 491 0057 02       		.uleb128 0x2
 492 0058 04       		.byte	0x4
 493 0059 05       		.byte	0x5
 494 005a 28010000 		.4byte	.LASF6
 495 005e 03       		.uleb128 0x3
 496 005f 6C000000 		.4byte	.LASF7
 497 0063 02       		.byte	0x2
 498 0064 41       		.byte	0x41
 499 0065 69000000 		.4byte	0x69
 500 0069 02       		.uleb128 0x2
 501 006a 04       		.byte	0x4
 502 006b 07       		.byte	0x7
 503 006c FC010000 		.4byte	.LASF8
 504 0070 02       		.uleb128 0x2
 505 0071 08       		.byte	0x8
 506 0072 05       		.byte	0x5
 507 0073 6D040000 		.4byte	.LASF9
 508 0077 02       		.uleb128 0x2
 509 0078 08       		.byte	0x8
 510 0079 07       		.byte	0x7
 511 007a C6010000 		.4byte	.LASF10
 512 007e 04       		.uleb128 0x4
 513 007f 04       		.byte	0x4
 514 0080 05       		.byte	0x5
 515 0081 696E7400 		.ascii	"int\000"
 516 0085 02       		.uleb128 0x2
 517 0086 04       		.byte	0x4
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 50


 518 0087 07       		.byte	0x7
 519 0088 E6010000 		.4byte	.LASF11
 520 008c 03       		.uleb128 0x3
 521 008d 96000000 		.4byte	.LASF12
 522 0091 03       		.byte	0x3
 523 0092 18       		.byte	0x18
 524 0093 2C000000 		.4byte	0x2c
 525 0097 03       		.uleb128 0x3
 526 0098 F3010000 		.4byte	.LASF13
 527 009c 03       		.byte	0x3
 528 009d 24       		.byte	0x24
 529 009e 45000000 		.4byte	0x45
 530 00a2 03       		.uleb128 0x3
 531 00a3 DD010000 		.4byte	.LASF14
 532 00a7 03       		.byte	0x3
 533 00a8 30       		.byte	0x30
 534 00a9 5E000000 		.4byte	0x5e
 535 00ad 02       		.uleb128 0x2
 536 00ae 04       		.byte	0x4
 537 00af 04       		.byte	0x4
 538 00b0 D8000000 		.4byte	.LASF15
 539 00b4 02       		.uleb128 0x2
 540 00b5 08       		.byte	0x8
 541 00b6 04       		.byte	0x4
 542 00b7 71030000 		.4byte	.LASF16
 543 00bb 02       		.uleb128 0x2
 544 00bc 01       		.byte	0x1
 545 00bd 08       		.byte	0x8
 546 00be 40020000 		.4byte	.LASF17
 547 00c2 02       		.uleb128 0x2
 548 00c3 08       		.byte	0x8
 549 00c4 04       		.byte	0x4
 550 00c5 6C010000 		.4byte	.LASF18
 551 00c9 02       		.uleb128 0x2
 552 00ca 04       		.byte	0x4
 553 00cb 07       		.byte	0x7
 554 00cc 63000000 		.4byte	.LASF19
 555 00d0 05       		.uleb128 0x5
 556 00d1 8C000000 		.4byte	0x8c
 557 00d5 E0000000 		.4byte	0xe0
 558 00d9 06       		.uleb128 0x6
 559 00da C9000000 		.4byte	0xc9
 560 00de 03       		.byte	0x3
 561 00df 00       		.byte	0
 562 00e0 07       		.uleb128 0x7
 563 00e1 04       		.byte	0x4
 564 00e2 8C000000 		.4byte	0x8c
 565 00e6 02       		.uleb128 0x2
 566 00e7 01       		.byte	0x1
 567 00e8 02       		.byte	0x2
 568 00e9 53020000 		.4byte	.LASF20
 569 00ed 08       		.uleb128 0x8
 570 00ee 0C       		.byte	0xc
 571 00ef 04       		.byte	0x4
 572 00f0 5F       		.byte	0x5f
 573 00f1 0E010000 		.4byte	0x10e
 574 00f5 09       		.uleb128 0x9
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 51


 575 00f6 52000000 		.4byte	.LASF21
 576 00fa 04       		.byte	0x4
 577 00fb 61       		.byte	0x61
 578 00fc D0000000 		.4byte	0xd0
 579 0100 00       		.byte	0
 580 0101 09       		.uleb128 0x9
 581 0102 A3010000 		.4byte	.LASF22
 582 0106 04       		.byte	0x4
 583 0107 62       		.byte	0x62
 584 0108 0E010000 		.4byte	0x10e
 585 010c 04       		.byte	0x4
 586 010d 00       		.byte	0
 587 010e 05       		.uleb128 0x5
 588 010f 8C000000 		.4byte	0x8c
 589 0113 1E010000 		.4byte	0x11e
 590 0117 06       		.uleb128 0x6
 591 0118 C9000000 		.4byte	0xc9
 592 011c 07       		.byte	0x7
 593 011d 00       		.byte	0
 594 011e 03       		.uleb128 0x3
 595 011f 4B040000 		.4byte	.LASF23
 596 0123 04       		.byte	0x4
 597 0124 64       		.byte	0x64
 598 0125 ED000000 		.4byte	0xed
 599 0129 08       		.uleb128 0x8
 600 012a 14       		.byte	0x14
 601 012b 04       		.byte	0x4
 602 012c 66       		.byte	0x66
 603 012d B6010000 		.4byte	0x1b6
 604 0131 09       		.uleb128 0x9
 605 0132 1B010000 		.4byte	.LASF24
 606 0136 04       		.byte	0x4
 607 0137 68       		.byte	0x68
 608 0138 A2000000 		.4byte	0xa2
 609 013c 00       		.byte	0
 610 013d 09       		.uleb128 0x9
 611 013e 27000000 		.4byte	.LASF25
 612 0142 04       		.byte	0x4
 613 0143 69       		.byte	0x69
 614 0144 A2000000 		.4byte	0xa2
 615 0148 04       		.byte	0x4
 616 0149 09       		.uleb128 0x9
 617 014a 00000000 		.4byte	.LASF26
 618 014e 04       		.byte	0x4
 619 014f 6A       		.byte	0x6a
 620 0150 8C000000 		.4byte	0x8c
 621 0154 08       		.byte	0x8
 622 0155 09       		.uleb128 0x9
 623 0156 1D000000 		.4byte	.LASF27
 624 015a 04       		.byte	0x4
 625 015b 6B       		.byte	0x6b
 626 015c 8C000000 		.4byte	0x8c
 627 0160 09       		.byte	0x9
 628 0161 09       		.uleb128 0x9
 629 0162 0E020000 		.4byte	.LASF28
 630 0166 04       		.byte	0x4
 631 0167 6C       		.byte	0x6c
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 52


 632 0168 8C000000 		.4byte	0x8c
 633 016c 0A       		.byte	0xa
 634 016d 09       		.uleb128 0x9
 635 016e 39010000 		.4byte	.LASF29
 636 0172 04       		.byte	0x4
 637 0173 6D       		.byte	0x6d
 638 0174 E6000000 		.4byte	0xe6
 639 0178 0B       		.byte	0xb
 640 0179 09       		.uleb128 0x9
 641 017a F4000000 		.4byte	.LASF30
 642 017e 04       		.byte	0x4
 643 017f 6E       		.byte	0x6e
 644 0180 E6000000 		.4byte	0xe6
 645 0184 0C       		.byte	0xc
 646 0185 09       		.uleb128 0x9
 647 0186 DE000000 		.4byte	.LASF31
 648 018a 04       		.byte	0x4
 649 018b 6F       		.byte	0x6f
 650 018c E6000000 		.4byte	0xe6
 651 0190 0D       		.byte	0xd
 652 0191 09       		.uleb128 0x9
 653 0192 10010000 		.4byte	.LASF32
 654 0196 04       		.byte	0x4
 655 0197 70       		.byte	0x70
 656 0198 8C000000 		.4byte	0x8c
 657 019c 0E       		.byte	0xe
 658 019d 09       		.uleb128 0x9
 659 019e F2030000 		.4byte	.LASF33
 660 01a2 04       		.byte	0x4
 661 01a3 71       		.byte	0x71
 662 01a4 8C000000 		.4byte	0x8c
 663 01a8 0F       		.byte	0xf
 664 01a9 09       		.uleb128 0x9
 665 01aa 82000000 		.4byte	.LASF34
 666 01ae 04       		.byte	0x4
 667 01af 72       		.byte	0x72
 668 01b0 8C000000 		.4byte	0x8c
 669 01b4 10       		.byte	0x10
 670 01b5 00       		.byte	0
 671 01b6 03       		.uleb128 0x3
 672 01b7 00040000 		.4byte	.LASF35
 673 01bb 04       		.byte	0x4
 674 01bc 73       		.byte	0x73
 675 01bd 29010000 		.4byte	0x129
 676 01c1 0A       		.uleb128 0xa
 677 01c2 78020000 		.4byte	.LASF39
 678 01c6 04       		.byte	0x4
 679 01c7 04       		.byte	0x4
 680 01c8 A5       		.byte	0xa5
 681 01c9 FB010000 		.4byte	0x1fb
 682 01cd 0B       		.uleb128 0xb
 683 01ce 21020000 		.4byte	.LASF36
 684 01d2 04       		.byte	0x4
 685 01d3 A7       		.byte	0xa7
 686 01d4 A2000000 		.4byte	0xa2
 687 01d8 04       		.byte	0x4
 688 01d9 0A       		.byte	0xa
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 53


 689 01da 16       		.byte	0x16
 690 01db 00       		.byte	0
 691 01dc 0B       		.uleb128 0xb
 692 01dd 31010000 		.4byte	.LASF37
 693 01e1 04       		.byte	0x4
 694 01e2 A8       		.byte	0xa8
 695 01e3 A2000000 		.4byte	0xa2
 696 01e7 04       		.byte	0x4
 697 01e8 0A       		.byte	0xa
 698 01e9 0C       		.byte	0xc
 699 01ea 00       		.byte	0
 700 01eb 0B       		.uleb128 0xb
 701 01ec 97010000 		.4byte	.LASF38
 702 01f0 04       		.byte	0x4
 703 01f1 A9       		.byte	0xa9
 704 01f2 A2000000 		.4byte	0xa2
 705 01f6 04       		.byte	0x4
 706 01f7 02       		.byte	0x2
 707 01f8 0A       		.byte	0xa
 708 01f9 00       		.byte	0
 709 01fa 00       		.byte	0
 710 01fb 0A       		.uleb128 0xa
 711 01fc ED000000 		.4byte	.LASF40
 712 0200 04       		.byte	0x4
 713 0201 04       		.byte	0x4
 714 0202 AC       		.byte	0xac
 715 0203 44020000 		.4byte	0x244
 716 0207 0B       		.uleb128 0xb
 717 0208 21020000 		.4byte	.LASF36
 718 020c 04       		.byte	0x4
 719 020d AE       		.byte	0xae
 720 020e A2000000 		.4byte	0xa2
 721 0212 04       		.byte	0x4
 722 0213 0A       		.byte	0xa
 723 0214 16       		.byte	0x16
 724 0215 00       		.byte	0
 725 0216 0B       		.uleb128 0xb
 726 0217 42030000 		.4byte	.LASF41
 727 021b 04       		.byte	0x4
 728 021c AF       		.byte	0xaf
 729 021d A2000000 		.4byte	0xa2
 730 0221 04       		.byte	0x4
 731 0222 0A       		.byte	0xa
 732 0223 0C       		.byte	0xc
 733 0224 00       		.byte	0
 734 0225 0B       		.uleb128 0xb
 735 0226 45010000 		.4byte	.LASF42
 736 022a 04       		.byte	0x4
 737 022b B0       		.byte	0xb0
 738 022c A2000000 		.4byte	0xa2
 739 0230 04       		.byte	0x4
 740 0231 0A       		.byte	0xa
 741 0232 02       		.byte	0x2
 742 0233 00       		.byte	0
 743 0234 0B       		.uleb128 0xb
 744 0235 97010000 		.4byte	.LASF38
 745 0239 04       		.byte	0x4
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 54


 746 023a B1       		.byte	0xb1
 747 023b A2000000 		.4byte	0xa2
 748 023f 04       		.byte	0x4
 749 0240 02       		.byte	0x2
 750 0241 00       		.byte	0
 751 0242 00       		.byte	0
 752 0243 00       		.byte	0
 753 0244 0A       		.uleb128 0xa
 754 0245 82010000 		.4byte	.LASF43
 755 0249 04       		.byte	0x4
 756 024a 04       		.byte	0x4
 757 024b B3       		.byte	0xb3
 758 024c 8D020000 		.4byte	0x28d
 759 0250 0B       		.uleb128 0xb
 760 0251 B0010000 		.4byte	.LASF44
 761 0255 04       		.byte	0x4
 762 0256 B5       		.byte	0xb5
 763 0257 A2000000 		.4byte	0xa2
 764 025b 04       		.byte	0x4
 765 025c 0A       		.byte	0xa
 766 025d 16       		.byte	0x16
 767 025e 00       		.byte	0
 768 025f 0B       		.uleb128 0xb
 769 0260 42030000 		.4byte	.LASF41
 770 0264 04       		.byte	0x4
 771 0265 B6       		.byte	0xb6
 772 0266 A2000000 		.4byte	0xa2
 773 026a 04       		.byte	0x4
 774 026b 0A       		.byte	0xa
 775 026c 0C       		.byte	0xc
 776 026d 00       		.byte	0
 777 026e 0B       		.uleb128 0xb
 778 026f 45010000 		.4byte	.LASF42
 779 0273 04       		.byte	0x4
 780 0274 B7       		.byte	0xb7
 781 0275 A2000000 		.4byte	0xa2
 782 0279 04       		.byte	0x4
 783 027a 0A       		.byte	0xa
 784 027b 02       		.byte	0x2
 785 027c 00       		.byte	0
 786 027d 0B       		.uleb128 0xb
 787 027e 97010000 		.4byte	.LASF38
 788 0282 04       		.byte	0x4
 789 0283 B8       		.byte	0xb8
 790 0284 A2000000 		.4byte	0xa2
 791 0288 04       		.byte	0x4
 792 0289 02       		.byte	0x2
 793 028a 00       		.byte	0
 794 028b 00       		.byte	0
 795 028c 00       		.byte	0
 796 028d 0A       		.uleb128 0xa
 797 028e 16040000 		.4byte	.LASF45
 798 0292 04       		.byte	0x4
 799 0293 04       		.byte	0x4
 800 0294 BA       		.byte	0xba
 801 0295 D6020000 		.4byte	0x2d6
 802 0299 0B       		.uleb128 0xb
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 55


 803 029a 5B010000 		.4byte	.LASF46
 804 029e 04       		.byte	0x4
 805 029f BC       		.byte	0xbc
 806 02a0 A2000000 		.4byte	0xa2
 807 02a4 04       		.byte	0x4
 808 02a5 07       		.byte	0x7
 809 02a6 19       		.byte	0x19
 810 02a7 00       		.byte	0
 811 02a8 0B       		.uleb128 0xb
 812 02a9 59020000 		.4byte	.LASF47
 813 02ad 04       		.byte	0x4
 814 02ae BD       		.byte	0xbd
 815 02af A2000000 		.4byte	0xa2
 816 02b3 04       		.byte	0x4
 817 02b4 08       		.byte	0x8
 818 02b5 11       		.byte	0x11
 819 02b6 00       		.byte	0
 820 02b7 0B       		.uleb128 0xb
 821 02b8 C8000000 		.4byte	.LASF48
 822 02bc 04       		.byte	0x4
 823 02bd BE       		.byte	0xbe
 824 02be A2000000 		.4byte	0xa2
 825 02c2 04       		.byte	0x4
 826 02c3 08       		.byte	0x8
 827 02c4 09       		.byte	0x9
 828 02c5 00       		.byte	0
 829 02c6 0B       		.uleb128 0xb
 830 02c7 97010000 		.4byte	.LASF38
 831 02cb 04       		.byte	0x4
 832 02cc BF       		.byte	0xbf
 833 02cd A2000000 		.4byte	0xa2
 834 02d1 04       		.byte	0x4
 835 02d2 02       		.byte	0x2
 836 02d3 07       		.byte	0x7
 837 02d4 00       		.byte	0
 838 02d5 00       		.byte	0
 839 02d6 0C       		.uleb128 0xc
 840 02d7 04       		.byte	0x4
 841 02d8 04       		.byte	0x4
 842 02d9 A2       		.byte	0xa2
 843 02da 16030000 		.4byte	0x316
 844 02de 0D       		.uleb128 0xd
 845 02df 76616C00 		.ascii	"val\000"
 846 02e3 04       		.byte	0x4
 847 02e4 A4       		.byte	0xa4
 848 02e5 A2000000 		.4byte	0xa2
 849 02e9 0E       		.uleb128 0xe
 850 02ea 78030000 		.4byte	.LASF49
 851 02ee 04       		.byte	0x4
 852 02ef AA       		.byte	0xaa
 853 02f0 C1010000 		.4byte	0x1c1
 854 02f4 0E       		.uleb128 0xe
 855 02f5 8E000000 		.4byte	.LASF50
 856 02f9 04       		.byte	0x4
 857 02fa B2       		.byte	0xb2
 858 02fb FB010000 		.4byte	0x1fb
 859 02ff 0E       		.uleb128 0xe
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 56


 860 0300 08010000 		.4byte	.LASF51
 861 0304 04       		.byte	0x4
 862 0305 B9       		.byte	0xb9
 863 0306 44020000 		.4byte	0x244
 864 030a 0E       		.uleb128 0xe
 865 030b 82030000 		.4byte	.LASF52
 866 030f 04       		.byte	0x4
 867 0310 C1       		.byte	0xc1
 868 0311 8D020000 		.4byte	0x28d
 869 0315 00       		.byte	0
 870 0316 03       		.uleb128 0x3
 871 0317 1D040000 		.4byte	.LASF53
 872 031b 04       		.byte	0x4
 873 031c C3       		.byte	0xc3
 874 031d D6020000 		.4byte	0x2d6
 875 0321 08       		.uleb128 0x8
 876 0322 20       		.byte	0x20
 877 0323 04       		.byte	0x4
 878 0324 C5       		.byte	0xc5
 879 0325 42030000 		.4byte	0x342
 880 0329 09       		.uleb128 0x9
 881 032a 78010000 		.4byte	.LASF54
 882 032e 04       		.byte	0x4
 883 032f C7       		.byte	0xc7
 884 0330 8C000000 		.4byte	0x8c
 885 0334 00       		.byte	0
 886 0335 0F       		.uleb128 0xf
 887 0336 50444F00 		.ascii	"PDO\000"
 888 033a 04       		.byte	0x4
 889 033b C8       		.byte	0xc8
 890 033c 42030000 		.4byte	0x342
 891 0340 04       		.byte	0x4
 892 0341 00       		.byte	0
 893 0342 05       		.uleb128 0x5
 894 0343 16030000 		.4byte	0x316
 895 0347 52030000 		.4byte	0x352
 896 034b 06       		.uleb128 0x6
 897 034c C9000000 		.4byte	0xc9
 898 0350 06       		.byte	0x6
 899 0351 00       		.byte	0
 900 0352 03       		.uleb128 0x3
 901 0353 DC030000 		.4byte	.LASF55
 902 0357 04       		.byte	0x4
 903 0358 CA       		.byte	0xca
 904 0359 21030000 		.4byte	0x321
 905 035d 08       		.uleb128 0x8
 906 035e 06       		.byte	0x6
 907 035f 04       		.byte	0x4
 908 0360 D2       		.byte	0xd2
 909 0361 A2030000 		.4byte	0x3a2
 910 0365 09       		.uleb128 0x9
 911 0366 5F040000 		.4byte	.LASF56
 912 036a 04       		.byte	0x4
 913 036b D4       		.byte	0xd4
 914 036c 97000000 		.4byte	0x97
 915 0370 00       		.byte	0
 916 0371 09       		.uleb128 0x9
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 57


 917 0372 62020000 		.4byte	.LASF57
 918 0376 04       		.byte	0x4
 919 0377 D5       		.byte	0xd5
 920 0378 E6000000 		.4byte	0xe6
 921 037c 02       		.byte	0x2
 922 037d 09       		.uleb128 0x9
 923 037e 0B000000 		.4byte	.LASF58
 924 0382 04       		.byte	0x4
 925 0383 D6       		.byte	0xd6
 926 0384 E6000000 		.4byte	0xe6
 927 0388 03       		.byte	0x3
 928 0389 09       		.uleb128 0x9
 929 038a F2030000 		.4byte	.LASF33
 930 038e 04       		.byte	0x4
 931 038f D7       		.byte	0xd7
 932 0390 8C000000 		.4byte	0x8c
 933 0394 04       		.byte	0x4
 934 0395 09       		.uleb128 0x9
 935 0396 45020000 		.4byte	.LASF59
 936 039a 04       		.byte	0x4
 937 039b D8       		.byte	0xd8
 938 039c E6000000 		.4byte	0xe6
 939 03a0 05       		.byte	0x5
 940 03a1 00       		.byte	0
 941 03a2 03       		.uleb128 0x3
 942 03a3 4E030000 		.4byte	.LASF60
 943 03a7 04       		.byte	0x4
 944 03a8 D9       		.byte	0xd9
 945 03a9 5D030000 		.4byte	0x35d
 946 03ad 08       		.uleb128 0x8
 947 03ae 68       		.byte	0x68
 948 03af 04       		.byte	0x4
 949 03b0 DB       		.byte	0xdb
 950 03b1 F2030000 		.4byte	0x3f2
 951 03b5 09       		.uleb128 0x9
 952 03b6 9C040000 		.4byte	.LASF61
 953 03ba 04       		.byte	0x4
 954 03bb DD       		.byte	0xdd
 955 03bc B6010000 		.4byte	0x1b6
 956 03c0 00       		.byte	0
 957 03c1 09       		.uleb128 0x9
 958 03c2 60030000 		.4byte	.LASF62
 959 03c6 04       		.byte	0x4
 960 03c7 E2       		.byte	0xe2
 961 03c8 52030000 		.4byte	0x352
 962 03cc 14       		.byte	0x14
 963 03cd 09       		.uleb128 0x9
 964 03ce 9E000000 		.4byte	.LASF63
 965 03d2 04       		.byte	0x4
 966 03d3 E3       		.byte	0xe3
 967 03d4 52030000 		.4byte	0x352
 968 03d8 34       		.byte	0x34
 969 03d9 09       		.uleb128 0x9
 970 03da 63010000 		.4byte	.LASF64
 971 03de 04       		.byte	0x4
 972 03df E4       		.byte	0xe4
 973 03e0 A2030000 		.4byte	0x3a2
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 58


 974 03e4 54       		.byte	0x54
 975 03e5 09       		.uleb128 0x9
 976 03e6 F2030000 		.4byte	.LASF33
 977 03ea 04       		.byte	0x4
 978 03eb E5       		.byte	0xe5
 979 03ec 1E010000 		.4byte	0x11e
 980 03f0 5A       		.byte	0x5a
 981 03f1 00       		.byte	0
 982 03f2 03       		.uleb128 0x3
 983 03f3 8A030000 		.4byte	.LASF65
 984 03f7 04       		.byte	0x4
 985 03f8 E7       		.byte	0xe7
 986 03f9 AD030000 		.4byte	0x3ad
 987 03fd 10       		.uleb128 0x10
 988 03fe 29040000 		.4byte	.LASF76
 989 0402 01       		.byte	0x1
 990 0403 6504     		.2byte	0x465
 991 0405 E0000000 		.4byte	0xe0
 992 0409 01       		.byte	0x1
 993 040a 33040000 		.4byte	0x433
 994 040e 11       		.uleb128 0x11
 995 040f 3D030000 		.4byte	.LASF66
 996 0413 01       		.byte	0x1
 997 0414 6504     		.2byte	0x465
 998 0416 8C000000 		.4byte	0x8c
 999 041a 11       		.uleb128 0x11
 1000 041b 40040000 		.4byte	.LASF67
 1001 041f 01       		.byte	0x1
 1002 0420 6504     		.2byte	0x465
 1003 0422 E0000000 		.4byte	0xe0
 1004 0426 12       		.uleb128 0x12
 1005 0427 70747200 		.ascii	"ptr\000"
 1006 042b 01       		.byte	0x1
 1007 042c 6704     		.2byte	0x467
 1008 042e E0000000 		.4byte	0xe0
 1009 0432 00       		.byte	0
 1010 0433 13       		.uleb128 0x13
 1011 0434 FD030000 		.4byte	0x3fd
 1012 0438 00000000 		.4byte	.LFB33
 1013 043c 0C000000 		.4byte	.LFE33-.LFB33
 1014 0440 01       		.uleb128 0x1
 1015 0441 9C       		.byte	0x9c
 1016 0442 5D040000 		.4byte	0x45d
 1017 0446 14       		.uleb128 0x14
 1018 0447 0E040000 		.4byte	0x40e
 1019 044b 00000000 		.4byte	.LLST0
 1020 044f 15       		.uleb128 0x15
 1021 0450 1A040000 		.4byte	0x41a
 1022 0454 01       		.uleb128 0x1
 1023 0455 51       		.byte	0x51
 1024 0456 16       		.uleb128 0x16
 1025 0457 26040000 		.4byte	0x426
 1026 045b 00       		.byte	0
 1027 045c 00       		.byte	0
 1028 045d 05       		.uleb128 0x5
 1029 045e 8C000000 		.4byte	0x8c
 1030 0462 6D040000 		.4byte	0x46d
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 59


 1031 0466 06       		.uleb128 0x6
 1032 0467 C9000000 		.4byte	0xc9
 1033 046b 0B       		.byte	0xb
 1034 046c 00       		.byte	0
 1035 046d 17       		.uleb128 0x17
 1036 046e D1000000 		.4byte	.LASF68
 1037 0472 05       		.byte	0x5
 1038 0473 32       		.byte	0x32
 1039 0474 5D040000 		.4byte	0x45d
 1040 0478 05       		.uleb128 0x5
 1041 0479 03       		.byte	0x3
 1042 047a 00000000 		.4byte	i2cBuf
 1043 047e 17       		.uleb128 0x17
 1044 047f 3E000000 		.4byte	.LASF69
 1045 0483 04       		.byte	0x4
 1046 0484 E9       		.byte	0xe9
 1047 0485 F2030000 		.4byte	0x3f2
 1048 0489 05       		.uleb128 0x5
 1049 048a 03       		.byte	0x3
 1050 048b 00000000 		.4byte	gStruct_t
 1051 048f 17       		.uleb128 0x17
 1052 0490 31000000 		.4byte	.LASF70
 1053 0494 04       		.byte	0x4
 1054 0495 EC       		.byte	0xec
 1055 0496 A0040000 		.4byte	0x4a0
 1056 049a 05       		.uleb128 0x5
 1057 049b 03       		.byte	0x3
 1058 049c 00000000 		.4byte	g_Struct_Ptr
 1059 04a0 07       		.uleb128 0x7
 1060 04a1 04       		.byte	0x4
 1061 04a2 F2030000 		.4byte	0x3f2
 1062 04a6 18       		.uleb128 0x18
 1063 04a7 B6000000 		.4byte	.LASF71
 1064 04ab 05       		.byte	0x5
 1065 04ac 2E03     		.2byte	0x32e
 1066 04ae E6000000 		.4byte	0xe6
 1067 04b2 05       		.uleb128 0x5
 1068 04b3 03       		.byte	0x3
 1069 04b4 00000000 		.4byte	isAttachInterrupt
 1070 04b8 18       		.uleb128 0x18
 1071 04b9 AC000000 		.4byte	.LASF72
 1072 04bd 05       		.byte	0x5
 1073 04be 3003     		.2byte	0x330
 1074 04c0 8C000000 		.4byte	0x8c
 1075 04c4 05       		.uleb128 0x5
 1076 04c5 03       		.byte	0x3
 1077 04c6 00000000 		.4byte	gTimerVar
 1078 04ca 00       		.byte	0
 1079              		.section	.debug_abbrev,"",%progbits
 1080              	.Ldebug_abbrev0:
 1081 0000 01       		.uleb128 0x1
 1082 0001 11       		.uleb128 0x11
 1083 0002 01       		.byte	0x1
 1084 0003 25       		.uleb128 0x25
 1085 0004 0E       		.uleb128 0xe
 1086 0005 13       		.uleb128 0x13
 1087 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 60


 1088 0007 03       		.uleb128 0x3
 1089 0008 0E       		.uleb128 0xe
 1090 0009 1B       		.uleb128 0x1b
 1091 000a 0E       		.uleb128 0xe
 1092 000b 55       		.uleb128 0x55
 1093 000c 17       		.uleb128 0x17
 1094 000d 11       		.uleb128 0x11
 1095 000e 01       		.uleb128 0x1
 1096 000f 10       		.uleb128 0x10
 1097 0010 17       		.uleb128 0x17
 1098 0011 00       		.byte	0
 1099 0012 00       		.byte	0
 1100 0013 02       		.uleb128 0x2
 1101 0014 24       		.uleb128 0x24
 1102 0015 00       		.byte	0
 1103 0016 0B       		.uleb128 0xb
 1104 0017 0B       		.uleb128 0xb
 1105 0018 3E       		.uleb128 0x3e
 1106 0019 0B       		.uleb128 0xb
 1107 001a 03       		.uleb128 0x3
 1108 001b 0E       		.uleb128 0xe
 1109 001c 00       		.byte	0
 1110 001d 00       		.byte	0
 1111 001e 03       		.uleb128 0x3
 1112 001f 16       		.uleb128 0x16
 1113 0020 00       		.byte	0
 1114 0021 03       		.uleb128 0x3
 1115 0022 0E       		.uleb128 0xe
 1116 0023 3A       		.uleb128 0x3a
 1117 0024 0B       		.uleb128 0xb
 1118 0025 3B       		.uleb128 0x3b
 1119 0026 0B       		.uleb128 0xb
 1120 0027 49       		.uleb128 0x49
 1121 0028 13       		.uleb128 0x13
 1122 0029 00       		.byte	0
 1123 002a 00       		.byte	0
 1124 002b 04       		.uleb128 0x4
 1125 002c 24       		.uleb128 0x24
 1126 002d 00       		.byte	0
 1127 002e 0B       		.uleb128 0xb
 1128 002f 0B       		.uleb128 0xb
 1129 0030 3E       		.uleb128 0x3e
 1130 0031 0B       		.uleb128 0xb
 1131 0032 03       		.uleb128 0x3
 1132 0033 08       		.uleb128 0x8
 1133 0034 00       		.byte	0
 1134 0035 00       		.byte	0
 1135 0036 05       		.uleb128 0x5
 1136 0037 01       		.uleb128 0x1
 1137 0038 01       		.byte	0x1
 1138 0039 49       		.uleb128 0x49
 1139 003a 13       		.uleb128 0x13
 1140 003b 01       		.uleb128 0x1
 1141 003c 13       		.uleb128 0x13
 1142 003d 00       		.byte	0
 1143 003e 00       		.byte	0
 1144 003f 06       		.uleb128 0x6
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 61


 1145 0040 21       		.uleb128 0x21
 1146 0041 00       		.byte	0
 1147 0042 49       		.uleb128 0x49
 1148 0043 13       		.uleb128 0x13
 1149 0044 2F       		.uleb128 0x2f
 1150 0045 0B       		.uleb128 0xb
 1151 0046 00       		.byte	0
 1152 0047 00       		.byte	0
 1153 0048 07       		.uleb128 0x7
 1154 0049 0F       		.uleb128 0xf
 1155 004a 00       		.byte	0
 1156 004b 0B       		.uleb128 0xb
 1157 004c 0B       		.uleb128 0xb
 1158 004d 49       		.uleb128 0x49
 1159 004e 13       		.uleb128 0x13
 1160 004f 00       		.byte	0
 1161 0050 00       		.byte	0
 1162 0051 08       		.uleb128 0x8
 1163 0052 13       		.uleb128 0x13
 1164 0053 01       		.byte	0x1
 1165 0054 0B       		.uleb128 0xb
 1166 0055 0B       		.uleb128 0xb
 1167 0056 3A       		.uleb128 0x3a
 1168 0057 0B       		.uleb128 0xb
 1169 0058 3B       		.uleb128 0x3b
 1170 0059 0B       		.uleb128 0xb
 1171 005a 01       		.uleb128 0x1
 1172 005b 13       		.uleb128 0x13
 1173 005c 00       		.byte	0
 1174 005d 00       		.byte	0
 1175 005e 09       		.uleb128 0x9
 1176 005f 0D       		.uleb128 0xd
 1177 0060 00       		.byte	0
 1178 0061 03       		.uleb128 0x3
 1179 0062 0E       		.uleb128 0xe
 1180 0063 3A       		.uleb128 0x3a
 1181 0064 0B       		.uleb128 0xb
 1182 0065 3B       		.uleb128 0x3b
 1183 0066 0B       		.uleb128 0xb
 1184 0067 49       		.uleb128 0x49
 1185 0068 13       		.uleb128 0x13
 1186 0069 38       		.uleb128 0x38
 1187 006a 0B       		.uleb128 0xb
 1188 006b 00       		.byte	0
 1189 006c 00       		.byte	0
 1190 006d 0A       		.uleb128 0xa
 1191 006e 13       		.uleb128 0x13
 1192 006f 01       		.byte	0x1
 1193 0070 03       		.uleb128 0x3
 1194 0071 0E       		.uleb128 0xe
 1195 0072 0B       		.uleb128 0xb
 1196 0073 0B       		.uleb128 0xb
 1197 0074 3A       		.uleb128 0x3a
 1198 0075 0B       		.uleb128 0xb
 1199 0076 3B       		.uleb128 0x3b
 1200 0077 0B       		.uleb128 0xb
 1201 0078 01       		.uleb128 0x1
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 62


 1202 0079 13       		.uleb128 0x13
 1203 007a 00       		.byte	0
 1204 007b 00       		.byte	0
 1205 007c 0B       		.uleb128 0xb
 1206 007d 0D       		.uleb128 0xd
 1207 007e 00       		.byte	0
 1208 007f 03       		.uleb128 0x3
 1209 0080 0E       		.uleb128 0xe
 1210 0081 3A       		.uleb128 0x3a
 1211 0082 0B       		.uleb128 0xb
 1212 0083 3B       		.uleb128 0x3b
 1213 0084 0B       		.uleb128 0xb
 1214 0085 49       		.uleb128 0x49
 1215 0086 13       		.uleb128 0x13
 1216 0087 0B       		.uleb128 0xb
 1217 0088 0B       		.uleb128 0xb
 1218 0089 0D       		.uleb128 0xd
 1219 008a 0B       		.uleb128 0xb
 1220 008b 0C       		.uleb128 0xc
 1221 008c 0B       		.uleb128 0xb
 1222 008d 38       		.uleb128 0x38
 1223 008e 0B       		.uleb128 0xb
 1224 008f 00       		.byte	0
 1225 0090 00       		.byte	0
 1226 0091 0C       		.uleb128 0xc
 1227 0092 17       		.uleb128 0x17
 1228 0093 01       		.byte	0x1
 1229 0094 0B       		.uleb128 0xb
 1230 0095 0B       		.uleb128 0xb
 1231 0096 3A       		.uleb128 0x3a
 1232 0097 0B       		.uleb128 0xb
 1233 0098 3B       		.uleb128 0x3b
 1234 0099 0B       		.uleb128 0xb
 1235 009a 01       		.uleb128 0x1
 1236 009b 13       		.uleb128 0x13
 1237 009c 00       		.byte	0
 1238 009d 00       		.byte	0
 1239 009e 0D       		.uleb128 0xd
 1240 009f 0D       		.uleb128 0xd
 1241 00a0 00       		.byte	0
 1242 00a1 03       		.uleb128 0x3
 1243 00a2 08       		.uleb128 0x8
 1244 00a3 3A       		.uleb128 0x3a
 1245 00a4 0B       		.uleb128 0xb
 1246 00a5 3B       		.uleb128 0x3b
 1247 00a6 0B       		.uleb128 0xb
 1248 00a7 49       		.uleb128 0x49
 1249 00a8 13       		.uleb128 0x13
 1250 00a9 00       		.byte	0
 1251 00aa 00       		.byte	0
 1252 00ab 0E       		.uleb128 0xe
 1253 00ac 0D       		.uleb128 0xd
 1254 00ad 00       		.byte	0
 1255 00ae 03       		.uleb128 0x3
 1256 00af 0E       		.uleb128 0xe
 1257 00b0 3A       		.uleb128 0x3a
 1258 00b1 0B       		.uleb128 0xb
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 63


 1259 00b2 3B       		.uleb128 0x3b
 1260 00b3 0B       		.uleb128 0xb
 1261 00b4 49       		.uleb128 0x49
 1262 00b5 13       		.uleb128 0x13
 1263 00b6 00       		.byte	0
 1264 00b7 00       		.byte	0
 1265 00b8 0F       		.uleb128 0xf
 1266 00b9 0D       		.uleb128 0xd
 1267 00ba 00       		.byte	0
 1268 00bb 03       		.uleb128 0x3
 1269 00bc 08       		.uleb128 0x8
 1270 00bd 3A       		.uleb128 0x3a
 1271 00be 0B       		.uleb128 0xb
 1272 00bf 3B       		.uleb128 0x3b
 1273 00c0 0B       		.uleb128 0xb
 1274 00c1 49       		.uleb128 0x49
 1275 00c2 13       		.uleb128 0x13
 1276 00c3 38       		.uleb128 0x38
 1277 00c4 0B       		.uleb128 0xb
 1278 00c5 00       		.byte	0
 1279 00c6 00       		.byte	0
 1280 00c7 10       		.uleb128 0x10
 1281 00c8 2E       		.uleb128 0x2e
 1282 00c9 01       		.byte	0x1
 1283 00ca 3F       		.uleb128 0x3f
 1284 00cb 19       		.uleb128 0x19
 1285 00cc 03       		.uleb128 0x3
 1286 00cd 0E       		.uleb128 0xe
 1287 00ce 3A       		.uleb128 0x3a
 1288 00cf 0B       		.uleb128 0xb
 1289 00d0 3B       		.uleb128 0x3b
 1290 00d1 05       		.uleb128 0x5
 1291 00d2 27       		.uleb128 0x27
 1292 00d3 19       		.uleb128 0x19
 1293 00d4 49       		.uleb128 0x49
 1294 00d5 13       		.uleb128 0x13
 1295 00d6 20       		.uleb128 0x20
 1296 00d7 0B       		.uleb128 0xb
 1297 00d8 01       		.uleb128 0x1
 1298 00d9 13       		.uleb128 0x13
 1299 00da 00       		.byte	0
 1300 00db 00       		.byte	0
 1301 00dc 11       		.uleb128 0x11
 1302 00dd 05       		.uleb128 0x5
 1303 00de 00       		.byte	0
 1304 00df 03       		.uleb128 0x3
 1305 00e0 0E       		.uleb128 0xe
 1306 00e1 3A       		.uleb128 0x3a
 1307 00e2 0B       		.uleb128 0xb
 1308 00e3 3B       		.uleb128 0x3b
 1309 00e4 05       		.uleb128 0x5
 1310 00e5 49       		.uleb128 0x49
 1311 00e6 13       		.uleb128 0x13
 1312 00e7 00       		.byte	0
 1313 00e8 00       		.byte	0
 1314 00e9 12       		.uleb128 0x12
 1315 00ea 34       		.uleb128 0x34
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 64


 1316 00eb 00       		.byte	0
 1317 00ec 03       		.uleb128 0x3
 1318 00ed 08       		.uleb128 0x8
 1319 00ee 3A       		.uleb128 0x3a
 1320 00ef 0B       		.uleb128 0xb
 1321 00f0 3B       		.uleb128 0x3b
 1322 00f1 05       		.uleb128 0x5
 1323 00f2 49       		.uleb128 0x49
 1324 00f3 13       		.uleb128 0x13
 1325 00f4 00       		.byte	0
 1326 00f5 00       		.byte	0
 1327 00f6 13       		.uleb128 0x13
 1328 00f7 2E       		.uleb128 0x2e
 1329 00f8 01       		.byte	0x1
 1330 00f9 31       		.uleb128 0x31
 1331 00fa 13       		.uleb128 0x13
 1332 00fb 11       		.uleb128 0x11
 1333 00fc 01       		.uleb128 0x1
 1334 00fd 12       		.uleb128 0x12
 1335 00fe 06       		.uleb128 0x6
 1336 00ff 40       		.uleb128 0x40
 1337 0100 18       		.uleb128 0x18
 1338 0101 9742     		.uleb128 0x2117
 1339 0103 19       		.uleb128 0x19
 1340 0104 01       		.uleb128 0x1
 1341 0105 13       		.uleb128 0x13
 1342 0106 00       		.byte	0
 1343 0107 00       		.byte	0
 1344 0108 14       		.uleb128 0x14
 1345 0109 05       		.uleb128 0x5
 1346 010a 00       		.byte	0
 1347 010b 31       		.uleb128 0x31
 1348 010c 13       		.uleb128 0x13
 1349 010d 02       		.uleb128 0x2
 1350 010e 17       		.uleb128 0x17
 1351 010f 00       		.byte	0
 1352 0110 00       		.byte	0
 1353 0111 15       		.uleb128 0x15
 1354 0112 05       		.uleb128 0x5
 1355 0113 00       		.byte	0
 1356 0114 31       		.uleb128 0x31
 1357 0115 13       		.uleb128 0x13
 1358 0116 02       		.uleb128 0x2
 1359 0117 18       		.uleb128 0x18
 1360 0118 00       		.byte	0
 1361 0119 00       		.byte	0
 1362 011a 16       		.uleb128 0x16
 1363 011b 34       		.uleb128 0x34
 1364 011c 00       		.byte	0
 1365 011d 31       		.uleb128 0x31
 1366 011e 13       		.uleb128 0x13
 1367 011f 1C       		.uleb128 0x1c
 1368 0120 0B       		.uleb128 0xb
 1369 0121 00       		.byte	0
 1370 0122 00       		.byte	0
 1371 0123 17       		.uleb128 0x17
 1372 0124 34       		.uleb128 0x34
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 65


 1373 0125 00       		.byte	0
 1374 0126 03       		.uleb128 0x3
 1375 0127 0E       		.uleb128 0xe
 1376 0128 3A       		.uleb128 0x3a
 1377 0129 0B       		.uleb128 0xb
 1378 012a 3B       		.uleb128 0x3b
 1379 012b 0B       		.uleb128 0xb
 1380 012c 49       		.uleb128 0x49
 1381 012d 13       		.uleb128 0x13
 1382 012e 3F       		.uleb128 0x3f
 1383 012f 19       		.uleb128 0x19
 1384 0130 02       		.uleb128 0x2
 1385 0131 18       		.uleb128 0x18
 1386 0132 00       		.byte	0
 1387 0133 00       		.byte	0
 1388 0134 18       		.uleb128 0x18
 1389 0135 34       		.uleb128 0x34
 1390 0136 00       		.byte	0
 1391 0137 03       		.uleb128 0x3
 1392 0138 0E       		.uleb128 0xe
 1393 0139 3A       		.uleb128 0x3a
 1394 013a 0B       		.uleb128 0xb
 1395 013b 3B       		.uleb128 0x3b
 1396 013c 05       		.uleb128 0x5
 1397 013d 49       		.uleb128 0x49
 1398 013e 13       		.uleb128 0x13
 1399 013f 3F       		.uleb128 0x3f
 1400 0140 19       		.uleb128 0x19
 1401 0141 02       		.uleb128 0x2
 1402 0142 18       		.uleb128 0x18
 1403 0143 00       		.byte	0
 1404 0144 00       		.byte	0
 1405 0145 00       		.byte	0
 1406              		.section	.debug_loc,"",%progbits
 1407              	.Ldebug_loc0:
 1408              	.LLST0:
 1409 0000 00000000 		.4byte	.LVL0
 1410 0004 0A000000 		.4byte	.LVL1
 1411 0008 0100     		.2byte	0x1
 1412 000a 50       		.byte	0x50
 1413 000b 0A000000 		.4byte	.LVL1
 1414 000f 0C000000 		.4byte	.LFE33
 1415 0013 0400     		.2byte	0x4
 1416 0015 F3       		.byte	0xf3
 1417 0016 01       		.uleb128 0x1
 1418 0017 50       		.byte	0x50
 1419 0018 9F       		.byte	0x9f
 1420 0019 00000000 		.4byte	0
 1421 001d 00000000 		.4byte	0
 1422              		.section	.debug_aranges,"",%progbits
 1423 0000 1C000000 		.4byte	0x1c
 1424 0004 0200     		.2byte	0x2
 1425 0006 00000000 		.4byte	.Ldebug_info0
 1426 000a 04       		.byte	0x4
 1427 000b 00       		.byte	0
 1428 000c 0000     		.2byte	0
 1429 000e 0000     		.2byte	0
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 66


 1430 0010 00000000 		.4byte	.LFB33
 1431 0014 0C000000 		.4byte	.LFE33-.LFB33
 1432 0018 00000000 		.4byte	0
 1433 001c 00000000 		.4byte	0
 1434              		.section	.debug_ranges,"",%progbits
 1435              	.Ldebug_ranges0:
 1436 0000 00000000 		.4byte	.LFB33
 1437 0004 0C000000 		.4byte	.LFE33
 1438 0008 00000000 		.4byte	0
 1439 000c 00000000 		.4byte	0
 1440              		.section	.debug_line,"",%progbits
 1441              	.Ldebug_line0:
 1442 0000 74010000 		.section	.debug_str,"MS",%progbits,1
 1442      02005901 
 1442      00000201 
 1442      FB0E0D00 
 1442      01010101 
 1443              	.LASF26:
 1444 0000 6750444F 		.ascii	"gPDO_Index\000"
 1444      5F496E64 
 1444      657800
 1445              	.LASF58:
 1446 000b 69734765 		.ascii	"isGetStatusInited\000"
 1446      74537461 
 1446      74757349 
 1446      6E697465 
 1446      6400
 1447              	.LASF27:
 1448 001d 6750444F 		.ascii	"gPDO_Type\000"
 1448      5F547970 
 1448      6500
 1449              	.LASF25:
 1450 0027 674D6178 		.ascii	"gMax_Op_I\000"
 1450      5F4F705F 
 1450      4900
 1451              	.LASF70:
 1452 0031 675F5374 		.ascii	"g_Struct_Ptr\000"
 1452      72756374 
 1452      5F507472 
 1452      00
 1453              	.LASF69:
 1454 003e 67537472 		.ascii	"gStruct_t\000"
 1454      7563745F 
 1454      7400
 1455              	.LASF2:
 1456 0048 73686F72 		.ascii	"short int\000"
 1456      7420696E 
 1456      7400
 1457              	.LASF21:
 1458 0052 47657442 		.ascii	"GetBattStatusBuf\000"
 1458      61747453 
 1458      74617475 
 1458      73427566 
 1458      00
 1459              	.LASF19:
 1460 0063 73697A65 		.ascii	"sizetype\000"
 1460      74797065 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 67


 1460      00
 1461              	.LASF7:
 1462 006c 5F5F7569 		.ascii	"__uint32_t\000"
 1462      6E743332 
 1462      5F7400
 1463              	.LASF4:
 1464 0077 5F5F7569 		.ascii	"__uint16_t\000"
 1464      6E743136 
 1464      5F7400
 1465              	.LASF34:
 1466 0082 67445554 		.ascii	"gDUTSpecRev\000"
 1466      53706563 
 1466      52657600 
 1467              	.LASF50:
 1468 008e 7661725F 		.ascii	"var_src\000"
 1468      73726300 
 1469              	.LASF12:
 1470 0096 75696E74 		.ascii	"uint8_t\000"
 1470      385F7400 
 1471              	.LASF63:
 1472 009e 67507265 		.ascii	"gPrev_SRCCaps\000"
 1472      765F5352 
 1472      43436170 
 1472      7300
 1473              	.LASF72:
 1474 00ac 6754696D 		.ascii	"gTimerVar\000"
 1474      65725661 
 1474      7200
 1475              	.LASF71:
 1476 00b6 69734174 		.ascii	"isAttachInterrupt\000"
 1476      74616368 
 1476      496E7465 
 1476      72727570 
 1476      7400
 1477              	.LASF48:
 1478 00c8 6D61785F 		.ascii	"max_volt\000"
 1478      766F6C74 
 1478      00
 1479              	.LASF68:
 1480 00d1 69326342 		.ascii	"i2cBuf\000"
 1480      756600
 1481              	.LASF15:
 1482 00d8 666C6F61 		.ascii	"float\000"
 1482      7400
 1483              	.LASF31:
 1484 00de 69734455 		.ascii	"isDUT_FallBack\000"
 1484      545F4661 
 1484      6C6C4261 
 1484      636B00
 1485              	.LASF40:
 1486 00ed 56415253 		.ascii	"VARSRC\000"
 1486      524300
 1487              	.LASF30:
 1488 00f4 43617061 		.ascii	"Capability_Mismatch\000"
 1488      62696C69 
 1488      74795F4D 
 1488      69736D61 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 68


 1488      74636800 
 1489              	.LASF51:
 1490 0108 6261745F 		.ascii	"bat_src\000"
 1490      73726300 
 1491              	.LASF32:
 1492 0110 6750444F 		.ascii	"gPDOsCount\000"
 1492      73436F75 
 1492      6E7400
 1493              	.LASF24:
 1494 011b 674F7065 		.ascii	"gOperating_I\000"
 1494      72617469 
 1494      6E675F49 
 1494      00
 1495              	.LASF6:
 1496 0128 6C6F6E67 		.ascii	"long int\000"
 1496      20696E74 
 1496      00
 1497              	.LASF37:
 1498 0131 766F6C74 		.ascii	"voltage\000"
 1498      61676500 
 1499              	.LASF29:
 1500 0139 67446574 		.ascii	"gDetachFlag\000"
 1500      61636846 
 1500      6C616700 
 1501              	.LASF42:
 1502 0145 6D61785F 		.ascii	"max_voltage\000"
 1502      766F6C74 
 1502      61676500 
 1503              	.LASF3:
 1504 0151 5F5F7569 		.ascii	"__uint8_t\000"
 1504      6E74385F 
 1504      7400
 1505              	.LASF46:
 1506 015b 6D61785F 		.ascii	"max_cur\000"
 1506      63757200 
 1507              	.LASF64:
 1508 0163 674C6F67 		.ascii	"gLogData\000"
 1508      44617461 
 1508      00
 1509              	.LASF18:
 1510 016c 6C6F6E67 		.ascii	"long double\000"
 1510      20646F75 
 1510      626C6500 
 1511              	.LASF54:
 1512 0178 674E6F4F 		.ascii	"gNoOfPDOs\000"
 1512      6650444F 
 1512      7300
 1513              	.LASF43:
 1514 0182 42415453 		.ascii	"BATSRC\000"
 1514      524300
 1515              	.LASF1:
 1516 0189 756E7369 		.ascii	"unsigned char\000"
 1516      676E6564 
 1516      20636861 
 1516      7200
 1517              	.LASF38:
 1518 0197 73757070 		.ascii	"supply_type\000"
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 69


 1518      6C795F74 
 1518      79706500 
 1519              	.LASF22:
 1520 01a3 47657453 		.ascii	"GetStatusBuf\000"
 1520      74617475 
 1520      73427566 
 1520      00
 1521              	.LASF44:
 1522 01b0 6D61785F 		.ascii	"max_power\000"
 1522      706F7765 
 1522      7200
 1523              	.LASF0:
 1524 01ba 7369676E 		.ascii	"signed char\000"
 1524      65642063 
 1524      68617200 
 1525              	.LASF10:
 1526 01c6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1526      206C6F6E 
 1526      6720756E 
 1526      7369676E 
 1526      65642069 
 1527              	.LASF14:
 1528 01dd 75696E74 		.ascii	"uint32_t\000"
 1528      33325F74 
 1528      00
 1529              	.LASF11:
 1530 01e6 756E7369 		.ascii	"unsigned int\000"
 1530      676E6564 
 1530      20696E74 
 1530      00
 1531              	.LASF13:
 1532 01f3 75696E74 		.ascii	"uint16_t\000"
 1532      31365F74 
 1532      00
 1533              	.LASF8:
 1534 01fc 6C6F6E67 		.ascii	"long unsigned int\000"
 1534      20756E73 
 1534      69676E65 
 1534      6420696E 
 1534      7400
 1535              	.LASF28:
 1536 020e 67526571 		.ascii	"gRequestEnableFlag\000"
 1536      75657374 
 1536      456E6162 
 1536      6C65466C 
 1536      616700
 1537              	.LASF36:
 1538 0221 6D61785F 		.ascii	"max_current\000"
 1538      63757272 
 1538      656E7400 
 1539              	.LASF5:
 1540 022d 73686F72 		.ascii	"short unsigned int\000"
 1540      7420756E 
 1540      7369676E 
 1540      65642069 
 1540      6E7400
 1541              	.LASF17:
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 70


 1542 0240 63686172 		.ascii	"char\000"
 1542      00
 1543              	.LASF59:
 1544 0245 69734F43 		.ascii	"isOCPOccurred\000"
 1544      504F6363 
 1544      75727265 
 1544      6400
 1545              	.LASF20:
 1546 0253 5F426F6F 		.ascii	"_Bool\000"
 1546      6C00
 1547              	.LASF47:
 1548 0259 6D696E5F 		.ascii	"min_volt\000"
 1548      766F6C74 
 1548      00
 1549              	.LASF57:
 1550 0262 69734765 		.ascii	"isGetBattStatusInited\000"
 1550      74426174 
 1550      74537461 
 1550      74757349 
 1550      6E697465 
 1551              	.LASF39:
 1552 0278 46495845 		.ascii	"FIXEDSRC\000"
 1552      44535243 
 1552      00
 1553              	.LASF73:
 1554 0281 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1554      43313120 
 1554      352E342E 
 1554      31203230 
 1554      31363036 
 1555 02b4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1555      20726576 
 1555      6973696F 
 1555      6E203233 
 1555      37373135 
 1556 02e7 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects -finline-fu"
 1556      66756E63 
 1556      74696F6E 
 1556      2D736563 
 1556      74696F6E 
 1557 031a 6E637469 		.ascii	"nctions -flto -fno-strict-aliasing\000"
 1557      6F6E7320 
 1557      2D666C74 
 1557      6F202D66 
 1557      6E6F2D73 
 1558              	.LASF66:
 1559 033d 706F7274 		.ascii	"port\000"
 1559      00
 1560              	.LASF41:
 1561 0342 6D696E5F 		.ascii	"min_voltage\000"
 1561      766F6C74 
 1561      61676500 
 1562              	.LASF60:
 1563 034e 67726C4C 		.ascii	"grlLogStructVar_t\000"
 1563      6F675374 
 1563      72756374 
 1563      5661725F 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 71


 1563      7400
 1564              	.LASF62:
 1565 0360 67507265 		.ascii	"gPresent_SRCCaps\000"
 1565      73656E74 
 1565      5F535243 
 1565      43617073 
 1565      00
 1566              	.LASF16:
 1567 0371 646F7562 		.ascii	"double\000"
 1567      6C6500
 1568              	.LASF49:
 1569 0378 66697865 		.ascii	"fixed_src\000"
 1569      645F7372 
 1569      6300
 1570              	.LASF52:
 1571 0382 7070735F 		.ascii	"pps_src\000"
 1571      73726300 
 1572              	.LASF65:
 1573 038a 67726C5F 		.ascii	"grl_Struct_t\000"
 1573      53747275 
 1573      63745F74 
 1573      00
 1574              	.LASF75:
 1575 0397 443A5C56 		.ascii	"D:\\V-TE-PWR\\PDSS_SRC_SNK\\CYPD3171-24LQXQ_pb\\CYP"
 1575      2D54452D 
 1575      5057525C 
 1575      50445353 
 1575      5F535243 
 1576 03c6 44333137 		.ascii	"D3171-24LQXQ_pb.cydsn\000"
 1576      312D3234 
 1576      4C515851 
 1576      5F70622E 
 1576      63796473 
 1577              	.LASF55:
 1578 03dc 67726C53 		.ascii	"grlSrcCapsStructVar_t\000"
 1578      72634361 
 1578      70735374 
 1578      72756374 
 1578      5661725F 
 1579              	.LASF33:
 1580 03f2 67437573 		.ascii	"gCustomConfig\000"
 1580      746F6D43 
 1580      6F6E6669 
 1580      6700
 1581              	.LASF35:
 1582 0400 67726C52 		.ascii	"grlRequestPacketVar_t\000"
 1582      65717565 
 1582      73745061 
 1582      636B6574 
 1582      5661725F 
 1583              	.LASF45:
 1584 0416 50505353 		.ascii	"PPSSRC\000"
 1584      524300
 1585              	.LASF53:
 1586 041d 67726C53 		.ascii	"grlSrcPDPkt\000"
 1586      72635044 
 1586      506B7400 
ARM GAS  C:\Users\prana\AppData\Local\Temp\ccIRvbzx.s 			page 72


 1587              	.LASF76:
 1588 0429 76646D5F 		.ascii	"vdm_get_disc_svid_resp\000"
 1588      6765745F 
 1588      64697363 
 1588      5F737669 
 1588      645F7265 
 1589              	.LASF67:
 1590 0440 72657370 		.ascii	"resp_len_p\000"
 1590      5F6C656E 
 1590      5F7000
 1591              	.LASF23:
 1592 044b 675F4375 		.ascii	"g_Custom_config_Buf\000"
 1592      73746F6D 
 1592      5F636F6E 
 1592      6669675F 
 1592      42756600 
 1593              	.LASF56:
 1594 045f 6746726F 		.ascii	"gFromBufIndex\000"
 1594      6D427566 
 1594      496E6465 
 1594      7800
 1595              	.LASF9:
 1596 046d 6C6F6E67 		.ascii	"long long int\000"
 1596      206C6F6E 
 1596      6720696E 
 1596      7400
 1597              	.LASF74:
 1598 047b 7372635C 		.ascii	"src\\app\\alt_mode\\vdm_task_mngr.c\000"
 1598      6170705C 
 1598      616C745F 
 1598      6D6F6465 
 1598      5C76646D 
 1599              	.LASF61:
 1600 049c 52657175 		.ascii	"RequestPacketConfig\000"
 1600      65737450 
 1600      61636B65 
 1600      74436F6E 
 1600      66696700 
 1601              		.comm	__gnu_lto_v1,1,1
 1602              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
